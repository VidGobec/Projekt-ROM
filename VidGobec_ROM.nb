(* Content-type: application/vnd.wolfram.mathematica *)

(*** Wolfram Notebook File ***)
(* http://www.wolfram.com/nb *)

(* CreatedBy='Mathematica 14.0' *)

(*CacheID: 234*)
(* Internal cache information:
NotebookFileLineBreakTest
NotebookFileLineBreakTest
NotebookDataPosition[       158,          7]
NotebookDataLength[   1518660,      31262]
NotebookOptionsPosition[   1509686,      31119]
NotebookOutlinePosition[   1510144,      31136]
CellTagsIndexPosition[   1510101,      31133]
WindowFrame->Normal*)

(* Beginning of Notebook Content *)
Notebook[{

Cell[CellGroupData[{
Cell["\[CapitalSHacek]tevilo obsojenih po EU", "Title",
 CellChangeTimes->{{3.933641372312371*^9, 3.9336413859534073`*^9}, 
   3.933641424100006*^9, {3.9339098907887383`*^9, 
   3.933909893662092*^9}},ExpressionUUID->"269d62c9-4d7a-984c-b278-\
420cdf45c04b"],

Cell["\<\
Analiza \[SHacek]tevila obsojenih zaradi kaznivih dejanj po dr\[ZHacek]avah \
EU.\
\>", "Text",
 CellChangeTimes->{{3.933909535787733*^9, 3.933909572340355*^9}, 
   3.933909607723524*^9, {3.933909766795086*^9, 3.9339097826325035`*^9}, {
   3.933909924510788*^9, 
   3.9339099291110115`*^9}},ExpressionUUID->"e5562100-914b-f244-ae2b-\
048dc18ce1f9"],

Cell[CellGroupData[{

Cell["Pridobivanje podatkov", "Subtitle",
 CellChangeTimes->{{3.9336414505389423`*^9, 
  3.933641458417979*^9}},ExpressionUUID->"49d8da5b-0ebd-5f4d-96da-\
4deace7aafd3"],

Cell["\<\
pridobivanje podatkov s strani europa.eu (https://commission.europa.eu).   
Uporabil sem naslednje podatkovne zberke:
https://ec.europa.eu/eurostat/databrowser/view/crim_just_sex/default/table?\
lang=en
https://ec.europa.eu/eurostat/databrowser/view/crim_just_age/default/table?\
lang=en\
\>", "Text",
 CellChangeTimes->{{3.933642024597135*^9, 3.933642032261782*^9}, {
  3.933642065659956*^9, 3.933642089011007*^9}, {3.9336421307960567`*^9, 
  3.933642180306713*^9}, {3.933642234074066*^9, 
  3.933642333322508*^9}},ExpressionUUID->"1cf334ac-02b6-904b-afda-\
97c60a93fcb0"],

Cell[BoxData[{
 RowBox[{
  RowBox[{"SetDirectory", "[", 
   RowBox[{"NotebookDirectory", "[", "]"}], "]"}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"data", " ", "=", 
   RowBox[{"Import", "[", "\"\<crim_just_sex__custom.xlsx\>\"", "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"data2", "=", 
    RowBox[{"Import", "[", "\"\<crim_just_age__custom.xlsx\>\"", "]"}]}], 
   ";"}], "\[IndentingNewLine]"}], "\[IndentingNewLine]"}], "Input",
 CellChangeTimes->{{3.9301753881756954`*^9, 3.930175403782362*^9}, {
   3.930175436694212*^9, 3.930175459806311*^9}, {3.930175495630871*^9, 
   3.930175503004168*^9}, {3.930175781933678*^9, 3.930175897153349*^9}, {
   3.930175941074442*^9, 3.930175941498104*^9}, 3.930179857980543*^9, {
   3.930179898191979*^9, 3.930179901200798*^9}, {3.930180901856266*^9, 
   3.930180907129776*^9}, {3.933304355191126*^9, 3.9333043782887287`*^9}, {
   3.933304755630036*^9, 3.933304851466584*^9}, {3.9333048972201385`*^9, 
   3.933304899836352*^9}, {3.9333050593307114`*^9, 3.933305158940714*^9}, {
   3.933305772976111*^9, 3.9333057901220493`*^9}, {3.933305889283022*^9, 
   3.933305909922739*^9}, {3.9333065256785336`*^9, 3.933306578743828*^9}, {
   3.933306635310423*^9, 3.9333066371195126`*^9}, {3.9333067091495705`*^9, 
   3.933306744130322*^9}, {3.933306857608034*^9, 3.933306867551352*^9}, {
   3.933306941587254*^9, 3.933306992278719*^9}, {3.933307880882866*^9, 
   3.933307947441862*^9}, {3.933308094875263*^9, 3.933308098254568*^9}, {
   3.933308128837354*^9, 3.9333081560883675`*^9}, {3.933308197383568*^9, 
   3.93330830158654*^9}, {3.933308383261015*^9, 3.933308389508236*^9}, {
   3.933308519723255*^9, 3.933308574645331*^9}, {3.9333086342115135`*^9, 
   3.933308653655401*^9}, {3.933308695728319*^9, 3.933308710367378*^9}, {
   3.933308797189038*^9, 3.933308982956524*^9}, 3.933309015410568*^9, {
   3.9333772851609*^9, 3.933377286741251*^9}, {3.933487278361326*^9, 
   3.933487285946886*^9}, 3.9334887629797497`*^9, 3.933488974618435*^9, 
   3.933549049865658*^9, {3.933634726898609*^9, 3.933634763601639*^9}, {
   3.9336375232205944`*^9, 3.9336375596208897`*^9}, {3.933638082207342*^9, 
   3.933638104065607*^9}, {3.933638192305591*^9, 3.93363819257863*^9}, {
   3.933641480664543*^9, 3.9336415251389027`*^9}, {3.933641867038327*^9, 
   3.9336418841160145`*^9}, {3.93373307430774*^9, 3.9337330821359596`*^9}, {
   3.933903947849474*^9, 3.933903957472271*^9}, {3.9339040373160973`*^9, 
   3.9339040744998264`*^9}},
 CellLabel->
  "In[285]:=",ExpressionUUID->"6e468ade-a625-3443-9187-11271a976eb5"]
}, Open  ]],

Cell[CellGroupData[{

Cell["Oblikovanje podatkov", "Subtitle",
 CellChangeTimes->{{3.9336419818099747`*^9, 3.9336420023020535`*^9}, {
  3.933642400212227*^9, 
  3.933642405239479*^9}},ExpressionUUID->"ecc50059-7314-6c4c-991e-\
abcd79c28c9a"],

Cell["Odstranil sem odve\[CHacek]ne podatke.", "Text",
 CellChangeTimes->{{3.933642418999904*^9, 3.933642420490574*^9}, {
   3.933642553310377*^9, 3.933642566069393*^9}, 
   3.9336485640391617`*^9},ExpressionUUID->"f1623cdf-ab31-3841-8f82-\
38e0cc5dd887"],

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", 
   RowBox[{"izpustimo", " ", "prvi", " ", "dve", " ", "tabeli"}], "*)"}], 
  "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{
    RowBox[{"data", " ", "=", 
     RowBox[{"Drop", "[", 
      RowBox[{"data", ",", "2"}], "]"}]}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"data2", " ", "=", 
     RowBox[{"Drop", "[", 
      RowBox[{"data2", ",", "2"}], "]"}]}], ";"}], "\[IndentingNewLine]", 
   RowBox[{"(*", 
    RowBox[{"funkcija", ",", " ", 
     RowBox[{
     "ki", " ", "odstrani", " ", "odvecne", " ", "vrstice", " ", 
      "pridobljenih", " ", "podatkov"}]}], "*)"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"odstrani", "[", 
     RowBox[{"dat_", ",", " ", "i_"}], "]"}], " ", ":=", " ", 
    RowBox[{"Drop", "[", 
     RowBox[{
      RowBox[{"Drop", "[", 
       RowBox[{
        RowBox[{"Drop", "[", 
         RowBox[{
          RowBox[{"dat", "[", 
           RowBox[{"[", "i", "]"}], "]"}], ",", " ", "9"}], "]"}], ",", " ", 
        RowBox[{"-", "3"}]}], "]"}], ",", 
      RowBox[{"{", "2", "}"}]}], "]"}]}], "\[IndentingNewLine]", 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"newdata", " ", "=", " ", 
     RowBox[{"Table", "[", 
      RowBox[{
       RowBox[{"odstrani", "[", 
        RowBox[{"data", ",", "i"}], "]"}], ",", 
       RowBox[{"{", 
        RowBox[{"i", ",", " ", "1", ",", " ", 
         RowBox[{"Length", "[", "data", "]"}]}], "}"}]}], "]"}]}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"newdata2", " ", "=", 
     RowBox[{"Table", "[", 
      RowBox[{
       RowBox[{"odstrani", "[", 
        RowBox[{"data2", ",", "i"}], "]"}], ",", 
       RowBox[{"{", 
        RowBox[{"i", ",", " ", "1", ",", " ", 
         RowBox[{"Length", "[", "data2", "]"}]}], "}"}]}], "]"}]}], 
    ";"}]}]}]], "Input",
 CellChangeTimes->{{3.933381029633827*^9, 3.933381104701912*^9}, {
   3.9333812982197094`*^9, 3.933381300339805*^9}, {3.933381345931839*^9, 
   3.9333813473388615`*^9}, {3.933381561354382*^9, 3.933381573189667*^9}, {
   3.933382000865433*^9, 3.9333820630717945`*^9}, {3.9333854051739483`*^9, 
   3.9333854056979046`*^9}, {3.933387211177729*^9, 3.933387384487007*^9}, {
   3.9334870448608437`*^9, 3.933487090883068*^9}, {3.933487161019427*^9, 
   3.933487200073477*^9}, {3.933487301350352*^9, 3.933487449499639*^9}, {
   3.93348748178319*^9, 3.93348757953632*^9}, {3.933487612934208*^9, 
   3.9334876146793175`*^9}, {3.9334876628462505`*^9, 3.933487681262823*^9}, {
   3.93348785709964*^9, 3.9334878831954136`*^9}, {3.933487928857319*^9, 
   3.933487931097727*^9}, {3.933488513135298*^9, 3.93348852506394*^9}, {
   3.933488726554128*^9, 3.9334887434394703`*^9}, {3.933499532248764*^9, 
   3.933499689583473*^9}, {3.9335484871064224`*^9, 3.933548605515959*^9}, {
   3.9335486948338766`*^9, 3.9335487036813736`*^9}, {3.9335488556671658`*^9, 
   3.933548973433409*^9}, {3.9335490316426144`*^9, 3.933549089040464*^9}, {
   3.933549197646005*^9, 3.9335496462125854`*^9}, 3.933561054787498*^9, {
   3.933641550156122*^9, 3.933641704666497*^9}, {3.933641812153313*^9, 
   3.9336418768106613`*^9}, {3.933641940138948*^9, 3.933641943393381*^9}, {
   3.933642489405365*^9, 3.933642530755058*^9}, {3.9336425733674107`*^9, 
   3.9336425889869385`*^9}, {3.933800555561081*^9, 3.9338005569331036`*^9}},
 CellLabel->"In[3]:=",ExpressionUUID->"43efbc65-fe3b-3e41-9a1e-3fe691406e18"],

Cell["\<\
Naredil sem funkcijo, ki uvo\[ZHacek]eno tabelo podatkov pretvori v dataset \
in nastavi leta, kot naslove stolpcev in dr\[ZHacek]ave, kot naslove vrstic.\
\>", "Text",
 CellChangeTimes->{{3.933642596387337*^9, 
  3.93364273445821*^9}},ExpressionUUID->"fabd39ff-90f3-dd4c-ab25-\
6923c3cc42b7"],

Cell[BoxData[
 RowBox[{"\[IndentingNewLine]", 
  RowBox[{
   RowBox[{
    RowBox[{
     RowBox[{"NarediDataset", "[", "table_", "]"}], ":=", 
     RowBox[{"Module", "[", "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"prvaVrstica", ",", "ostalo", ",", "preoblikovan"}], "}"}], 
       ",", "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{"prvaVrstica", "=", " ", 
         RowBox[{"First", "[", "table", "]"}]}], ";", "\[IndentingNewLine]", 
        RowBox[{"ostalo", "=", 
         RowBox[{"Rest", "[", "table", "]"}]}], ";", "\[IndentingNewLine]", 
        RowBox[{"preoblikovan", "=", 
         RowBox[{"Association", "[", "\[IndentingNewLine]", 
          RowBox[{
           RowBox[{
            RowBox[{
             RowBox[{"#1", "[", 
              RowBox[{"[", "1", "]"}], "]"}], "->", 
             RowBox[{"AssociationThread", "[", 
              RowBox[{
               RowBox[{"Rest", "[", "prvaVrstica", "]"}], "->", 
               RowBox[{"Rest", "[", "#1", "]"}]}], "]"}]}], "&"}], "/@", 
           "ostalo"}], "\[IndentingNewLine]", "]"}]}], ";", 
        "\[IndentingNewLine]", 
        RowBox[{"Dataset", "[", "preoblikovan", "]"}]}]}], "]"}]}], ";"}], 
   "\[IndentingNewLine]", "\[IndentingNewLine]", "\n", 
   RowBox[{
    RowBox[{"data", "=", 
     RowBox[{"NarediDataset", " ", "/@", " ", "newdata"}]}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"data2", " ", "=", " ", 
     RowBox[{"NarediDataset", " ", "/@", "newdata2"}]}], ";"}], 
   "\[IndentingNewLine]", "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"steviloVsiObsojeni", " ", "=", " ", 
     RowBox[{"data", "[", 
      RowBox[{"[", "1", "]"}], "]"}]}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"steviloMoskiObsojeni", " ", "=", " ", 
     RowBox[{"data", "[", 
      RowBox[{"[", "3", "]"}], "]"}]}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"steviloZenskeObsojene", "=", 
     RowBox[{"data", "[", 
      RowBox[{"[", "5", "]"}], "]"}]}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"vsiObsojeni", " ", "=", " ", 
     RowBox[{"data", "[", 
      RowBox[{"[", "2", "]"}], "]"}]}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"moskiObsojeni", " ", "=", " ", 
     RowBox[{"data", "[", 
      RowBox[{"[", "4", "]"}], "]"}]}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"zenskeObsojene", "=", 
     RowBox[{"data", "[", 
      RowBox[{"[", "6", "]"}], "]"}]}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"steviloMladoletniObsojeni", " ", "=", " ", 
     RowBox[{"data2", "[", 
      RowBox[{"[", "1", "]"}], "]"}]}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"steviloPolnoletniObsojeni", "=", 
     RowBox[{"data2", "[", 
      RowBox[{"[", "3", "]"}], "]"}]}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"MladoletniObsojeni", " ", "=", " ", 
     RowBox[{"data2", "[", 
      RowBox[{"[", "2", "]"}], "]"}]}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"PolnoletniObsojeni", "=", 
     RowBox[{"data2", "[", 
      RowBox[{"[", "4", "]"}], "]"}]}], ";"}], 
   "\[IndentingNewLine]"}]}]], "Input",
 CellChangeTimes->{{3.933381029633827*^9, 3.933381104701912*^9}, {
   3.9333812982197094`*^9, 3.933381300339805*^9}, {3.933381345931839*^9, 
   3.9333813473388615`*^9}, {3.933381561354382*^9, 3.933381573189667*^9}, {
   3.933382000865433*^9, 3.9333820630717945`*^9}, {3.9333854051739483`*^9, 
   3.9333854056979046`*^9}, {3.933387211177729*^9, 3.933387384487007*^9}, {
   3.9334870448608437`*^9, 3.933487090883068*^9}, {3.933487161019427*^9, 
   3.933487200073477*^9}, {3.933487301350352*^9, 3.933487449499639*^9}, {
   3.93348748178319*^9, 3.93348757953632*^9}, {3.933487612934208*^9, 
   3.9334876146793175`*^9}, {3.9334876628462505`*^9, 3.933487681262823*^9}, {
   3.93348785709964*^9, 3.9334878831954136`*^9}, {3.933487928857319*^9, 
   3.933487931097727*^9}, {3.933488513135298*^9, 3.93348852506394*^9}, {
   3.933488726554128*^9, 3.9334887434394703`*^9}, {3.933499532248764*^9, 
   3.933499689583473*^9}, {3.9335484871064224`*^9, 3.933548605515959*^9}, {
   3.9335486948338766`*^9, 3.9335487036813736`*^9}, {3.9335488556671658`*^9, 
   3.933548973433409*^9}, {3.9335490316426144`*^9, 3.933549089040464*^9}, {
   3.933549197646005*^9, 3.9335496462125854`*^9}, 3.933561054787498*^9, {
   3.933641550156122*^9, 3.933641704666497*^9}, {3.933641812153313*^9, 
   3.9336418768106613`*^9}, {3.933641940138948*^9, 3.933641943393381*^9}, {
   3.933642489405365*^9, 3.933642530755058*^9}, {3.9336425733674107`*^9, 
   3.9336425889869385`*^9}, {3.933642768449262*^9, 3.933642953369789*^9}, {
   3.93373335221678*^9, 3.933733414592811*^9}, {3.933737865105736*^9, 
   3.933737910898182*^9}, 3.93381971546657*^9, 3.9339042957188663`*^9, 
   3.933904376350733*^9, {3.933908448770487*^9, 3.9339085154505367`*^9}},
 CellLabel->
  "In[330]:=",ExpressionUUID->"7650c932-9b96-7c41-aa1f-bd7d9611950b"]
}, Open  ]],

Cell[CellGroupData[{

Cell["\[CapitalSHacek]tevilo obsojenih vseh dr\[ZHacek]av po letih.", \
"Subtitle",
 CellChangeTimes->{{3.93364347659721*^9, 3.933643498781227*^9}, 
   3.9336485751005783`*^9},ExpressionUUID->"b5f1fe34-9c53-5148-b0d5-\
bcdce153dcc4"],

Cell["\<\
V tem delu seminarske naloge bom na splo\[SHacek]no pregledal, kak\[SHacek]na \
je razlika v \[SHacek]tevilu obsojenih vsako leto med posameznimi \
dr\[ZHacek]avami EU.\
\>", "Text",
 CellChangeTimes->{{3.9336438930576077`*^9, 3.93364389980991*^9}, {
   3.9336439630974007`*^9, 3.9336439633686447`*^9}, {3.9336447222127247`*^9, 
   3.933644760891306*^9}, 
   3.9336485834725723`*^9},ExpressionUUID->"36a63030-dc0d-5f45-ad96-\
241669fd2a9e"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"vsiObsojeni", "\[IndentingNewLine]", 
  "\[IndentingNewLine]"}]], "Input",
 CellChangeTimes->{{3.930175876899864*^9, 3.930175883643659*^9}, {
   3.93018097733016*^9, 3.930181038512465*^9}, 3.933306916374782*^9, {
   3.933378188276655*^9, 3.933378209707911*^9}, {3.9333854180183334`*^9, 
   3.933385420868828*^9}, {3.9333855537537727`*^9, 3.933385562870579*^9}, {
   3.933385628151924*^9, 3.933385685326153*^9}, {3.933385987088602*^9, 
   3.933386037076309*^9}, 3.933386929614498*^9, {3.933387064968319*^9, 
   3.933387070778691*^9}, {3.933387190795647*^9, 3.9333871993015194`*^9}, {
   3.9333874099941177`*^9, 3.93338744672402*^9}, {3.933387616026108*^9, 
   3.933387628726334*^9}, {3.9333876837930794`*^9, 3.933387685076533*^9}, {
   3.93338772394812*^9, 3.933387732161566*^9}, {3.9333877692632484`*^9, 
   3.933387811836849*^9}, {3.933387872351921*^9, 3.9333879095293293`*^9}, {
   3.9333880153465424`*^9, 3.933388070525963*^9}, {3.933388244564953*^9, 
   3.933388308243437*^9}, {3.93338834131213*^9, 3.933388342377499*^9}, {
   3.933388471602281*^9, 3.933388493804622*^9}, {3.933487996510437*^9, 
   3.93348804153582*^9}, {3.933556334138378*^9, 3.933556476676094*^9}, {
   3.9335565069093876`*^9, 3.9335567223412666`*^9}, 3.9335568253303623`*^9, {
   3.933556855533398*^9, 3.933556857295889*^9}, {3.9335569214619274`*^9, 
   3.933556945132061*^9}, {3.9335570549980984`*^9, 3.9335570877437305`*^9}, {
   3.933557237166851*^9, 3.9335572380961*^9}, {3.9335572801101074`*^9, 
   3.9335572895601196`*^9}, {3.933557383509472*^9, 3.933557432932904*^9}, {
   3.933557486205242*^9, 3.9335575356934757`*^9}, {3.93355756821208*^9, 
   3.933557583452311*^9}, {3.933557668038908*^9, 3.933557814200377*^9}, {
   3.933557861951086*^9, 3.9335578666521416`*^9}, 3.9335579282667904`*^9, {
   3.933558031611004*^9, 3.933558136980255*^9}, {3.933558203427918*^9, 
   3.933558205895544*^9}, {3.933558338946525*^9, 3.9335583527383385`*^9}, {
   3.933558422324184*^9, 3.93355842931257*^9}, {3.9335585079861717`*^9, 
   3.933558526438347*^9}, 3.933558565990743*^9, {3.933558601258634*^9, 
   3.933558657961994*^9}, {3.933558700295183*^9, 3.93355875940275*^9}, {
   3.933558845154892*^9, 3.9335588606999207`*^9}, {3.933558901972969*^9, 
   3.933558916202228*^9}, {3.933558978544571*^9, 3.933559056605953*^9}, {
   3.933559238795374*^9, 3.933559243872999*^9}, {3.933559349118431*^9, 
   3.933559352282039*^9}, {3.93355952224304*^9, 3.933559552748354*^9}, {
   3.933559606012997*^9, 3.933559614482731*^9}, {3.933559788084019*^9, 
   3.933559812238287*^9}, {3.9335602802268543`*^9, 3.933560291759926*^9}, {
   3.93356035111792*^9, 3.933560431289824*^9}, {3.9335604910477905`*^9, 
   3.9335605165420494`*^9}, {3.9335607316617985`*^9, 
   3.9335607379398823`*^9}, {3.9335608230935707`*^9, 
   3.9335608252267075`*^9}, {3.933561041035681*^9, 3.933561093185156*^9}, {
   3.933561175737305*^9, 3.93356119938451*^9}, {3.93356132896761*^9, 
   3.933561378406147*^9}, {3.9335632158132935`*^9, 3.9335632259067345`*^9}, {
   3.933563357826828*^9, 3.93356340708678*^9}, {3.93356352706781*^9, 
   3.933563614073909*^9}, {3.933563688052225*^9, 3.9335636944410667`*^9}, {
   3.933563742573849*^9, 3.933563804371037*^9}, {3.933563881525038*^9, 
   3.9335639258590317`*^9}, {3.933564713882567*^9, 3.933564778257546*^9}, {
   3.933637068077503*^9, 3.933637068094681*^9}, {3.9336388370461025`*^9, 
   3.9336388636174145`*^9}, {3.933643541066323*^9, 3.93364354117536*^9}, 
   3.933643773137087*^9, {3.93364440081558*^9, 3.933644406973387*^9}, {
   3.933644821039877*^9, 3.933644847115315*^9}, {3.933645481219738*^9, 
   3.933645497308117*^9}, {3.933645810466642*^9, 3.9336458276633663`*^9}},
 CellLabel->"In[21]:=",ExpressionUUID->"94b2502b-d605-7145-9857-94641e49e5eb"],

Cell[BoxData[
 TagBox[
  TagBox[
   DynamicModuleBox[{TypeSystem`NestedGrid`PackagePrivate`$state$$ = <|
    "InitialData" -> <|
      "Belgium" -> <|
        "2013" -> 1270.93, "2014" -> 1051.21, "2015" -> 1175.75, "2016" -> 
         ":", "2017" -> 2099.12, "2018" -> 2014.28, "2019" -> 1771.98, "2020" -> 
         1388.22, "2021" -> ":", "2022" -> ":"|>, 
       "Bulgaria" -> <|
        "2013" -> 468.29, "2014" -> 439.56, "2015" -> 385.81, "2016" -> 
         395.61, "2017" -> 363.29, "2018" -> 340.04, "2019" -> 334.13, "2020" -> 
         314.88, "2021" -> 348.74, "2022" -> 351.62|>, 
       "Czechia" -> <|
        "2013" -> 741.49, "2014" -> 692.75, "2015" -> 622.2, "2016" -> 582., 
         "2017" -> 526.57, "2018" -> 513.17, "2019" -> 522.02, "2020" -> 
         454.07, "2021" -> 473.06, "2022" -> 477.59|>, 
       "Denmark" -> <|
        "2013" -> 3680.67, "2014" -> 3720.97, "2015" -> 3574.63, "2016" -> 
         3442.74, "2017" -> 3095.18, "2018" -> 3162.05, "2019" -> 885.95, 
         "2020" -> 966.17, "2021" -> 904.31, "2022" -> 896.68|>, 
       "Germany" -> <|
        "2013" -> 938.78, "2014" -> 927.08, "2015" -> 910.73, "2016" -> 
         897.92, "2017" -> 867.7, "2018" -> 860.39, "2019" -> 877.95, "2020" -> 
         840.8, "2021" -> 796.22, "2022" -> 777.75|>, 
       "Estonia" -> <|
        "2013" -> 642.11, "2014" -> 582.91, "2015" -> 560.89, "2016" -> 
         578.98, "2017" -> 510.32, "2018" -> 432.25, "2019" -> 430.47, "2020" -> 
         372.39, "2021" -> 343.52, "2022" -> 288.11|>, 
       "Ireland" -> <|
        "2013" -> ":", "2014" -> ":", "2015" -> ":", "2016" -> ":", "2017" -> 
         ":", "2018" -> ":", "2019" -> ":", "2020" -> ":", "2021" -> ":", 
         "2022" -> ":"|>, 
       "Greece" -> <|
        "2013" -> ":", "2014" -> ":", "2015" -> ":", "2016" -> ":", "2017" -> 
         ":", "2018" -> ":", "2019" -> ":", "2020" -> ":", "2021" -> 50.81, 
         "2022" -> 45.56|>, 
       "Spain" -> <|
        "2013" -> 526.07, "2014" -> 502.83, "2015" -> 507.81, "2016" -> 
         499.69, "2017" -> 642.58, "2018" -> 643.62, "2019" -> 641.38, "2020" -> 
         491.57, "2021" -> 624.08, "2022" -> 680.22|>, 
       "France" -> <|
        "2013" -> 1017.65, "2014" -> 874.29, "2015" -> 959.24, "2016" -> 
         703.17, "2017" -> 698.97, "2018" -> 815.02, "2019" -> 818.06, "2020" -> 
         680.72, "2021" -> 796.01, "2022" -> ":"|>, 
       "Croatia" -> <|
        "2013" -> 402.66, "2014" -> 363.85, "2015" -> 307.01, "2016" -> 
         328.75, "2017" -> 299.07, "2018" -> 296.38, "2019" -> 326.16, "2020" -> 
         293.29, "2021" -> 310.92, "2022" -> 326.98|>, 
       "Italy" -> <|
        "2013" -> 413.8, "2014" -> 373.36, "2015" -> 363.46, "2016" -> 346.03,
          "2017" -> 321.38, "2018" -> 357.1, "2019" -> ":", "2020" -> ":", 
         "2021" -> ":", "2022" -> ":"|>, 
       "Cyprus" -> <|
        "2013" -> 7023.97, "2014" -> 8007.93, "2015" -> 6386.6, "2016" -> 
         5342.8, "2017" -> 5086.21, "2018" -> 4570.74, "2019" -> 4563.88, 
         "2020" -> 4002.34, "2021" -> 3745.84, "2022" -> ":"|>, 
       "Latvia" -> <|
        "2013" -> 426.22, "2014" -> 460.31, "2015" -> 481.25, "2016" -> 
         453.49, "2017" -> 474.95, "2018" -> 443.92, "2019" -> 421.83, "2020" -> 
         371.81, "2021" -> 361.76, "2022" -> 263.95|>, 
       "Lithuania" -> <|
        "2013" -> 657.15, "2014" -> 772.62, "2015" -> 591.29, "2016" -> 
         536.88, "2017" -> 634.08, "2018" -> 704.15, "2019" -> 628.59, "2020" -> 
         574.78, "2021" -> 536.9, "2022" -> 533.11|>, 
       "Luxembourg" -> <|
        "2013" -> ":", "2014" -> ":", "2015" -> ":", "2016" -> 1463.43, 
         "2017" -> 1616.14, "2018" -> 1362.95, "2019" -> 1235.07, "2020" -> 
         1198.52, "2021" -> 1265.42, "2022" -> 1153.4|>, 
       "Hungary" -> <|
        "2013" -> 709.73, "2014" -> 772.65, "2015" -> 718.43, "2016" -> 
         729.22, "2017" -> 701.55, "2018" -> 681.92, "2019" -> 655.32, "2020" -> 
         551.2, "2021" -> 564.56, "2022" -> 571.85|>, 
       "Malta" -> <|
        "2013" -> ":", "2014" -> 665.54, "2015" -> 613.39, "2016" -> 381.87, 
         "2017" -> 502.07, "2018" -> ":", "2019" -> ":", "2020" -> ":", 
         "2021" -> ":", "2022" -> ":"|>, 
       "Netherlands" -> <|
        "2013" -> 549.42, "2014" -> 528.12, "2015" -> 541.08, "2016" -> 
         481.76, "2017" -> 480.46, "2018" -> 457.17, "2019" -> 444.55, "2020" -> 
         341.48, "2021" -> 355.37, "2022" -> 355.55|>, 
       "Austria" -> <|
        "2013" -> 407.29, "2014" -> 3569.13, "2015" -> 374.12, "2016" -> 
         349.98, "2017" -> 350.47, "2018" -> 313.47, "2019" -> 307.99, "2020" -> 
         266.44, "2021" -> 265.67, "2022" -> 272.48|>, 
       "Poland" -> <|
        "2013" -> 978.24, "2014" -> 819.99, "2015" -> 716.4, "2016" -> 792.44,
          "2017" -> 661.24, "2018" -> 751.83, "2019" -> 781.87, "2020" -> 
         689.06, "2021" -> ":", "2022" -> ":"|>, 
       "Portugal" -> <|
        "2013" -> 678.64, "2014" -> 506.95, "2015" -> 569.9, "2016" -> 546.01,
          "2017" -> 504.08, "2018" -> 453.68, "2019" -> 440.92, "2020" -> 
         341.72, "2021" -> 414.4, "2022" -> 441.98|>, 
       "Romania" -> <|
        "2013" -> 235.43, "2014" -> 252.37, "2015" -> 212.76, "2016" -> 
         165.58, "2017" -> 180.19, "2018" -> 164.87, "2019" -> 173.49, "2020" -> 
         162.88, "2021" -> 183.93, "2022" -> 172.81|>, 
       "Slovenia" -> <|
        "2013" -> 571.1, "2014" -> 472.03, "2015" -> 399.49, "2016" -> 339.41,
          "2017" -> 315.65, "2018" -> 305.97, "2019" -> 300.64, "2020" -> 
         238.9, "2021" -> 283.27, "2022" -> 264.19|>, 
       "Slovakia" -> <|
        "2013" -> 666.79, "2014" -> 620.57, "2015" -> 547.67, "2016" -> 
         501.03, "2017" -> 484.42, "2018" -> 539.86, "2019" -> 521.63, "2020" -> 
         465.24, "2021" -> 433.02, "2022" -> 464.68|>, 
       "Finland" -> <|
        "2013" -> 3366.32, "2014" -> 3174.6, "2015" -> 3320.58, "2016" -> 
         2843.54, "2017" -> 1497.77, "2018" -> 1502.27, "2019" -> 1503.39, 
         "2020" -> 1460.41, "2021" -> 1459.04, "2022" -> 1397.96|>, 
       "Sweden" -> <|
        "2013" -> 673.84, "2014" -> 628.96, "2015" -> 608.82, "2016" -> 
         575.16, "2017" -> 574., "2018" -> 598.45, "2019" -> 612.97, "2020" -> 
         668.07, "2021" -> 718.56, "2022" -> 733.2|>, 
       "Iceland" -> <|
        "2013" -> ":", "2014" -> 764.27, "2015" -> 727.74, "2016" -> 701.59, 
         "2017" -> 675.63, "2018" -> ":", "2019" -> ":", "2020" -> ":", 
         "2021" -> ":", "2022" -> ":"|>, 
       "Liechtenstein" -> <|
        "2013" -> ":", "2014" -> 2903.39, "2015" -> 2697.64, "2016" -> 
         2562.33, "2017" -> 2874.9, "2018" -> ":", "2019" -> ":", "2020" -> 
         ":", "2021" -> ":", "2022" -> ":"|>, 
       "Norway" -> <|
        "2013" -> 1327.35, "2014" -> 1250.18, "2015" -> 1285.82, "2016" -> 
         1196.44, "2017" -> 1135.8, "2018" -> 281.55, "2019" -> 276.51, 
         "2020" -> 265.54, "2021" -> 250.44, "2022" -> 236.28|>, 
       "Switzerland" -> <|
        "2013" -> 1332.23, "2014" -> 1337.62, "2015" -> 1312.25, "2016" -> 
         1301.69, "2017" -> 1248.95, "2018" -> 1251.57, "2019" -> 1137.22, 
         "2020" -> 1129.09, "2021" -> 1140.81, "2022" -> 1166.05|>, 
       "England and Wales" -> <|
        "2013" -> 2066.57, "2014" -> 2118.27, "2015" -> 2152.9, "2016" -> 
         2118.8, "2017" -> ":", "2018" -> ":", "2019" -> ":", "2020" -> ":", 
         "2021" -> ":", "2022" -> ":"|>, 
       "Scotland (NUTS 2021)" -> <|
        "2013" -> 858.23, "2014" -> ":", "2015" -> ":", "2016" -> ":", "2017" -> 
         1527.61, "2018" -> ":", "2019" -> ":", "2020" -> ":", "2021" -> ":", 
         "2022" -> ":"|>, 
       "Northern Ireland (UK) (NUTS 2021)" -> <|
        "2013" -> 1931.18, "2014" -> 1449.74, "2015" -> 1320.48, "2016" -> 
         1236.16, "2017" -> 1265.91, "2018" -> ":", "2019" -> ":", "2020" -> 
         ":", "2021" -> ":", "2022" -> ":"|>, 
       "Bosnia and Herzegovina" -> <|
        "2013" -> ":", "2014" -> ":", "2015" -> ":", "2016" -> ":", "2017" -> 
         ":", "2018" -> ":", "2019" -> ":", "2020" -> ":", "2021" -> ":", 
         "2022" -> ":"|>, 
       "Montenegro" -> <|
        "2013" -> 521.51, "2014" -> 500.55, "2015" -> 442.86, "2016" -> 
         596.58, "2017" -> 566.85, "2018" -> 537.31, "2019" -> 580.38, "2020" -> 
         595.46, "2021" -> 569.48, "2022" -> 486.01|>, 
       "North Macedonia" -> <|
        "2013" -> 485.48, "2014" -> 587.87, "2015" -> ":", "2016" -> ":", 
         "2017" -> 133.53, "2018" -> ":", "2019" -> 241.49, "2020" -> 322.74, 
         "2021" -> 387.47, "2022" -> 437.15|>, 
       "Albania" -> <|
        "2013" -> ":", "2014" -> ":", "2015" -> 559.33, "2016" -> 508.21, 
         "2017" -> 379.3, "2018" -> 404.62, "2019" -> 386.11, "2020" -> 
         346.21, "2021" -> 445.38, "2022" -> ":"|>, 
       "Serbia" -> <|
        "2013" -> 485.82, "2014" -> 523.45, "2015" -> 493.58, "2016" -> 
         488.34, "2017" -> 474.3, "2018" -> 447.02, "2019" -> 427.76, "2020" -> 
         385.84, "2021" -> 420.44, "2022" -> 403.3|>, 
       "T\[UDoubleDot]rkiye" -> <|
        "2013" -> 661.94, "2014" -> 642.86, "2015" -> 670.84, "2016" -> 
         583.17, "2017" -> 558.09, "2018" -> 687.25, "2019" -> 722.4, "2020" -> 
         592.05, "2021" -> 827.95, "2022" -> 805.83|>, 
       "Kosovo*" -> <|
        "2013" -> ":", "2014" -> ":", "2015" -> ":", "2016" -> 1047.13, 
         "2017" -> 1094.4, "2018" -> 1136.17, "2019" -> 1002.47, "2020" -> 
         ":", "2021" -> ":", "2022" -> ":"|>|>, "AllowEmbedding" -> True, 
     "InitialShape" -> TypeSystem`PackageScope`HeaderShape[<|{All, 
          TypeSystem`PackageScope`KeyDummy[0]} -> 1, {All, "2013"} -> 
        1, {All, "2014"} -> 1, {All, "2015"} -> 1, {All, "2016"} -> 
        1, {All, "2017"} -> 1, {All, "2018"} -> 1, {All, "2019"} -> 
        1, {All, "2020"} -> 1, {All, "2021"} -> 1, {All, "2022"} -> 1|>, 
       TypeSystem`PackageScope`Limited[
        TypeSystem`PackageScope`ColumnShape[
         TypeSystem`PackageScope`KeyValueShape[
          TypeSystem`PackageScope`AtomShape[369.6], 
          TypeSystem`PackageScope`Limited[
           
           TypeSystem`PackageScope`RowShape[<|
            "2013" -> TypeSystem`PackageScope`UnknownShape[False], "2014" -> 
             TypeSystem`PackageScope`UnknownShape[False], "2015" -> 
             TypeSystem`PackageScope`UnknownShape[False], "2016" -> 
             TypeSystem`PackageScope`UnknownShape[False], "2017" -> 
             TypeSystem`PackageScope`UnknownShape[False], "2018" -> 
             TypeSystem`PackageScope`UnknownShape[False], "2019" -> 
             TypeSystem`PackageScope`UnknownShape[False], "2020" -> 
             TypeSystem`PackageScope`UnknownShape[False], "2021" -> 
             TypeSystem`PackageScope`UnknownShape[False], "2022" -> 
             TypeSystem`PackageScope`UnknownShape[False]|>], 
           DirectedInfinity[1], 10, {All}]]], 20, 
        DirectedInfinity[1], {}]], "InitialType" -> TypeSystem`Assoc[
       TypeSystem`Atom[String], 
       TypeSystem`Struct[{
        "2013", "2014", "2015", "2016", "2017", "2018", "2019", "2020", 
         "2021", "2022"}, {
        TypeSystem`AnyType, TypeSystem`AnyType, TypeSystem`AnyType, 
         TypeSystem`AnyType, TypeSystem`AnyType, TypeSystem`AnyType, 
         TypeSystem`AnyType, TypeSystem`AnyType, TypeSystem`AnyType, 
         TypeSystem`AnyType}], 41], "Meta" -> <||>, "RowTarget" -> 20, 
     "ColumnTarget" -> 10, "Shape" -> 
     TypeSystem`PackageScope`HeaderShape[<|{All, 
          TypeSystem`PackageScope`KeyDummy[0]} -> 1, {All, "2013"} -> 
        1, {All, "2014"} -> 1, {All, "2015"} -> 1, {All, "2016"} -> 
        1, {All, "2017"} -> 1, {All, "2018"} -> 1, {All, "2019"} -> 
        1, {All, "2020"} -> 1, {All, "2021"} -> 1, {All, "2022"} -> 1|>, 
       TypeSystem`PackageScope`Limited[
        TypeSystem`PackageScope`ColumnShape[
         TypeSystem`PackageScope`KeyValueShape[
          TypeSystem`PackageScope`AtomShape[369.6], 
          TypeSystem`PackageScope`Limited[
           
           TypeSystem`PackageScope`RowShape[<|
            "2013" -> TypeSystem`PackageScope`UnknownShape[False], "2014" -> 
             TypeSystem`PackageScope`UnknownShape[False], "2015" -> 
             TypeSystem`PackageScope`UnknownShape[False], "2016" -> 
             TypeSystem`PackageScope`UnknownShape[False], "2017" -> 
             TypeSystem`PackageScope`UnknownShape[False], "2018" -> 
             TypeSystem`PackageScope`UnknownShape[False], "2019" -> 
             TypeSystem`PackageScope`UnknownShape[False], "2020" -> 
             TypeSystem`PackageScope`UnknownShape[False], "2021" -> 
             TypeSystem`PackageScope`UnknownShape[False], "2022" -> 
             TypeSystem`PackageScope`UnknownShape[False]|>], 
           DirectedInfinity[1], 10, {All}]]], 20, 
        DirectedInfinity[1], {}]], "Type" -> TypeSystem`Assoc[
       TypeSystem`Atom[String], 
       TypeSystem`Struct[{
        "2013", "2014", "2015", "2016", "2017", "2018", "2019", "2020", 
         "2021", "2022"}, {
        TypeSystem`AnyType, TypeSystem`AnyType, TypeSystem`AnyType, 
         TypeSystem`AnyType, TypeSystem`AnyType, TypeSystem`AnyType, 
         TypeSystem`AnyType, TypeSystem`AnyType, TypeSystem`AnyType, 
         TypeSystem`AnyType}], 41], "Path" -> {}, "DisplayedRowCount" -> 20, 
     "DisplayedColumnCount" -> 10, "DataRowCount" -> 41, "DataColumnCount" -> 
     10, "SortPaths" -> {}, "SortDirections" -> {}, "HiddenItemsMap" -> Null, 
     "UpdateType" -> 1|>, TypeSystem`NestedGrid`PackagePrivate`$outputID$$, 
    TypeSystem`NestedGrid`PackagePrivate`$path$$ = {}, 
    TypeSystem`NestedGrid`PackagePrivate`$vPos$$ = 1, 
    TypeSystem`NestedGrid`PackagePrivate`$hPos$$ = 1, 
    TypeSystem`NestedGrid`PackagePrivate`$grid$$ = 
    DynamicModule[{TypeSystem`NestedGrid`PackagePrivate`renderedGrid = Deploy[
        Style[
         Grid[{{
            Item[
             Pane[
              Annotation[
               Mouseover[
                
                Graphics[{}, ImageSize -> 6, BaselinePosition -> 
                 Scaled[-0.15]], 
                Graphics[{
                  GrayLevel[0.6], 
                  
                  Polygon[{{2^Rational[-1, 2], -2^Rational[-1, 2]}, {
                    2^Rational[-1, 2], 2^
                    Rational[-1, 2]}, {-2^Rational[-1, 2], 2^
                    Rational[-1, 2]}, {-2^Rational[-1, 2], -2^
                    Rational[-1, 2]}}]}, ImageSize -> 6, BaselinePosition -> 
                 Scaled[-0.15]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                All, Keys}, "KeyDummy", True], "Mouse"], 
              ImageSize -> {{1, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["2013", 
                  Style[
                  "2013", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                   All, "2013"}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                All, "2013"}, "ColumnHeader", True], "Mouse"], 
              ImageSize -> {{1, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["2014", 
                  Style[
                  "2014", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                   All, "2014"}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                All, "2014"}, "ColumnHeader", True], "Mouse"], 
              ImageSize -> {{1, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["2015", 
                  Style[
                  "2015", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                   All, "2015"}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                All, "2015"}, "ColumnHeader", True], "Mouse"], 
              ImageSize -> {{1, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["2016", 
                  Style[
                  "2016", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                   All, "2016"}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                All, "2016"}, "ColumnHeader", True], "Mouse"], 
              ImageSize -> {{1, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["2017", 
                  Style[
                  "2017", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                   All, "2017"}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                All, "2017"}, "ColumnHeader", True], "Mouse"], 
              ImageSize -> {{1, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["2018", 
                  Style[
                  "2018", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                   All, "2018"}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                All, "2018"}, "ColumnHeader", True], "Mouse"], 
              ImageSize -> {{1, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["2019", 
                  Style[
                  "2019", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                   All, "2019"}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                All, "2019"}, "ColumnHeader", True], "Mouse"], 
              ImageSize -> {{1, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["2020", 
                  Style[
                  "2020", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                   All, "2020"}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                All, "2020"}, "ColumnHeader", True], "Mouse"], 
              ImageSize -> {{1, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["2021", 
                  Style[
                  "2021", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                   All, "2021"}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                All, "2021"}, "ColumnHeader", True], "Mouse"], 
              ImageSize -> {{1, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["2022", 
                  Style[
                  "2022", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                   All, "2022"}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                All, "2022"}, "ColumnHeader", True], "Mouse"], 
              ImageSize -> {{1, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}]}, {
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["Belgium", 
                  Style[
                  "Belgium", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    Key["Belgium"]}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["Belgium"]}, "RowHeader", False], "Mouse"], 
              ImageSize -> {{369.6, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["1270.93"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["Belgium"], 
                 Key["2013"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["1051.21"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["Belgium"], 
                 Key["2014"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["1175.75"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["Belgium"], 
                 Key["2015"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[":", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["Belgium"], 
                 Key["2016"]}, "Item", False], "Mouse"], 
              ImageSize -> {{11.200000000000001`, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["2099.12"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["Belgium"], 
                 Key["2017"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["2014.28"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["Belgium"], 
                 Key["2018"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["1771.98"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["Belgium"], 
                 Key["2019"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["1388.22"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["Belgium"], 
                 Key["2020"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[":", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["Belgium"], 
                 Key["2021"]}, "Item", False], "Mouse"], 
              ImageSize -> {{11.200000000000001`, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[":", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["Belgium"], 
                 Key["2022"]}, "Item", False], "Mouse"], 
              ImageSize -> {{11.200000000000001`, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["Bulgaria", 
                  Style[
                  "Bulgaria", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    Key["Bulgaria"]}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["Bulgaria"]}, "RowHeader", False], "Mouse"], 
              ImageSize -> {{369.6, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["468.29"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["Bulgaria"], 
                 Key["2013"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["439.56"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["Bulgaria"], 
                 Key["2014"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["385.81"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["Bulgaria"], 
                 Key["2015"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["395.61"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["Bulgaria"], 
                 Key["2016"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["363.29"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["Bulgaria"], 
                 Key["2017"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["340.04"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["Bulgaria"], 
                 Key["2018"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["334.13"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["Bulgaria"], 
                 Key["2019"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["314.88"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["Bulgaria"], 
                 Key["2020"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["348.74"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["Bulgaria"], 
                 Key["2021"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["351.62"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["Bulgaria"], 
                 Key["2022"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["Czechia", 
                  Style[
                  "Czechia", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    Key["Czechia"]}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["Czechia"]}, "RowHeader", False], "Mouse"], 
              ImageSize -> {{369.6, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["741.49"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["Czechia"], 
                 Key["2013"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["692.75"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["Czechia"], 
                 Key["2014"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["622.2"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["Czechia"], 
                 Key["2015"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["582.0"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["Czechia"], 
                 Key["2016"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["526.57"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["Czechia"], 
                 Key["2017"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["513.17"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["Czechia"], 
                 Key["2018"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["522.02"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["Czechia"], 
                 Key["2019"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["454.07"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["Czechia"], 
                 Key["2020"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["473.06"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["Czechia"], 
                 Key["2021"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["477.59"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["Czechia"], 
                 Key["2022"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["Denmark", 
                  Style[
                  "Denmark", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    Key["Denmark"]}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["Denmark"]}, "RowHeader", False], "Mouse"], 
              ImageSize -> {{369.6, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["3680.67"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["Denmark"], 
                 Key["2013"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["3720.97"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["Denmark"], 
                 Key["2014"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["3574.63"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["Denmark"], 
                 Key["2015"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["3442.74"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["Denmark"], 
                 Key["2016"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["3095.18"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["Denmark"], 
                 Key["2017"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["3162.05"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["Denmark"], 
                 Key["2018"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["885.95"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["Denmark"], 
                 Key["2019"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["966.17"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["Denmark"], 
                 Key["2020"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["904.31"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["Denmark"], 
                 Key["2021"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["896.68"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["Denmark"], 
                 Key["2022"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["Germany", 
                  Style[
                  "Germany", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    Key["Germany"]}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["Germany"]}, "RowHeader", False], "Mouse"], 
              ImageSize -> {{369.6, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["938.78"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["Germany"], 
                 Key["2013"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["927.08"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["Germany"], 
                 Key["2014"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["910.73"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["Germany"], 
                 Key["2015"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["897.92"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["Germany"], 
                 Key["2016"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["867.7"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["Germany"], 
                 Key["2017"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["860.39"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["Germany"], 
                 Key["2018"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["877.95"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["Germany"], 
                 Key["2019"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["840.8"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["Germany"], 
                 Key["2020"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["796.22"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["Germany"], 
                 Key["2021"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["777.75"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["Germany"], 
                 Key["2022"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["Estonia", 
                  Style[
                  "Estonia", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    Key["Estonia"]}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["Estonia"]}, "RowHeader", False], "Mouse"], 
              ImageSize -> {{369.6, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["642.11"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["Estonia"], 
                 Key["2013"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["582.91"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["Estonia"], 
                 Key["2014"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["560.89"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["Estonia"], 
                 Key["2015"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["578.98"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["Estonia"], 
                 Key["2016"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["510.32"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["Estonia"], 
                 Key["2017"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["432.25"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["Estonia"], 
                 Key["2018"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["430.47"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["Estonia"], 
                 Key["2019"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["372.39"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["Estonia"], 
                 Key["2020"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["343.52"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["Estonia"], 
                 Key["2021"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["288.11"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["Estonia"], 
                 Key["2022"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["Ireland", 
                  Style[
                  "Ireland", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    Key["Ireland"]}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["Ireland"]}, "RowHeader", False], "Mouse"], 
              ImageSize -> {{369.6, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[":", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["Ireland"], 
                 Key["2013"]}, "Item", False], "Mouse"], 
              ImageSize -> {{11.200000000000001`, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[":", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["Ireland"], 
                 Key["2014"]}, "Item", False], "Mouse"], 
              ImageSize -> {{11.200000000000001`, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[":", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["Ireland"], 
                 Key["2015"]}, "Item", False], "Mouse"], 
              ImageSize -> {{11.200000000000001`, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[":", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["Ireland"], 
                 Key["2016"]}, "Item", False], "Mouse"], 
              ImageSize -> {{11.200000000000001`, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[":", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["Ireland"], 
                 Key["2017"]}, "Item", False], "Mouse"], 
              ImageSize -> {{11.200000000000001`, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[":", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["Ireland"], 
                 Key["2018"]}, "Item", False], "Mouse"], 
              ImageSize -> {{11.200000000000001`, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[":", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["Ireland"], 
                 Key["2019"]}, "Item", False], "Mouse"], 
              ImageSize -> {{11.200000000000001`, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[":", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["Ireland"], 
                 Key["2020"]}, "Item", False], "Mouse"], 
              ImageSize -> {{11.200000000000001`, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[":", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["Ireland"], 
                 Key["2021"]}, "Item", False], "Mouse"], 
              ImageSize -> {{11.200000000000001`, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[":", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["Ireland"], 
                 Key["2022"]}, "Item", False], "Mouse"], 
              ImageSize -> {{11.200000000000001`, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["Greece", 
                  Style[
                  "Greece", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    Key["Greece"]}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["Greece"]}, "RowHeader", False], "Mouse"], 
              ImageSize -> {{369.6, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[":", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["Greece"], 
                 Key["2013"]}, "Item", False], "Mouse"], 
              ImageSize -> {{11.200000000000001`, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[":", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["Greece"], 
                 Key["2014"]}, "Item", False], "Mouse"], 
              ImageSize -> {{11.200000000000001`, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[":", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["Greece"], 
                 Key["2015"]}, "Item", False], "Mouse"], 
              ImageSize -> {{11.200000000000001`, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[":", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["Greece"], 
                 Key["2016"]}, "Item", False], "Mouse"], 
              ImageSize -> {{11.200000000000001`, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[":", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["Greece"], 
                 Key["2017"]}, "Item", False], "Mouse"], 
              ImageSize -> {{11.200000000000001`, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[":", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["Greece"], 
                 Key["2018"]}, "Item", False], "Mouse"], 
              ImageSize -> {{11.200000000000001`, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[":", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["Greece"], 
                 Key["2019"]}, "Item", False], "Mouse"], 
              ImageSize -> {{11.200000000000001`, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[":", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["Greece"], 
                 Key["2020"]}, "Item", False], "Mouse"], 
              ImageSize -> {{11.200000000000001`, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["50.81"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["Greece"], 
                 Key["2021"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["45.56"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["Greece"], 
                 Key["2022"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["Spain", 
                  Style[
                  "Spain", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    Key["Spain"]}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["Spain"]}, "RowHeader", False], "Mouse"], 
              ImageSize -> {{369.6, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["526.07"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["Spain"], 
                 Key["2013"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["502.83"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["Spain"], 
                 Key["2014"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["507.81"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["Spain"], 
                 Key["2015"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["499.69"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["Spain"], 
                 Key["2016"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["642.58"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["Spain"], 
                 Key["2017"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["643.62"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["Spain"], 
                 Key["2018"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["641.38"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["Spain"], 
                 Key["2019"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["491.57"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["Spain"], 
                 Key["2020"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["624.08"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["Spain"], 
                 Key["2021"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["680.22"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["Spain"], 
                 Key["2022"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["France", 
                  Style[
                  "France", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    Key["France"]}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["France"]}, "RowHeader", False], "Mouse"], 
              ImageSize -> {{369.6, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["1017.65"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["France"], 
                 Key["2013"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["874.29"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["France"], 
                 Key["2014"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["959.24"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["France"], 
                 Key["2015"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["703.17"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["France"], 
                 Key["2016"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["698.97"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["France"], 
                 Key["2017"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["815.02"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["France"], 
                 Key["2018"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["818.06"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["France"], 
                 Key["2019"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["680.72"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["France"], 
                 Key["2020"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["796.01"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["France"], 
                 Key["2021"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[":", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["France"], 
                 Key["2022"]}, "Item", False], "Mouse"], 
              ImageSize -> {{11.200000000000001`, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["Croatia", 
                  Style[
                  "Croatia", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    Key["Croatia"]}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["Croatia"]}, "RowHeader", False], "Mouse"], 
              ImageSize -> {{369.6, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["402.66"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["Croatia"], 
                 Key["2013"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["363.85"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["Croatia"], 
                 Key["2014"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["307.01"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["Croatia"], 
                 Key["2015"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["328.75"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["Croatia"], 
                 Key["2016"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["299.07"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["Croatia"], 
                 Key["2017"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["296.38"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["Croatia"], 
                 Key["2018"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["326.16"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["Croatia"], 
                 Key["2019"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["293.29"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["Croatia"], 
                 Key["2020"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["310.92"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["Croatia"], 
                 Key["2021"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["326.98"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["Croatia"], 
                 Key["2022"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["Italy", 
                  Style[
                  "Italy", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    Key["Italy"]}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["Italy"]}, "RowHeader", False], "Mouse"], 
              ImageSize -> {{369.6, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["413.8"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["Italy"], 
                 Key["2013"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["373.36"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["Italy"], 
                 Key["2014"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["363.46"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["Italy"], 
                 Key["2015"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["346.03"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["Italy"], 
                 Key["2016"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["321.38"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["Italy"], 
                 Key["2017"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["357.1"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["Italy"], 
                 Key["2018"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[":", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["Italy"], 
                 Key["2019"]}, "Item", False], "Mouse"], 
              ImageSize -> {{11.200000000000001`, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[":", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["Italy"], 
                 Key["2020"]}, "Item", False], "Mouse"], 
              ImageSize -> {{11.200000000000001`, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[":", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["Italy"], 
                 Key["2021"]}, "Item", False], "Mouse"], 
              ImageSize -> {{11.200000000000001`, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[":", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["Italy"], 
                 Key["2022"]}, "Item", False], "Mouse"], 
              ImageSize -> {{11.200000000000001`, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["Cyprus", 
                  Style[
                  "Cyprus", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    Key["Cyprus"]}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["Cyprus"]}, "RowHeader", False], "Mouse"], 
              ImageSize -> {{369.6, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["7023.97"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["Cyprus"], 
                 Key["2013"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["8007.93"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["Cyprus"], 
                 Key["2014"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["6386.6"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["Cyprus"], 
                 Key["2015"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["5342.8"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["Cyprus"], 
                 Key["2016"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["5086.21"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["Cyprus"], 
                 Key["2017"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["4570.74"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["Cyprus"], 
                 Key["2018"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["4563.88"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["Cyprus"], 
                 Key["2019"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["4002.34"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["Cyprus"], 
                 Key["2020"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["3745.84"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["Cyprus"], 
                 Key["2021"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[":", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["Cyprus"], 
                 Key["2022"]}, "Item", False], "Mouse"], 
              ImageSize -> {{11.200000000000001`, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["Latvia", 
                  Style[
                  "Latvia", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    Key["Latvia"]}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["Latvia"]}, "RowHeader", False], "Mouse"], 
              ImageSize -> {{369.6, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["426.22"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["Latvia"], 
                 Key["2013"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["460.31"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["Latvia"], 
                 Key["2014"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["481.25"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["Latvia"], 
                 Key["2015"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["453.49"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["Latvia"], 
                 Key["2016"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["474.95"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["Latvia"], 
                 Key["2017"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["443.92"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["Latvia"], 
                 Key["2018"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["421.83"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["Latvia"], 
                 Key["2019"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["371.81"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["Latvia"], 
                 Key["2020"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["361.76"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["Latvia"], 
                 Key["2021"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["263.95"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["Latvia"], 
                 Key["2022"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["Lithuania", 
                  Style[
                  "Lithuania", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    Key["Lithuania"]}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["Lithuania"]}, "RowHeader", False], "Mouse"], 
              ImageSize -> {{369.6, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["657.15"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["Lithuania"], 
                 Key["2013"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["772.62"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["Lithuania"], 
                 Key["2014"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["591.29"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["Lithuania"], 
                 Key["2015"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["536.88"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["Lithuania"], 
                 Key["2016"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["634.08"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["Lithuania"], 
                 Key["2017"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["704.15"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["Lithuania"], 
                 Key["2018"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["628.59"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["Lithuania"], 
                 Key["2019"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["574.78"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["Lithuania"], 
                 Key["2020"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["536.9"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["Lithuania"], 
                 Key["2021"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["533.11"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["Lithuania"], 
                 Key["2022"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["Luxembourg", 
                  Style[
                  "Luxembourg", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    Key["Luxembourg"]}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["Luxembourg"]}, "RowHeader", False], "Mouse"], 
              ImageSize -> {{369.6, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[":", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["Luxembourg"], 
                 Key["2013"]}, "Item", False], "Mouse"], 
              ImageSize -> {{11.200000000000001`, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[":", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["Luxembourg"], 
                 Key["2014"]}, "Item", False], "Mouse"], 
              ImageSize -> {{11.200000000000001`, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[":", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["Luxembourg"], 
                 Key["2015"]}, "Item", False], "Mouse"], 
              ImageSize -> {{11.200000000000001`, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["1463.43"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["Luxembourg"], 
                 Key["2016"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["1616.14"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["Luxembourg"], 
                 Key["2017"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["1362.95"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["Luxembourg"], 
                 Key["2018"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["1235.07"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["Luxembourg"], 
                 Key["2019"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["1198.52"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["Luxembourg"], 
                 Key["2020"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["1265.42"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["Luxembourg"], 
                 Key["2021"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["1153.4"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["Luxembourg"], 
                 Key["2022"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["Hungary", 
                  Style[
                  "Hungary", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    Key["Hungary"]}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["Hungary"]}, "RowHeader", False], "Mouse"], 
              ImageSize -> {{369.6, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["709.73"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["Hungary"], 
                 Key["2013"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["772.65"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["Hungary"], 
                 Key["2014"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["718.43"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["Hungary"], 
                 Key["2015"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["729.22"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["Hungary"], 
                 Key["2016"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["701.55"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["Hungary"], 
                 Key["2017"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["681.92"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["Hungary"], 
                 Key["2018"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["655.32"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["Hungary"], 
                 Key["2019"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["551.2"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["Hungary"], 
                 Key["2020"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["564.56"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["Hungary"], 
                 Key["2021"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["571.85"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["Hungary"], 
                 Key["2022"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["Malta", 
                  Style[
                  "Malta", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    Key["Malta"]}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["Malta"]}, "RowHeader", False], "Mouse"], 
              ImageSize -> {{369.6, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[":", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["Malta"], 
                 Key["2013"]}, "Item", False], "Mouse"], 
              ImageSize -> {{11.200000000000001`, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["665.54"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["Malta"], 
                 Key["2014"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["613.39"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["Malta"], 
                 Key["2015"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["381.87"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["Malta"], 
                 Key["2016"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["502.07"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["Malta"], 
                 Key["2017"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[":", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["Malta"], 
                 Key["2018"]}, "Item", False], "Mouse"], 
              ImageSize -> {{11.200000000000001`, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[":", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["Malta"], 
                 Key["2019"]}, "Item", False], "Mouse"], 
              ImageSize -> {{11.200000000000001`, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[":", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["Malta"], 
                 Key["2020"]}, "Item", False], "Mouse"], 
              ImageSize -> {{11.200000000000001`, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[":", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["Malta"], 
                 Key["2021"]}, "Item", False], "Mouse"], 
              ImageSize -> {{11.200000000000001`, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[":", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["Malta"], 
                 Key["2022"]}, "Item", False], "Mouse"], 
              ImageSize -> {{11.200000000000001`, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["Netherlands", 
                  Style[
                  "Netherlands", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    Key["Netherlands"]}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["Netherlands"]}, "RowHeader", False], "Mouse"], 
              ImageSize -> {{369.6, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["549.42"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["Netherlands"], 
                 Key["2013"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["528.12"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["Netherlands"], 
                 Key["2014"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["541.08"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["Netherlands"], 
                 Key["2015"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["481.76"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["Netherlands"], 
                 Key["2016"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["480.46"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["Netherlands"], 
                 Key["2017"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["457.17"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["Netherlands"], 
                 Key["2018"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["444.55"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["Netherlands"], 
                 Key["2019"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["341.48"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["Netherlands"], 
                 Key["2020"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["355.37"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["Netherlands"], 
                 Key["2021"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["355.55"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["Netherlands"], 
                 Key["2022"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["Austria", 
                  Style[
                  "Austria", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    Key["Austria"]}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["Austria"]}, "RowHeader", False], "Mouse"], 
              ImageSize -> {{369.6, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["407.29"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["Austria"], 
                 Key["2013"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["3569.13"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["Austria"], 
                 Key["2014"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["374.12"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["Austria"], 
                 Key["2015"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["349.98"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["Austria"], 
                 Key["2016"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["350.47"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["Austria"], 
                 Key["2017"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["313.47"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["Austria"], 
                 Key["2018"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["307.99"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["Austria"], 
                 Key["2019"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["266.44"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["Austria"], 
                 Key["2020"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["265.67"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["Austria"], 
                 Key["2021"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["272.48"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["Austria"], 
                 Key["2022"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Deploy[
              Pane[
               Row[{
                 Spacer[2], 
                 Style[
                  Row[{
                    Button[
                    MouseAppearance[
                    Mouseover[
                    Graphics[{{
                    EdgeForm[None], 
                    FaceForm[None], 
                    Rectangle[{0, 0}, {18, 18}, RoundingRadius -> 2]}, 
                    Rotate[
                    Translate[{
                    CapForm[Round], 
                    Line[{{0, 0}, {4, 5}, {8, 0}}], 
                    Line[{{0, 5}, {8, 5}}]}, {5, 6.5}], 0, {9, 9}]}, 
                    ImageSize -> (1 -> 1), ImagePadding -> {{0, 1}, {1, 0}}, 
                    BaselinePosition -> Scaled[0.35], BaseStyle -> 
                    RGBColor[
                    0.5372549019607843, 0.5372549019607843, 
                    0.5372549019607843]], 
                    Graphics[{{
                    EdgeForm[
                    RGBColor[
                    0.27450980392156865`, 0.5411764705882353, 
                    0.796078431372549]], 
                    FaceForm[None], 
                    Rectangle[{0, 0}, {18, 18}, RoundingRadius -> 2]}, 
                    Rotate[
                    Translate[{
                    CapForm[Round], 
                    RGBColor[
                    0.27450980392156865`, 0.5411764705882353, 
                    0.796078431372549], 
                    Line[{{0, 0}, {4, 5}, {8, 0}}], 
                    Line[{{0, 5}, {8, 5}}]}, {5, 6.5}], 0, {9, 9}]}, 
                    ImageSize -> (1 -> 1), ImagePadding -> {{0, 1}, {1, 0}}, 
                    BaselinePosition -> Scaled[0.35]]], "LinkHand"], 
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$ = 
                    Clip[TypeSystem`NestedGrid`PackagePrivate`$vPos$$ + (-20) 
                    If[True, 41, 1], {1, 41 - -20 + 1}]; 
                    TypeSystem`NestedGrid`PackagePrivate`updateState[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]], True][
                    TypeSystem`NestedGrid`PackagePrivate`$path$$]], 
                    Appearance -> None], 
                    Button[
                    MouseAppearance[
                    Mouseover[
                    Graphics[{{
                    EdgeForm[None], 
                    FaceForm[None], 
                    Rectangle[{0, 0}, {18, 18}, RoundingRadius -> 2]}, 
                    Rotate[
                    Translate[{
                    CapForm[Round], 
                    Line[{{0, 0}, {4, 5}, {8, 0}}]}, {5, 6.5}], 0, {9, 9}]}, 
                    ImageSize -> (1 -> 1), ImagePadding -> {{0, 1}, {1, 0}}, 
                    BaselinePosition -> Scaled[0.35], BaseStyle -> 
                    RGBColor[
                    0.5372549019607843, 0.5372549019607843, 
                    0.5372549019607843]], 
                    Graphics[{{
                    EdgeForm[
                    RGBColor[
                    0.27450980392156865`, 0.5411764705882353, 
                    0.796078431372549]], 
                    FaceForm[None], 
                    Rectangle[{0, 0}, {18, 18}, RoundingRadius -> 2]}, 
                    Rotate[
                    Translate[{
                    CapForm[Round], 
                    RGBColor[
                    0.27450980392156865`, 0.5411764705882353, 
                    0.796078431372549], 
                    Line[{{0, 0}, {4, 5}, {8, 0}}]}, {5, 6.5}], 0, {9, 9}]}, 
                    ImageSize -> (1 -> 1), ImagePadding -> {{0, 1}, {1, 0}}, 
                    BaselinePosition -> Scaled[0.35]]], "LinkHand"], 
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$ = 
                    Clip[TypeSystem`NestedGrid`PackagePrivate`$vPos$$ + (-20) 
                    If[False, 41, 1], {1, 41 - -20 + 1}]; 
                    TypeSystem`NestedGrid`PackagePrivate`updateState[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]], True][
                    TypeSystem`NestedGrid`PackagePrivate`$path$$]], 
                    Appearance -> None], " ", 
                    Style[
                    Mouseover[
                    Style[
                    Row[{"rows ", 1, "\[Dash]", 20, " of ", 
                    Style[41, FontWeight -> Bold]}], FontSize -> 
                    9.333333333333332, FontColor -> 
                    RGBColor[
                    0.5098039215686274, 0.5098039215686274, 
                    0.5098039215686274]], 
                    Style[
                    Row[{"rows ", 1, "\[Dash]", 20, " of ", 
                    Style[41, FontWeight -> Bold]}], FontSize -> 
                    9.333333333333332, FontColor -> 
                    RGBColor[
                    0.5098039215686274, 0.5098039215686274, 
                    0.5098039215686274]]], ContextMenu -> {
                    MenuItem["Hide", 
                    KernelExecute[
                    
                    TypeSystem`NestedGrid`PackagePrivate`adjustLimits[{
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]}, 
                    "Rows", 1, {}]], MenuEvaluator -> Automatic], 
                    MenuItem["Show up to 10 Rows", 
                    KernelExecute[
                    
                    TypeSystem`NestedGrid`PackagePrivate`adjustLimits[{
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]}, 
                    "Rows", 10, {}]], MenuEvaluator -> Automatic], 
                    MenuItem["Show up to 30 Rows", 
                    KernelExecute[
                    
                    TypeSystem`NestedGrid`PackagePrivate`adjustLimits[{
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]}, 
                    "Rows", 30, {}]], MenuEvaluator -> Automatic], 
                    MenuItem["Show up to 100 Rows", 
                    KernelExecute[
                    
                    TypeSystem`NestedGrid`PackagePrivate`adjustLimits[{
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]}, 
                    "Rows", 100, {}]], MenuEvaluator -> Automatic], 
                    MenuItem["Show All", 
                    KernelExecute[
                    
                    TypeSystem`NestedGrid`PackagePrivate`adjustLimits[{
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]}, 
                    "Rows", 100000000, {}]], MenuEvaluator -> Automatic]}], 
                    " ", 
                    Button[
                    MouseAppearance[
                    Mouseover[
                    Graphics[{{
                    EdgeForm[None], 
                    FaceForm[None], 
                    Rectangle[{0, 0}, {18, 18}, RoundingRadius -> 2]}, 
                    Rotate[
                    Translate[{
                    CapForm[Round], 
                    Line[{{0, 0}, {4, 5}, {8, 0}}]}, {5, 6.5}], 180 Degree, {
                    9, 9}]}, ImageSize -> (1 -> 1), 
                    ImagePadding -> {{0, 1}, {1, 0}}, BaselinePosition -> 
                    Scaled[0.35], BaseStyle -> 
                    RGBColor[
                    0.5372549019607843, 0.5372549019607843, 
                    0.5372549019607843]], 
                    Graphics[{{
                    EdgeForm[
                    RGBColor[
                    0.27450980392156865`, 0.5411764705882353, 
                    0.796078431372549]], 
                    FaceForm[None], 
                    Rectangle[{0, 0}, {18, 18}, RoundingRadius -> 2]}, 
                    Rotate[
                    Translate[{
                    CapForm[Round], 
                    RGBColor[
                    0.27450980392156865`, 0.5411764705882353, 
                    0.796078431372549], 
                    Line[{{0, 0}, {4, 5}, {8, 0}}]}, {5, 6.5}], 180 Degree, {
                    9, 9}]}, ImageSize -> (1 -> 1), 
                    ImagePadding -> {{0, 1}, {1, 0}}, BaselinePosition -> 
                    Scaled[0.35]]], "LinkHand"], 
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$ = 
                    Clip[TypeSystem`NestedGrid`PackagePrivate`$vPos$$ + 
                    20 If[False, 41, 1], {1, 41 - 20 + 1}]; 
                    TypeSystem`NestedGrid`PackagePrivate`updateState[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]], True][
                    TypeSystem`NestedGrid`PackagePrivate`$path$$]], 
                    Appearance -> None], 
                    Button[
                    MouseAppearance[
                    Mouseover[
                    Graphics[{{
                    EdgeForm[None], 
                    FaceForm[None], 
                    Rectangle[{0, 0}, {18, 18}, RoundingRadius -> 2]}, 
                    Rotate[
                    Translate[{
                    CapForm[Round], 
                    Line[{{0, 0}, {4, 5}, {8, 0}}], 
                    Line[{{0, 5}, {8, 5}}]}, {5, 6.5}], 180 Degree, {9, 9}]}, 
                    ImageSize -> (1 -> 1), ImagePadding -> {{0, 1}, {1, 0}}, 
                    BaselinePosition -> Scaled[0.35], BaseStyle -> 
                    RGBColor[
                    0.5372549019607843, 0.5372549019607843, 
                    0.5372549019607843]], 
                    Graphics[{{
                    EdgeForm[
                    RGBColor[
                    0.27450980392156865`, 0.5411764705882353, 
                    0.796078431372549]], 
                    FaceForm[None], 
                    Rectangle[{0, 0}, {18, 18}, RoundingRadius -> 2]}, 
                    Rotate[
                    Translate[{
                    CapForm[Round], 
                    RGBColor[
                    0.27450980392156865`, 0.5411764705882353, 
                    0.796078431372549], 
                    Line[{{0, 0}, {4, 5}, {8, 0}}], 
                    Line[{{0, 5}, {8, 5}}]}, {5, 6.5}], 180 Degree, {9, 9}]}, 
                    ImageSize -> (1 -> 1), ImagePadding -> {{0, 1}, {1, 0}}, 
                    BaselinePosition -> Scaled[0.35]]], "LinkHand"], 
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$ = 
                    Clip[TypeSystem`NestedGrid`PackagePrivate`$vPos$$ + 
                    20 If[True, 41, 1], {1, 41 - 20 + 1}]; 
                    TypeSystem`NestedGrid`PackagePrivate`updateState[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]], True][
                    TypeSystem`NestedGrid`PackagePrivate`$path$$]], 
                    Appearance -> None]}], ContextMenu -> {}]}], 
               ImageMargins -> {{0, -1}, {-1, 1}}]], Background -> 
             RGBColor[
              0.9764705882352941, 0.9764705882352941, 0.9764705882352941], 
             Alignment -> {Left, Top}], SpanFromLeft, SpanFromLeft, 
            SpanFromLeft, SpanFromLeft, SpanFromLeft, SpanFromLeft, 
            SpanFromLeft, SpanFromLeft, SpanFromLeft, SpanFromLeft}}, 
          BaseStyle -> {
           ContextMenu -> 
            Dynamic[TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger; 
              Which[TypeSystem`NestedGrid`PackagePrivate`$lastOutputID =!= 
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                 TypeSystem`NestedGrid`PackagePrivate`$outputID$$], {}, 
                TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger === 
                TypeSystem`NestedGrid`PackagePrivate`$lastContextMenuTrigger, 
                TypeSystem`NestedGrid`PackagePrivate`$lastContextMenu, True, 
                TypeSystem`NestedGrid`PackagePrivate`$lastContextMenuTrigger = 
                 TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger; 
                TypeSystem`NestedGrid`PackagePrivate`$lastContextMenu = 
                 Block[{TypeSystem`NestedGrid`PackagePrivate`$globalScrollPos = \
{TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$}}, 
                   
                   With[{TypeSystem`NestedGrid`PackagePrivate`lastPath$ = 
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ = 
                    TypeSystem`NestedGrid`PackagePrivate`$lastPathType, 
                    TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$ = 
                    TypeSystem`NestedGrid`PackagePrivate`$\
lastPathIsLeafHeader, TypeSystem`NestedGrid`PackagePrivate`headerHidden$ = And[
                    MatchQ[TypeSystem`NestedGrid`PackagePrivate`$lastPathType, 
                    Alternatives["RowHeader", "ColumnHeader"]], 
                    TypeSystem`NestedGrid`PackagePrivate`headerHiddenQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$]], 
                    TypeSystem`NestedGrid`PackagePrivate`allHidden$ = 
                    TypeSystem`NestedGrid`PackagePrivate`allHiddenQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`anyHidden$ = 
                    TypeSystem`NestedGrid`PackagePrivate`anyHiddenQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`sortDirection$ = 
                    TypeSystem`NestedGrid`PackagePrivate`columnSortDirection[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$[
                    "SortPaths"], 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$[
                    "SortDirections"]], 
                    TypeSystem`NestedGrid`PackagePrivate`haveData$ = Not[
                    FailureQ[
                    TypeSystem`NestedGrid`PackagePrivate`datasetInitialData[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$]]], 
                    TypeSystem`NestedGrid`PackagePrivate`isKeyDummy$ = Not[
                    FreeQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, Keys]]}, 
                    Join[{
                    If[
                    Or[
                    Not[TypeSystem`NestedGrid`PackagePrivate`haveData$], 
                    Not[TypeSystem`NestedGrid`PackagePrivate`anyHidden$], 
                    TypeSystem`NestedGrid`PackagePrivate`isKeyDummy$], 
                    Nothing, 
                    MenuItem[
                    "Show " <> 
                    Which[TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "Item", "", 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "RowHeader", "Row", 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "ColumnHeader", "Column", True, ""], 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateHiddenItems[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, 
                    "remove"]], MenuEvaluator -> Automatic]], 
                    If[
                    Or[
                    Not[TypeSystem`NestedGrid`PackagePrivate`haveData$], 
                    TypeSystem`NestedGrid`PackagePrivate`pathEmptyQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`isKeyDummy$, 
                    And[
                    TypeSystem`NestedGrid`PackagePrivate`allHidden$, 
                    TypeSystem`NestedGrid`PackagePrivate`headerHidden$]], 
                    Nothing, 
                    MenuItem[
                    "Hide " <> 
                    Which[TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "Item", "", 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "RowHeader", "Row", 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "ColumnHeader", "Column", True, ""], 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateHiddenItems[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, "add"]], 
                    MenuEvaluator -> Automatic]], Delimiter}, 
                    If[
                    And[TypeSystem`NestedGrid`PackagePrivate`haveData$, 
                    MatchQ[TypeSystem`NestedGrid`PackagePrivate`lastPathType$, 
                    Alternatives["ColumnHeader", "KeyDummy"]], 
                    TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$, 
                    Not[TypeSystem`NestedGrid`PackagePrivate`allHidden$]], {
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`sortDirection$ =!= 
                    "Ascending", 
                    MenuItem["Sort", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateSort[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, 
                    "Ascending"]], MenuEvaluator -> Automatic], Nothing], 
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`sortDirection$ =!= 
                    "Descending", 
                    MenuItem["Reverse Sort", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateSort[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, 
                    "Descending"]], MenuEvaluator -> Automatic], Nothing], 
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`sortDirection$ =!= 
                    None, 
                    MenuItem["Unsort", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateSort[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, None]], 
                    MenuEvaluator -> Automatic], Nothing], Delimiter}, {}], {
                    MenuItem["Copy Position to Clipboard", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentPosition[
                    TypeSystem`NestedGrid`PackagePrivate`copyClip]], 
                    MenuEvaluator -> Automatic], 
                    If[TypeSystem`NestedGrid`PackagePrivate`haveData$, 
                    MenuItem["Copy Data to Clipboard", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentData[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`copyClip]], 
                    MenuEvaluator -> Automatic], Nothing], Delimiter, 
                    MenuItem["Paste Position in New Cell", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentPosition[
                    TypeSystem`NestedGrid`PackagePrivate`cellPaste]], 
                    MenuEvaluator -> Automatic], 
                    If[TypeSystem`NestedGrid`PackagePrivate`haveData$, 
                    MenuItem["Paste Data in New Cell", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentData[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`cellPaste]], 
                    MenuEvaluator -> Automatic], Nothing]}]]]]], FontFamily -> 
            "Source Sans Pro", FontSize -> 14, FontWeight -> Plain}, Dividers -> 
          All, FrameStyle -> GrayLevel[0.7490196078431373], 
          Spacings -> {0, 0}, Alignment -> Left, 
          BaseStyle -> {
           FontFamily -> "Source Sans Pro", FontSize -> 14, FontWeight -> 
            Plain}], LineBreakWithin -> False, ContextMenu -> {}, NumberMarks -> 
         False, ShowAutoStyles -> False]], 
      TypeSystem`NestedGrid`PackagePrivate`initialQ = True}, 
     Dynamic[
      TypeSystem`NestedGrid`PackagePrivate`setupViewPath[
      TypeSystem`NestedGrid`PackagePrivate`$path$$, If[
         Not[TypeSystem`NestedGrid`PackagePrivate`initialQ], 
         Module[{
          TypeSystem`NestedGrid`PackagePrivate`tmpGrid$ = $Failed, 
           TypeSystem`NestedGrid`PackagePrivate`tmpData$ = 
           TypeSystem`NestedGrid`PackagePrivate`datasetData[
            TypeSystem`NestedGrid`PackagePrivate`$state$$]}, 
          TypeSystem`NestedGrid`PackagePrivate`tmpGrid$ = If[
             FailureQ[TypeSystem`NestedGrid`PackagePrivate`tmpData$], 
             TypeSystem`NestedGrid`PackagePrivate`renderedGrid, 
             TypeSystem`NestedGrid`PackagePrivate`renderGrid[
             TypeSystem`NestedGrid`PackagePrivate`$state$$, 
              TypeSystem`NestedGrid`PackagePrivate`$path$$, 
              TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
              TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
              TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
              TypeSystem`NestedGrid`PackagePrivate`localHold[
              TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
             TypeSystem`NestedGrid`PackagePrivate`tmpData$]]; If[
            Not[
             FailureQ[TypeSystem`NestedGrid`PackagePrivate`tmpGrid$]], 
            TypeSystem`NestedGrid`PackagePrivate`renderedGrid = 
            TypeSystem`NestedGrid`PackagePrivate`tmpGrid$]; Null]]; 
       TypeSystem`NestedGrid`PackagePrivate`initialQ = False; 
       TypeSystem`NestedGrid`PackagePrivate`$vPos$$; 
       TypeSystem`NestedGrid`PackagePrivate`$hPos$$; If[
         FailureQ[TypeSystem`NestedGrid`PackagePrivate`renderedGrid], 
         TypeSystem`SparseGrid[
          TypeSystem`H["(data no longer present)"]], 
         TypeSystem`NestedGrid`PackagePrivate`renderedGrid]], 
      TrackedSymbols :> {
       TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
        TypeSystem`NestedGrid`PackagePrivate`$hPos$$}], 
     DynamicModuleValues :> {}], 
    TypeSystem`NestedGrid`PackagePrivate`$topBar$$ = Dynamic[
     TypeSystem`NestedGrid`PackagePrivate`makeFramedBar[
      TypeSystem`PackageScope`SubViewPathbar[
      TypeSystem`NestedGrid`PackagePrivate`$path$$, 
       TypeSystem`NestedGrid`PackagePrivate`updateState[
       TypeSystem`NestedGrid`PackagePrivate`$state$$, 
        TypeSystem`NestedGrid`PackagePrivate`$path$$, 
        TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
        TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
        TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
        TypeSystem`NestedGrid`PackagePrivate`localHold[
        TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]]], 
     TrackedSymbols :> {TypeSystem`NestedGrid`PackagePrivate`$path$$}], 
    TypeSystem`NestedGrid`PackagePrivate`$bottomBar$$ = Style[
     Framed[
      Dynamic[
       Replace[
       TypeSystem`NestedGrid`PackagePrivate`mouseAnnotation$$, {
        TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
           TypeSystem`NestedGrid`PackagePrivate`localHold[
           TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][Null, 
           Blank[]] -> "", TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
           TypeSystem`NestedGrid`PackagePrivate`localHold[
           TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
           Pattern[TypeSystem`NestedGrid`PackagePrivate`path$, 
            Blank[]], 
           Pattern[TypeSystem`NestedGrid`PackagePrivate`pathType$, 
            Blank[]], 
           Pattern[TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$, 
            Blank[]]] :> (
          Increment[TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger]; 
          TypeSystem`NestedGrid`PackagePrivate`$lastPath = 
           TypeSystem`NestedGrid`PackagePrivate`path$; 
          TypeSystem`NestedGrid`PackagePrivate`$lastPathType = 
           TypeSystem`NestedGrid`PackagePrivate`pathType$; 
          TypeSystem`NestedGrid`PackagePrivate`$lastPathIsLeafHeader = 
           TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$; 
          TypeSystem`NestedGrid`PackagePrivate`$lastOutputID = 
           TypeSystem`NestedGrid`PackagePrivate`localHold[
            TypeSystem`NestedGrid`PackagePrivate`$outputID$$]; 
          TypeSystem`NestedGrid`PackagePrivate`makePathTrail[
           TypeSystem`NestedGrid`PackagePrivate`path$, 
            TypeSystem`NestedGrid`PackagePrivate`makePathElements]), Null :> 
         Spacer[10], Blank[] :> Spacer[10]}], 
       TrackedSymbols :> {
        TypeSystem`NestedGrid`PackagePrivate`mouseAnnotation$$}], FrameStyle -> 
      None, ImageMargins -> 0, FrameMargins -> 0, Alignment -> Top, 
      ImageSize -> {Automatic, 15}], FontSize -> 1], 
    TypeSystem`NestedGrid`PackagePrivate`mouseAnnotation$$ = Null}, 
    DynamicWrapperBox[
     DynamicBox[ToBoxes[
       Dataset`DatasetContent[
       2, "Path" -> Hold[TypeSystem`NestedGrid`PackagePrivate`$path$$], 
        "Grid" -> Hold[TypeSystem`NestedGrid`PackagePrivate`$grid$$], "State" -> 
        Hold[TypeSystem`NestedGrid`PackagePrivate`$state$$], "VPos" -> 
        Hold[TypeSystem`NestedGrid`PackagePrivate`$vPos$$], "HPos" -> 
        Hold[TypeSystem`NestedGrid`PackagePrivate`$hPos$$], "TopBar" -> 
        Hold[TypeSystem`NestedGrid`PackagePrivate`$topBar$$], "BottomBar" -> 
        Hold[TypeSystem`NestedGrid`PackagePrivate`$bottomBar$$], "OutputID" -> 
        Hold[
          TypeSystem`NestedGrid`PackagePrivate`localHold[
          TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]], StandardForm],
      ImageSizeCache->{
       1087.2999999999997`, {342.84743637626514`, 349.15256362373464`}},
      TrackedSymbols:>{
       TypeSystem`NestedGrid`PackagePrivate`$state$$, 
        TypeSystem`NestedGrid`PackagePrivate`$grid$$}], 
     TypeSystem`NestedGrid`PackagePrivate`mouseAnnotation$$ = 
     MouseAnnotation[],
     ImageSizeCache->{
      1087.2999999999997`, {342.84743637626514`, 349.15256362373464`}}],
    BaseStyle->{LineBreakWithin -> False},
    DynamicModuleValues:>{},
    Initialization:>(TypeSystem`NestedGrid`PackagePrivate`$outputID$$ = 
     CreateUUID[]),
    UnsavedVariables:>{TypeSystem`NestedGrid`PackagePrivate`$outputID$$}],
   Deploy,
   DefaultBaseStyle->"Deploy"],
  Dataset`InterpretDataset[1],
  Editable->False,
  SelectWithContents->True,
  Selectable->False]], "Output",
 CellChangeTimes->{3.9336458452125435`*^9, 3.933733276924177*^9, 
  3.933737916032727*^9, 3.933738804385748*^9, 3.933800573413456*^9, 
  3.9338013831570587`*^9, 3.933819862035129*^9, 3.9339038978762474`*^9},
 CellLabel->"Out[21]=",ExpressionUUID->"1f5c194a-2763-9348-9502-300ebb4a5479"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"\[IndentingNewLine]", 
  RowBox[{
   RowBox[{
    RowBox[{"drzave", " ", "=", " ", 
     RowBox[{"Normal", "[", 
      RowBox[{"Keys", "[", "vsiObsojeni", "]"}], "]"}]}], ";"}], " ", 
   RowBox[{"(*", 
    RowBox[{"tabela", " ", "vseh", " ", "drzav"}], "*)"}], 
   "\[IndentingNewLine]", 
   RowBox[{"DateListPlot", "[", 
    RowBox[{
     RowBox[{"Table", "[", 
      RowBox[{
       RowBox[{"vsiObsojeni", "[", 
        RowBox[{"[", "i", "]"}], "]"}], ",", " ", 
       RowBox[{"{", 
        RowBox[{"i", ",", "1", ",", 
         RowBox[{"Length", "[", "vsiObsojeni", "]"}]}], "}"}]}], "]"}], ",", 
     "\[IndentingNewLine]", 
     RowBox[{"FrameLabel", "->", 
      RowBox[{"{", 
       RowBox[{
       "\"\<Leto\>\"", ",", "\"\<st obsojenih na 100 000 prebivalcev\>\""}], 
       "}"}]}], ",", "\[IndentingNewLine]", 
     RowBox[{"PlotLegends", "->", "drzave"}], ",", "\[IndentingNewLine]", 
     RowBox[{"GridLines", "->", "Automatic"}], ",", 
     RowBox[{"PlotMarkers", "->", "Automatic"}], ",", "\[IndentingNewLine]", 
     RowBox[{"PlotRange", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{"Automatic", ",", 
        RowBox[{"{", 
         RowBox[{"0", ",", "10000"}], "}"}]}], "}"}]}]}], "]"}], 
   "\[IndentingNewLine]"}]}]], "Input",
 CellChangeTimes->{{3.930175876899864*^9, 3.930175883643659*^9}, {
   3.93018097733016*^9, 3.930181038512465*^9}, 3.933306916374782*^9, {
   3.933378188276655*^9, 3.933378209707911*^9}, {3.9333854180183334`*^9, 
   3.933385420868828*^9}, {3.9333855537537727`*^9, 3.933385562870579*^9}, {
   3.933385628151924*^9, 3.933385685326153*^9}, {3.933385987088602*^9, 
   3.933386037076309*^9}, 3.933386929614498*^9, {3.933387064968319*^9, 
   3.933387070778691*^9}, {3.933387190795647*^9, 3.9333871993015194`*^9}, {
   3.9333874099941177`*^9, 3.93338744672402*^9}, {3.933387616026108*^9, 
   3.933387628726334*^9}, {3.9333876837930794`*^9, 3.933387685076533*^9}, {
   3.93338772394812*^9, 3.933387732161566*^9}, {3.9333877692632484`*^9, 
   3.933387811836849*^9}, {3.933387872351921*^9, 3.9333879095293293`*^9}, {
   3.9333880153465424`*^9, 3.933388070525963*^9}, {3.933388244564953*^9, 
   3.933388308243437*^9}, {3.93338834131213*^9, 3.933388342377499*^9}, {
   3.933388471602281*^9, 3.933388493804622*^9}, {3.933487996510437*^9, 
   3.93348804153582*^9}, {3.933556334138378*^9, 3.933556476676094*^9}, {
   3.9335565069093876`*^9, 3.9335567223412666`*^9}, 3.9335568253303623`*^9, {
   3.933556855533398*^9, 3.933556857295889*^9}, {3.9335569214619274`*^9, 
   3.933556945132061*^9}, {3.9335570549980984`*^9, 3.9335570877437305`*^9}, {
   3.933557237166851*^9, 3.9335572380961*^9}, {3.9335572801101074`*^9, 
   3.9335572895601196`*^9}, {3.933557383509472*^9, 3.933557432932904*^9}, {
   3.933557486205242*^9, 3.9335575356934757`*^9}, {3.93355756821208*^9, 
   3.933557583452311*^9}, {3.933557668038908*^9, 3.933557814200377*^9}, {
   3.933557861951086*^9, 3.9335578666521416`*^9}, 3.9335579282667904`*^9, {
   3.933558031611004*^9, 3.933558136980255*^9}, {3.933558203427918*^9, 
   3.933558205895544*^9}, {3.933558338946525*^9, 3.9335583527383385`*^9}, {
   3.933558422324184*^9, 3.93355842931257*^9}, {3.9335585079861717`*^9, 
   3.933558526438347*^9}, 3.933558565990743*^9, {3.933558601258634*^9, 
   3.933558657961994*^9}, {3.933558700295183*^9, 3.93355875940275*^9}, {
   3.933558845154892*^9, 3.9335588606999207`*^9}, {3.933558901972969*^9, 
   3.933558916202228*^9}, {3.933558978544571*^9, 3.933559056605953*^9}, {
   3.933559238795374*^9, 3.933559243872999*^9}, {3.933559349118431*^9, 
   3.933559352282039*^9}, {3.93355952224304*^9, 3.933559552748354*^9}, {
   3.933559606012997*^9, 3.933559614482731*^9}, {3.933559788084019*^9, 
   3.933559812238287*^9}, {3.9335602802268543`*^9, 3.933560291759926*^9}, {
   3.93356035111792*^9, 3.933560431289824*^9}, {3.9335604910477905`*^9, 
   3.9335605165420494`*^9}, {3.9335607316617985`*^9, 
   3.9335607379398823`*^9}, {3.9335608230935707`*^9, 
   3.9335608252267075`*^9}, {3.933561041035681*^9, 3.933561093185156*^9}, {
   3.933561175737305*^9, 3.93356119938451*^9}, {3.93356132896761*^9, 
   3.933561378406147*^9}, {3.9335632158132935`*^9, 3.9335632259067345`*^9}, {
   3.933563357826828*^9, 3.93356340708678*^9}, {3.93356352706781*^9, 
   3.933563614073909*^9}, {3.933563688052225*^9, 3.9335636944410667`*^9}, {
   3.933563742573849*^9, 3.933563804371037*^9}, {3.933563881525038*^9, 
   3.9335639258590317`*^9}, {3.933564713882567*^9, 3.933564778257546*^9}, {
   3.933637068077503*^9, 3.933637068094681*^9}, {3.9336388370461025`*^9, 
   3.9336388636174145`*^9}, {3.933643541066323*^9, 3.93364354117536*^9}, 
   3.933643773137087*^9, {3.93364440081558*^9, 3.933644406973387*^9}, {
   3.933644821039877*^9, 3.933644847115315*^9}, {3.933645481219738*^9, 
   3.933645497308117*^9}, {3.933645810466642*^9, 3.933645831791082*^9}, {
   3.933646071363497*^9, 3.933646074199514*^9}},
 CellLabel->"In[22]:=",ExpressionUUID->"32f4678b-cec3-b742-bed7-cdc5cc01d856"],

Cell[BoxData[
 TemplateBox[{
   GraphicsBox[{{}, 
     InterpretationBox[{
       TagBox[{{{}, {}, 
          TagBox[{
            RGBColor[0.368417, 0.506779, 0.709798], 
            PointSize[0.007333333333333334], 
            AbsoluteThickness[2], 
            
            LineBox[{{3.5659872*^9, 1270.93}, {3.5975232*^9, 1051.21}, {
             3.6290592*^9, 1175.75}}], 
            
            LineBox[{{3.6922176*^9, 2099.12}, {3.7237536*^9, 2014.28}, {
             3.7552896*^9, 1771.98}, {3.7868256*^9, 1388.22}}]}, 
           Annotation[#, "Charting`Private`Tag#1"]& ], 
          TagBox[{
            RGBColor[0.880722, 0.611041, 0.142051], 
            PointSize[0.007333333333333334], 
            AbsoluteThickness[2], 
            
            LineBox[{{3.5659872*^9, 468.29}, {3.5975232*^9, 439.56}, {
             3.6290592*^9, 385.81}, {3.6605952*^9, 395.61}, {3.6922176*^9, 
             363.29}, {3.7237536*^9, 340.04}, {3.7552896*^9, 334.13}, {
             3.7868256*^9, 314.88}, {3.818448*^9, 348.74}, {3.849984*^9, 
             351.62}}]}, Annotation[#, "Charting`Private`Tag#2"]& ], 
          TagBox[{
            RGBColor[0.560181, 0.691569, 0.194885], 
            PointSize[0.007333333333333334], 
            AbsoluteThickness[2], 
            
            LineBox[{{3.5659872*^9, 741.49}, {3.5975232*^9, 692.75}, {
             3.6290592*^9, 622.2}, {3.6605952*^9, 582.}, {3.6922176*^9, 
             526.57}, {3.7237536*^9, 513.17}, {3.7552896*^9, 522.02}, {
             3.7868256*^9, 454.07}, {3.818448*^9, 473.06}, {3.849984*^9, 
             477.59}}]}, Annotation[#, "Charting`Private`Tag#3"]& ], 
          TagBox[{
            RGBColor[0.922526, 0.385626, 0.209179], 
            PointSize[0.007333333333333334], 
            AbsoluteThickness[2], 
            
            LineBox[{{3.5659872*^9, 3680.67}, {3.5975232*^9, 3720.97}, {
             3.6290592*^9, 3574.63}, {3.6605952*^9, 3442.74}, {3.6922176*^9, 
             3095.18}, {3.7237536*^9, 3162.05}, {3.7552896*^9, 885.95}, {
             3.7868256*^9, 966.17}, {3.818448*^9, 904.31}, {3.849984*^9, 
             896.68}}]}, Annotation[#, "Charting`Private`Tag#4"]& ], 
          TagBox[{
            RGBColor[0.528488, 0.470624, 0.701351], 
            PointSize[0.007333333333333334], 
            AbsoluteThickness[2], 
            
            LineBox[{{3.5659872*^9, 938.78}, {3.5975232*^9, 927.08}, {
             3.6290592*^9, 910.73}, {3.6605952*^9, 897.92}, {3.6922176*^9, 
             867.7}, {3.7237536*^9, 860.39}, {3.7552896*^9, 877.95}, {
             3.7868256*^9, 840.8}, {3.818448*^9, 796.22}, {3.849984*^9, 
             777.75}}]}, Annotation[#, "Charting`Private`Tag#5"]& ], 
          TagBox[{
            RGBColor[0.772079, 0.431554, 0.102387], 
            PointSize[0.007333333333333334], 
            AbsoluteThickness[2], 
            
            LineBox[{{3.5659872*^9, 642.11}, {3.5975232*^9, 582.91}, {
             3.6290592*^9, 560.89}, {3.6605952*^9, 578.98}, {3.6922176*^9, 
             510.32}, {3.7237536*^9, 432.25}, {3.7552896*^9, 430.47}, {
             3.7868256*^9, 372.39}, {3.818448*^9, 343.52}, {3.849984*^9, 
             288.11}}]}, Annotation[#, "Charting`Private`Tag#6"]& ], {}, 
          TagBox[{
            RGBColor[1, 0.75, 0], 
            PointSize[0.007333333333333334], 
            AbsoluteThickness[2], 
            LineBox[{{3.818448*^9, 50.81}, {3.849984*^9, 45.56}}]}, 
           Annotation[#, "Charting`Private`Tag#8"]& ], 
          TagBox[{
            RGBColor[0.647624, 0.37816, 0.614037], 
            PointSize[0.007333333333333334], 
            AbsoluteThickness[2], 
            
            LineBox[{{3.5659872*^9, 526.07}, {3.5975232*^9, 502.83}, {
             3.6290592*^9, 507.81}, {3.6605952*^9, 499.69}, {3.6922176*^9, 
             642.58}, {3.7237536*^9, 643.62}, {3.7552896*^9, 641.38}, {
             3.7868256*^9, 491.57}, {3.818448*^9, 624.08}, {3.849984*^9, 
             680.22}}]}, Annotation[#, "Charting`Private`Tag#9"]& ], 
          TagBox[{
            RGBColor[0.571589, 0.586483, 0.], 
            PointSize[0.007333333333333334], 
            AbsoluteThickness[2], 
            
            LineBox[{{3.5659872*^9, 1017.65}, {3.5975232*^9, 874.29}, {
             3.6290592*^9, 959.24}, {3.6605952*^9, 703.17}, {3.6922176*^9, 
             698.97}, {3.7237536*^9, 815.02}, {3.7552896*^9, 818.06}, {
             3.7868256*^9, 680.72}, {3.818448*^9, 796.01}}]}, 
           Annotation[#, "Charting`Private`Tag#10"]& ], 
          TagBox[{
            RGBColor[0.915, 0.3325, 0.2125], 
            PointSize[0.007333333333333334], 
            AbsoluteThickness[2], 
            
            LineBox[{{3.5659872*^9, 402.66}, {3.5975232*^9, 363.85}, {
             3.6290592*^9, 307.01}, {3.6605952*^9, 328.75}, {3.6922176*^9, 
             299.07}, {3.7237536*^9, 296.38}, {3.7552896*^9, 326.16}, {
             3.7868256*^9, 293.29}, {3.818448*^9, 310.92}, {3.849984*^9, 
             326.98}}]}, Annotation[#, "Charting`Private`Tag#11"]& ], 
          TagBox[{
            RGBColor[0.40082222609352647`, 0.5220066643438841, 0.85], 
            PointSize[0.007333333333333334], 
            AbsoluteThickness[2], 
            
            LineBox[{{3.5659872*^9, 413.8}, {3.5975232*^9, 373.36}, {
             3.6290592*^9, 363.46}, {3.6605952*^9, 346.03}, {3.6922176*^9, 
             321.38}, {3.7237536*^9, 357.1}}]}, 
           Annotation[#, "Charting`Private`Tag#12"]& ], 
          TagBox[{
            RGBColor[
            0.9728288904374106, 0.621644452187053, 0.07336199581899142], 
            PointSize[0.007333333333333334], 
            AbsoluteThickness[2], 
            
            LineBox[{{3.5659872*^9, 7023.97}, {3.5975232*^9, 8007.93}, {
             3.6290592*^9, 6386.6}, {3.6605952*^9, 5342.8}, {3.6922176*^9, 
             5086.21}, {3.7237536*^9, 4570.74}, {3.7552896*^9, 4563.88}, {
             3.7868256*^9, 4002.34}, {3.818448*^9, 3745.84}}]}, 
           Annotation[#, "Charting`Private`Tag#13"]& ], 
          TagBox[{
            RGBColor[0.736782672705901, 0.358, 0.5030266573755369], 
            PointSize[0.007333333333333334], 
            AbsoluteThickness[2], 
            
            LineBox[{{3.5659872*^9, 426.22}, {3.5975232*^9, 460.31}, {
             3.6290592*^9, 481.25}, {3.6605952*^9, 453.49}, {3.6922176*^9, 
             474.95}, {3.7237536*^9, 443.92}, {3.7552896*^9, 421.83}, {
             3.7868256*^9, 371.81}, {3.818448*^9, 361.76}, {3.849984*^9, 
             263.95}}]}, Annotation[#, "Charting`Private`Tag#14"]& ], 
          TagBox[{
            RGBColor[0.28026441037696703`, 0.715, 0.4292089322474965], 
            PointSize[0.007333333333333334], 
            AbsoluteThickness[2], 
            
            LineBox[{{3.5659872*^9, 657.15}, {3.5975232*^9, 772.62}, {
             3.6290592*^9, 591.29}, {3.6605952*^9, 536.88}, {3.6922176*^9, 
             634.08}, {3.7237536*^9, 704.15}, {3.7552896*^9, 628.59}, {
             3.7868256*^9, 574.78}, {3.818448*^9, 536.9}, {3.849984*^9, 
             533.11}}]}, Annotation[#, "Charting`Private`Tag#15"]& ], 
          TagBox[{
            RGBColor[0.368417, 0.506779, 0.709798], 
            PointSize[0.007333333333333334], 
            AbsoluteThickness[2], 
            
            LineBox[{{3.6605952*^9, 1463.43}, {3.6922176*^9, 1616.14}, {
             3.7237536*^9, 1362.95}, {3.7552896*^9, 1235.07}, {3.7868256*^9, 
             1198.52}, {3.818448*^9, 1265.42}, {3.849984*^9, 1153.4}}]}, 
           Annotation[#, "Charting`Private`Tag#16"]& ], 
          TagBox[{
            RGBColor[0.880722, 0.611041, 0.142051], 
            PointSize[0.007333333333333334], 
            AbsoluteThickness[2], 
            
            LineBox[{{3.5659872*^9, 709.73}, {3.5975232*^9, 772.65}, {
             3.6290592*^9, 718.43}, {3.6605952*^9, 729.22}, {3.6922176*^9, 
             701.55}, {3.7237536*^9, 681.92}, {3.7552896*^9, 655.32}, {
             3.7868256*^9, 551.2}, {3.818448*^9, 564.56}, {3.849984*^9, 
             571.85}}]}, Annotation[#, "Charting`Private`Tag#17"]& ], 
          TagBox[{
            RGBColor[0.560181, 0.691569, 0.194885], 
            PointSize[0.007333333333333334], 
            AbsoluteThickness[2], 
            
            LineBox[{{3.5975232*^9, 665.54}, {3.6290592*^9, 613.39}, {
             3.6605952*^9, 381.87}, {3.6922176*^9, 502.07}}]}, 
           Annotation[#, "Charting`Private`Tag#18"]& ], 
          TagBox[{
            RGBColor[0.922526, 0.385626, 0.209179], 
            PointSize[0.007333333333333334], 
            AbsoluteThickness[2], 
            
            LineBox[{{3.5659872*^9, 549.42}, {3.5975232*^9, 528.12}, {
             3.6290592*^9, 541.08}, {3.6605952*^9, 481.76}, {3.6922176*^9, 
             480.46}, {3.7237536*^9, 457.17}, {3.7552896*^9, 444.55}, {
             3.7868256*^9, 341.48}, {3.818448*^9, 355.37}, {3.849984*^9, 
             355.55}}]}, Annotation[#, "Charting`Private`Tag#19"]& ], 
          TagBox[{
            RGBColor[0.528488, 0.470624, 0.701351], 
            PointSize[0.007333333333333334], 
            AbsoluteThickness[2], 
            
            LineBox[{{3.5659872*^9, 407.29}, {3.5975232*^9, 3569.13}, {
             3.6290592*^9, 374.12}, {3.6605952*^9, 349.98}, {3.6922176*^9, 
             350.47}, {3.7237536*^9, 313.47}, {3.7552896*^9, 307.99}, {
             3.7868256*^9, 266.44}, {3.818448*^9, 265.67}, {3.849984*^9, 
             272.48}}]}, Annotation[#, "Charting`Private`Tag#20"]& ], 
          TagBox[{
            RGBColor[0.772079, 0.431554, 0.102387], 
            PointSize[0.007333333333333334], 
            AbsoluteThickness[2], 
            
            LineBox[{{3.5659872*^9, 978.24}, {3.5975232*^9, 819.99}, {
             3.6290592*^9, 716.4}, {3.6605952*^9, 792.44}, {3.6922176*^9, 
             661.24}, {3.7237536*^9, 751.83}, {3.7552896*^9, 781.87}, {
             3.7868256*^9, 689.06}}]}, 
           Annotation[#, "Charting`Private`Tag#21"]& ], 
          TagBox[{
            RGBColor[0.363898, 0.618501, 0.782349], 
            PointSize[0.007333333333333334], 
            AbsoluteThickness[2], 
            
            LineBox[{{3.5659872*^9, 678.64}, {3.5975232*^9, 506.95}, {
             3.6290592*^9, 569.9}, {3.6605952*^9, 546.01}, {3.6922176*^9, 
             504.08}, {3.7237536*^9, 453.68}, {3.7552896*^9, 440.92}, {
             3.7868256*^9, 341.72}, {3.818448*^9, 414.4}, {3.849984*^9, 
             441.98}}]}, Annotation[#, "Charting`Private`Tag#22"]& ], 
          TagBox[{
            RGBColor[1, 0.75, 0], 
            PointSize[0.007333333333333334], 
            AbsoluteThickness[2], 
            
            LineBox[{{3.5659872*^9, 235.43}, {3.5975232*^9, 252.37}, {
             3.6290592*^9, 212.76}, {3.6605952*^9, 165.58}, {3.6922176*^9, 
             180.19}, {3.7237536*^9, 164.87}, {3.7552896*^9, 173.49}, {
             3.7868256*^9, 162.88}, {3.818448*^9, 183.93}, {3.849984*^9, 
             172.81}}]}, Annotation[#, "Charting`Private`Tag#23"]& ], 
          TagBox[{
            RGBColor[0.647624, 0.37816, 0.614037], 
            PointSize[0.007333333333333334], 
            AbsoluteThickness[2], 
            
            LineBox[{{3.5659872*^9, 571.1}, {3.5975232*^9, 472.03}, {
             3.6290592*^9, 399.49}, {3.6605952*^9, 339.41}, {3.6922176*^9, 
             315.65}, {3.7237536*^9, 305.97}, {3.7552896*^9, 300.64}, {
             3.7868256*^9, 238.9}, {3.818448*^9, 283.27}, {3.849984*^9, 
             264.19}}]}, Annotation[#, "Charting`Private`Tag#24"]& ], 
          TagBox[{
            RGBColor[0.571589, 0.586483, 0.], 
            PointSize[0.007333333333333334], 
            AbsoluteThickness[2], 
            
            LineBox[{{3.5659872*^9, 666.79}, {3.5975232*^9, 620.57}, {
             3.6290592*^9, 547.67}, {3.6605952*^9, 501.03}, {3.6922176*^9, 
             484.42}, {3.7237536*^9, 539.86}, {3.7552896*^9, 521.63}, {
             3.7868256*^9, 465.24}, {3.818448*^9, 433.02}, {3.849984*^9, 
             464.68}}]}, Annotation[#, "Charting`Private`Tag#25"]& ], 
          TagBox[{
            RGBColor[0.915, 0.3325, 0.2125], 
            PointSize[0.007333333333333334], 
            AbsoluteThickness[2], 
            
            LineBox[{{3.5659872*^9, 3366.32}, {3.5975232*^9, 3174.6}, {
             3.6290592*^9, 3320.58}, {3.6605952*^9, 2843.54}, {3.6922176*^9, 
             1497.77}, {3.7237536*^9, 1502.27}, {3.7552896*^9, 1503.39}, {
             3.7868256*^9, 1460.41}, {3.818448*^9, 1459.04}, {3.849984*^9, 
             1397.96}}]}, Annotation[#, "Charting`Private`Tag#26"]& ], 
          TagBox[{
            RGBColor[0.40082222609352647`, 0.5220066643438841, 0.85], 
            PointSize[0.007333333333333334], 
            AbsoluteThickness[2], 
            
            LineBox[{{3.5659872*^9, 673.84}, {3.5975232*^9, 628.96}, {
             3.6290592*^9, 608.82}, {3.6605952*^9, 575.16}, {3.6922176*^9, 
             574.}, {3.7237536*^9, 598.45}, {3.7552896*^9, 612.97}, {
             3.7868256*^9, 668.07}, {3.818448*^9, 718.56}, {3.849984*^9, 
             733.2}}]}, Annotation[#, "Charting`Private`Tag#27"]& ], 
          TagBox[{
            RGBColor[
            0.9728288904374106, 0.621644452187053, 0.07336199581899142], 
            PointSize[0.007333333333333334], 
            AbsoluteThickness[2], 
            
            LineBox[{{3.5975232*^9, 764.27}, {3.6290592*^9, 727.74}, {
             3.6605952*^9, 701.59}, {3.6922176*^9, 675.63}}]}, 
           Annotation[#, "Charting`Private`Tag#28"]& ], 
          TagBox[{
            RGBColor[0.736782672705901, 0.358, 0.5030266573755369], 
            PointSize[0.007333333333333334], 
            AbsoluteThickness[2], 
            
            LineBox[{{3.5975232*^9, 2903.39}, {3.6290592*^9, 2697.64}, {
             3.6605952*^9, 2562.33}, {3.6922176*^9, 2874.9}}]}, 
           Annotation[#, "Charting`Private`Tag#29"]& ], 
          TagBox[{
            RGBColor[0.28026441037696703`, 0.715, 0.4292089322474965], 
            PointSize[0.007333333333333334], 
            AbsoluteThickness[2], 
            
            LineBox[{{3.5659872*^9, 1327.35}, {3.5975232*^9, 1250.18}, {
             3.6290592*^9, 1285.82}, {3.6605952*^9, 1196.44}, {3.6922176*^9, 
             1135.8}, {3.7237536*^9, 281.55}, {3.7552896*^9, 276.51}, {
             3.7868256*^9, 265.54}, {3.818448*^9, 250.44}, {3.849984*^9, 
             236.28}}]}, Annotation[#, "Charting`Private`Tag#30"]& ], 
          TagBox[{
            RGBColor[0.368417, 0.506779, 0.709798], 
            PointSize[0.007333333333333334], 
            AbsoluteThickness[2], 
            
            LineBox[{{3.5659872*^9, 1332.23}, {3.5975232*^9, 1337.62}, {
             3.6290592*^9, 1312.25}, {3.6605952*^9, 1301.69}, {3.6922176*^9, 
             1248.95}, {3.7237536*^9, 1251.57}, {3.7552896*^9, 1137.22}, {
             3.7868256*^9, 1129.09}, {3.818448*^9, 1140.81}, {3.849984*^9, 
             1166.05}}]}, Annotation[#, "Charting`Private`Tag#31"]& ], 
          TagBox[{
            RGBColor[0.880722, 0.611041, 0.142051], 
            PointSize[0.007333333333333334], 
            AbsoluteThickness[2], 
            
            LineBox[{{3.5659872*^9, 2066.57}, {3.5975232*^9, 2118.27}, {
             3.6290592*^9, 2152.9}, {3.6605952*^9, 2118.8}}]}, 
           Annotation[#, "Charting`Private`Tag#32"]& ], {}, 
          TagBox[{
            RGBColor[0.922526, 0.385626, 0.209179], 
            PointSize[0.007333333333333334], 
            AbsoluteThickness[2], 
            
            LineBox[{{3.5659872*^9, 1931.18}, {3.5975232*^9, 1449.74}, {
             3.6290592*^9, 1320.48}, {3.6605952*^9, 1236.16}, {3.6922176*^9, 
             1265.91}}]}, Annotation[#, "Charting`Private`Tag#34"]& ], {}, 
          TagBox[{
            RGBColor[0.772079, 0.431554, 0.102387], 
            PointSize[0.007333333333333334], 
            AbsoluteThickness[2], 
            
            LineBox[{{3.5659872*^9, 521.51}, {3.5975232*^9, 500.55}, {
             3.6290592*^9, 442.86}, {3.6605952*^9, 596.58}, {3.6922176*^9, 
             566.85}, {3.7237536*^9, 537.31}, {3.7552896*^9, 580.38}, {
             3.7868256*^9, 595.46}, {3.818448*^9, 569.48}, {3.849984*^9, 
             486.01}}]}, Annotation[#, "Charting`Private`Tag#36"]& ], 
          TagBox[{
            RGBColor[0.363898, 0.618501, 0.782349], 
            PointSize[0.007333333333333334], 
            AbsoluteThickness[2], 
            LineBox[{{3.5659872*^9, 485.48}, {3.5975232*^9, 587.87}}], 
            
            LineBox[{{3.7552896*^9, 241.49}, {3.7868256*^9, 322.74}, {
             3.818448*^9, 387.47}, {3.849984*^9, 437.15}}]}, 
           Annotation[#, "Charting`Private`Tag#37"]& ], 
          TagBox[{
            RGBColor[1, 0.75, 0], 
            PointSize[0.007333333333333334], 
            AbsoluteThickness[2], 
            
            LineBox[{{3.6290592*^9, 559.33}, {3.6605952*^9, 508.21}, {
             3.6922176*^9, 379.3}, {3.7237536*^9, 404.62}, {3.7552896*^9, 
             386.11}, {3.7868256*^9, 346.21}, {3.818448*^9, 445.38}}]}, 
           Annotation[#, "Charting`Private`Tag#38"]& ], 
          TagBox[{
            RGBColor[0.647624, 0.37816, 0.614037], 
            PointSize[0.007333333333333334], 
            AbsoluteThickness[2], 
            
            LineBox[{{3.5659872*^9, 485.82}, {3.5975232*^9, 523.45}, {
             3.6290592*^9, 493.58}, {3.6605952*^9, 488.34}, {3.6922176*^9, 
             474.3}, {3.7237536*^9, 447.02}, {3.7552896*^9, 427.76}, {
             3.7868256*^9, 385.84}, {3.818448*^9, 420.44}, {3.849984*^9, 
             403.3}}]}, Annotation[#, "Charting`Private`Tag#39"]& ], 
          TagBox[{
            RGBColor[0.571589, 0.586483, 0.], 
            PointSize[0.007333333333333334], 
            AbsoluteThickness[2], 
            
            LineBox[{{3.5659872*^9, 661.94}, {3.5975232*^9, 642.86}, {
             3.6290592*^9, 670.84}, {3.6605952*^9, 583.17}, {3.6922176*^9, 
             558.09}, {3.7237536*^9, 687.25}, {3.7552896*^9, 722.4}, {
             3.7868256*^9, 592.05}, {3.818448*^9, 827.95}, {3.849984*^9, 
             805.83}}]}, Annotation[#, "Charting`Private`Tag#40"]& ], 
          TagBox[{
            RGBColor[0.915, 0.3325, 0.2125], 
            PointSize[0.007333333333333334], 
            AbsoluteThickness[2], 
            
            LineBox[{{3.6605952*^9, 1047.13}, {3.6922176*^9, 1094.4}, {
             3.7237536*^9, 1136.17}, {3.7552896*^9, 1002.47}}]}, 
           Annotation[#, "Charting`Private`Tag#41"]& ]}, {
          TagBox[{
            RGBColor[0.368417, 0.506779, 0.709798], 
            PointSize[0.007333333333333334], 
            AbsoluteThickness[2], 
            GeometricTransformationBox[
             InsetBox[
              FormBox[
               StyleBox[
                GraphicsBox[{
                  EdgeForm[None], 
                  DiskBox[{0, 0}]}, PlotRangePadding -> Scaled[0.15]], 
                StripOnInput -> False, 
                GraphicsBoxOptions -> {DefaultBaseStyle -> Directive[
                    PointSize[0.007333333333333334], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[2]]}], TraditionalForm], {0., 0.}, 
              Automatic, 
              Offset[10.976]], {{{3.5659872*^9, 1270.93}}, {{3.5975232*^9, 
             1051.21}}, {{3.6290592*^9, 1175.75}}, {{3.6922176*^9, 
             2099.12}}, {{3.7237536*^9, 2014.28}}, {{3.7552896*^9, 
             1771.98}}, {{3.7868256*^9, 1388.22}}}]}, 
           Annotation[#, "Charting`Private`Tag#1"]& ], 
          TagBox[{
            RGBColor[0.880722, 0.611041, 0.142051], 
            PointSize[0.007333333333333334], 
            AbsoluteThickness[2], 
            GeometricTransformationBox[
             InsetBox[
              FormBox[
               StyleBox[
                GraphicsBox[{
                  EdgeForm[None], 
                  PolygonBox[{{-1, -1}, {1, -1}, {1, 1}, {-1, 1}}]}, 
                 PlotRangePadding -> Scaled[0.15]], StripOnInput -> False, 
                GraphicsBoxOptions -> {DefaultBaseStyle -> Directive[
                    PointSize[0.007333333333333334], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[2]]}], TraditionalForm], {0., 0.}, 
              Automatic, 
              Offset[10.5]], {{{3.5659872*^9, 468.29}}, {{3.5975232*^9, 
             439.56}}, {{3.6290592*^9, 385.81}}, {{3.6605952*^9, 395.61}}, {{
             3.6922176*^9, 363.29}}, {{3.7237536*^9, 340.04}}, {{3.7552896*^9,
              334.13}}, {{3.7868256*^9, 314.88}}, {{3.818448*^9, 348.74}}, {{
             3.849984*^9, 351.62}}}]}, 
           Annotation[#, "Charting`Private`Tag#2"]& ], 
          TagBox[{
            RGBColor[0.560181, 0.691569, 0.194885], 
            PointSize[0.007333333333333334], 
            AbsoluteThickness[2], 
            GeometricTransformationBox[
             InsetBox[
              FormBox[
               StyleBox[
                GraphicsBox[{
                  EdgeForm[None], 
                  PolygonBox[{{0, 1}, {1, 0}, {0, -1}, {-1, 0}}]}], 
                StripOnInput -> False, 
                GraphicsBoxOptions -> {DefaultBaseStyle -> Directive[
                    PointSize[0.007333333333333334], 
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    AbsoluteThickness[2]]}], TraditionalForm], {0., 0.}, 
              Automatic, 
              Offset[10.2]], {{{3.5659872*^9, 741.49}}, {{3.5975232*^9, 
             692.75}}, {{3.6290592*^9, 622.2}}, {{3.6605952*^9, 582.}}, {{
             3.6922176*^9, 526.57}}, {{3.7237536*^9, 513.17}}, {{3.7552896*^9,
              522.02}}, {{3.7868256*^9, 454.07}}, {{3.818448*^9, 473.06}}, {{
             3.849984*^9, 477.59}}}]}, 
           Annotation[#, "Charting`Private`Tag#3"]& ], 
          TagBox[{
            RGBColor[0.922526, 0.385626, 0.209179], 
            PointSize[0.007333333333333334], 
            AbsoluteThickness[2], 
            GeometricTransformationBox[
             InsetBox[
              FormBox[
               StyleBox[
                GraphicsBox[{
                  EdgeForm[None], 
                  PolygonBox[
                   
                   NCache[{{0, 1}, {-1, 1 - 3^Rational[1, 2]}, {
                    1, 1 - 3^Rational[1, 2]}}, {{0, 
                    1}, {-1, -0.7320508075688772}, {
                    1, -0.7320508075688772}}]]}], StripOnInput -> False, 
                GraphicsBoxOptions -> {DefaultBaseStyle -> Directive[
                    PointSize[0.007333333333333334], 
                    RGBColor[0.922526, 0.385626, 0.209179], 
                    AbsoluteThickness[2]]}], TraditionalForm], {0., 0.}, 
              Automatic, 
              Offset[11.4]], {{{3.5659872*^9, 3680.67}}, {{3.5975232*^9, 
             3720.97}}, {{3.6290592*^9, 3574.63}}, {{3.6605952*^9, 
             3442.74}}, {{3.6922176*^9, 3095.18}}, {{3.7237536*^9, 
             3162.05}}, {{3.7552896*^9, 885.95}}, {{3.7868256*^9, 966.17}}, {{
             3.818448*^9, 904.31}}, {{3.849984*^9, 896.68}}}]}, 
           Annotation[#, "Charting`Private`Tag#4"]& ], 
          TagBox[{
            RGBColor[0.528488, 0.470624, 0.701351], 
            PointSize[0.007333333333333334], 
            AbsoluteThickness[2], 
            GeometricTransformationBox[
             InsetBox[
              FormBox[
               StyleBox[
                GraphicsBox[{
                  EdgeForm[None], 
                  PolygonBox[
                   
                   NCache[{{0, -1}, {-1, -1 + 3^Rational[1, 2]}, {
                    1, -1 + 3^Rational[1, 2]}}, {{
                    0, -1}, {-1, 0.7320508075688772}, {
                    1, 0.7320508075688772}}]]}], StripOnInput -> False, 
                GraphicsBoxOptions -> {DefaultBaseStyle -> Directive[
                    PointSize[0.007333333333333334], 
                    RGBColor[0.528488, 0.470624, 0.701351], 
                    AbsoluteThickness[2]]}], TraditionalForm], {0., 0.}, 
              Automatic, 
              Offset[11.52]], {{{3.5659872*^9, 938.78}}, {{3.5975232*^9, 
             927.08}}, {{3.6290592*^9, 910.73}}, {{3.6605952*^9, 897.92}}, {{
             3.6922176*^9, 867.7}}, {{3.7237536*^9, 860.39}}, {{3.7552896*^9, 
             877.95}}, {{3.7868256*^9, 840.8}}, {{3.818448*^9, 796.22}}, {{
             3.849984*^9, 777.75}}}]}, 
           Annotation[#, "Charting`Private`Tag#5"]& ], 
          TagBox[{
            RGBColor[0.772079, 0.431554, 0.102387], 
            PointSize[0.007333333333333334], 
            AbsoluteThickness[2], 
            GeometricTransformationBox[
             InsetBox[
              FormBox[
               StyleBox[
                GraphicsBox[
                 CircleBox[{0, 0}], PlotRangePadding -> Scaled[0.15]], 
                StripOnInput -> False, 
                GraphicsBoxOptions -> {DefaultBaseStyle -> Directive[
                    PointSize[0.007333333333333334], 
                    RGBColor[0.772079, 0.431554, 0.102387], 
                    AbsoluteThickness[2]]}], TraditionalForm], {0., 0.}, 
              Automatic, 
              Offset[10.752]], {{{3.5659872*^9, 642.11}}, {{3.5975232*^9, 
             582.91}}, {{3.6290592*^9, 560.89}}, {{3.6605952*^9, 578.98}}, {{
             3.6922176*^9, 510.32}}, {{3.7237536*^9, 432.25}}, {{3.7552896*^9,
              430.47}}, {{3.7868256*^9, 372.39}}, {{3.818448*^9, 343.52}}, {{
             3.849984*^9, 288.11}}}]}, 
           Annotation[#, "Charting`Private`Tag#6"]& ], {}, 
          TagBox[{
            RGBColor[1, 0.75, 0], 
            PointSize[0.007333333333333334], 
            AbsoluteThickness[2], 
            GeometricTransformationBox[
             InsetBox[
              FormBox[
               StyleBox[
                GraphicsBox[{
                  EdgeForm[
                   Thickness[Medium]], 
                  FaceForm[None], 
                  LineBox[{{0, 1}, {1, 0}, {0, -1}, {-1, 0}, {0, 1}}]}, 
                 PlotRangePadding -> Scaled[0.15]], StripOnInput -> False, 
                GraphicsBoxOptions -> {DefaultBaseStyle -> Directive[
                    PointSize[0.007333333333333334], 
                    RGBColor[1, 0.75, 0], 
                    AbsoluteThickness[2]]}], TraditionalForm], {0., 0.}, 
              Automatic, 
              Offset[13.056]], {{{3.818448*^9, 50.81}}, {{3.849984*^9, 
             45.56}}}]}, Annotation[#, "Charting`Private`Tag#8"]& ], 
          TagBox[{
            RGBColor[0.647624, 0.37816, 0.614037], 
            PointSize[0.007333333333333334], 
            AbsoluteThickness[2], 
            GeometricTransformationBox[
             InsetBox[
              FormBox[
               StyleBox[
                GraphicsBox[{
                  EdgeForm[
                   Thickness[Medium]], 
                  FaceForm[None], 
                  LineBox[
                   
                   NCache[{{0, 1}, {-1, 1 - 3^Rational[1, 2]}, {
                    1, 1 - 3^Rational[1, 2]}, {0, 1}}, {{0, 
                    1}, {-1, -0.7320508075688772}, {1, -0.7320508075688772}, {
                    0, 1}}]]}, PlotRangePadding -> Scaled[0.15]], 
                StripOnInput -> False, 
                GraphicsBoxOptions -> {DefaultBaseStyle -> Directive[
                    PointSize[0.007333333333333334], 
                    RGBColor[0.647624, 0.37816, 0.614037], 
                    AbsoluteThickness[2]]}], TraditionalForm], {0., 0.}, 
              Automatic, 
              Offset[12.288]], {{{3.5659872*^9, 526.07}}, {{3.5975232*^9, 
             502.83}}, {{3.6290592*^9, 507.81}}, {{3.6605952*^9, 499.69}}, {{
             3.6922176*^9, 642.58}}, {{3.7237536*^9, 643.62}}, {{3.7552896*^9,
              641.38}}, {{3.7868256*^9, 491.57}}, {{3.818448*^9, 624.08}}, {{
             3.849984*^9, 680.22}}}]}, 
           Annotation[#, "Charting`Private`Tag#9"]& ], 
          TagBox[{
            RGBColor[0.571589, 0.586483, 0.], 
            PointSize[0.007333333333333334], 
            AbsoluteThickness[2], 
            GeometricTransformationBox[
             InsetBox[
              FormBox[
               StyleBox[
                GraphicsBox[{
                  EdgeForm[
                   Thickness[Medium]], 
                  FaceForm[None], 
                  LineBox[
                   
                   NCache[{{0, -1}, {-1, -1 + 3^Rational[1, 2]}, {
                    1, -1 + 3^Rational[1, 2]}, {0, -1}}, {{
                    0, -1}, {-1, 0.7320508075688772}, {
                    1, 0.7320508075688772}, {0, -1}}]]}, PlotRangePadding -> 
                 Scaled[0.15]], StripOnInput -> False, 
                GraphicsBoxOptions -> {DefaultBaseStyle -> Directive[
                    PointSize[0.007333333333333334], 
                    RGBColor[0.571589, 0.586483, 0.], 
                    AbsoluteThickness[2]]}], TraditionalForm], {0., 0.}, 
              Automatic, 
              Offset[12.288]], {{{3.5659872*^9, 1017.65}}, {{3.5975232*^9, 
             874.29}}, {{3.6290592*^9, 959.24}}, {{3.6605952*^9, 703.17}}, {{
             3.6922176*^9, 698.97}}, {{3.7237536*^9, 815.02}}, {{3.7552896*^9,
              818.06}}, {{3.7868256*^9, 680.72}}, {{3.818448*^9, 796.01}}}]}, 
           Annotation[#, "Charting`Private`Tag#10"]& ], 
          TagBox[{
            RGBColor[0.915, 0.3325, 0.2125], 
            PointSize[0.007333333333333334], 
            AbsoluteThickness[2], 
            GeometricTransformationBox[
             InsetBox[
              FormBox[
               StyleBox[
                GraphicsBox[{
                  EdgeForm[None], 
                  DiskBox[{0, 0}]}, PlotRangePadding -> Scaled[0.15]], 
                StripOnInput -> False, 
                GraphicsBoxOptions -> {DefaultBaseStyle -> Directive[
                    PointSize[0.007333333333333334], 
                    RGBColor[0.915, 0.3325, 0.2125], 
                    AbsoluteThickness[2]]}], TraditionalForm], {0., 0.}, 
              Automatic, 
              Offset[10.976]], {{{3.5659872*^9, 402.66}}, {{3.5975232*^9, 
             363.85}}, {{3.6290592*^9, 307.01}}, {{3.6605952*^9, 328.75}}, {{
             3.6922176*^9, 299.07}}, {{3.7237536*^9, 296.38}}, {{3.7552896*^9,
              326.16}}, {{3.7868256*^9, 293.29}}, {{3.818448*^9, 310.92}}, {{
             3.849984*^9, 326.98}}}]}, 
           Annotation[#, "Charting`Private`Tag#11"]& ], 
          TagBox[{
            RGBColor[0.40082222609352647`, 0.5220066643438841, 0.85], 
            PointSize[0.007333333333333334], 
            AbsoluteThickness[2], 
            GeometricTransformationBox[
             InsetBox[
              FormBox[
               StyleBox[
                GraphicsBox[{
                  EdgeForm[None], 
                  PolygonBox[{{-1, -1}, {1, -1}, {1, 1}, {-1, 1}}]}, 
                 PlotRangePadding -> Scaled[0.15]], StripOnInput -> False, 
                GraphicsBoxOptions -> {DefaultBaseStyle -> Directive[
                    PointSize[0.007333333333333334], 
                    RGBColor[0.40082222609352647`, 0.5220066643438841, 0.85], 
                    AbsoluteThickness[2]]}], TraditionalForm], {0., 0.}, 
              Automatic, 
              Offset[10.5]], {{{3.5659872*^9, 413.8}}, {{3.5975232*^9, 
             373.36}}, {{3.6290592*^9, 363.46}}, {{3.6605952*^9, 346.03}}, {{
             3.6922176*^9, 321.38}}, {{3.7237536*^9, 357.1}}}]}, 
           Annotation[#, "Charting`Private`Tag#12"]& ], 
          TagBox[{
            RGBColor[
            0.9728288904374106, 0.621644452187053, 0.07336199581899142], 
            PointSize[0.007333333333333334], 
            AbsoluteThickness[2], 
            GeometricTransformationBox[
             InsetBox[
              FormBox[
               StyleBox[
                GraphicsBox[{
                  EdgeForm[None], 
                  PolygonBox[{{0, 1}, {1, 0}, {0, -1}, {-1, 0}}]}], 
                StripOnInput -> False, 
                GraphicsBoxOptions -> {DefaultBaseStyle -> Directive[
                    PointSize[0.007333333333333334], 
                    RGBColor[
                    0.9728288904374106, 0.621644452187053, 
                    0.07336199581899142], 
                    AbsoluteThickness[2]]}], TraditionalForm], {0., 0.}, 
              Automatic, 
              Offset[10.2]], {{{3.5659872*^9, 7023.97}}, {{3.5975232*^9, 
             8007.93}}, {{3.6290592*^9, 6386.6}}, {{3.6605952*^9, 5342.8}}, {{
             3.6922176*^9, 5086.21}}, {{3.7237536*^9, 4570.74}}, {{
             3.7552896*^9, 4563.88}}, {{3.7868256*^9, 4002.34}}, {{
             3.818448*^9, 3745.84}}}]}, 
           Annotation[#, "Charting`Private`Tag#13"]& ], 
          TagBox[{
            RGBColor[0.736782672705901, 0.358, 0.5030266573755369], 
            PointSize[0.007333333333333334], 
            AbsoluteThickness[2], 
            GeometricTransformationBox[
             InsetBox[
              FormBox[
               StyleBox[
                GraphicsBox[{
                  EdgeForm[None], 
                  PolygonBox[
                   
                   NCache[{{0, 1}, {-1, 1 - 3^Rational[1, 2]}, {
                    1, 1 - 3^Rational[1, 2]}}, {{0, 
                    1}, {-1, -0.7320508075688772}, {
                    1, -0.7320508075688772}}]]}], StripOnInput -> False, 
                GraphicsBoxOptions -> {DefaultBaseStyle -> Directive[
                    PointSize[0.007333333333333334], 
                    RGBColor[0.736782672705901, 0.358, 0.5030266573755369], 
                    AbsoluteThickness[2]]}], TraditionalForm], {0., 0.}, 
              Automatic, 
              Offset[11.4]], {{{3.5659872*^9, 426.22}}, {{3.5975232*^9, 
             460.31}}, {{3.6290592*^9, 481.25}}, {{3.6605952*^9, 453.49}}, {{
             3.6922176*^9, 474.95}}, {{3.7237536*^9, 443.92}}, {{3.7552896*^9,
              421.83}}, {{3.7868256*^9, 371.81}}, {{3.818448*^9, 361.76}}, {{
             3.849984*^9, 263.95}}}]}, 
           Annotation[#, "Charting`Private`Tag#14"]& ], 
          TagBox[{
            RGBColor[0.28026441037696703`, 0.715, 0.4292089322474965], 
            PointSize[0.007333333333333334], 
            AbsoluteThickness[2], 
            GeometricTransformationBox[
             InsetBox[
              FormBox[
               StyleBox[
                GraphicsBox[{
                  EdgeForm[None], 
                  PolygonBox[
                   NCache[{{0, -1}, {-1, -1 + 3^Rational[1, 2]}, {
                    1, -1 + 3^Rational[1, 2]}}, {{
                    0, -1}, {-1, 0.7320508075688772}, {
                    1, 0.7320508075688772}}]]}], StripOnInput -> False, 
                GraphicsBoxOptions -> {DefaultBaseStyle -> Directive[
                    PointSize[0.007333333333333334], 
                    RGBColor[0.28026441037696703`, 0.715, 0.4292089322474965], 
                    AbsoluteThickness[2]]}], TraditionalForm], {0., 0.}, 
              Automatic, 
              Offset[11.52]], {{{3.5659872*^9, 657.15}}, {{3.5975232*^9, 
             772.62}}, {{3.6290592*^9, 591.29}}, {{3.6605952*^9, 536.88}}, {{
             3.6922176*^9, 634.08}}, {{3.7237536*^9, 704.15}}, {{3.7552896*^9,
              628.59}}, {{3.7868256*^9, 574.78}}, {{3.818448*^9, 536.9}}, {{
             3.849984*^9, 533.11}}}]}, 
           Annotation[#, "Charting`Private`Tag#15"]& ], 
          TagBox[{
            RGBColor[0.368417, 0.506779, 0.709798], 
            PointSize[0.007333333333333334], 
            AbsoluteThickness[2], 
            GeometricTransformationBox[
             InsetBox[
              FormBox[
               StyleBox[
                GraphicsBox[
                 CircleBox[{0, 0}], PlotRangePadding -> Scaled[0.15]], 
                StripOnInput -> False, 
                GraphicsBoxOptions -> {DefaultBaseStyle -> Directive[
                    PointSize[0.007333333333333334], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[2]]}], TraditionalForm], {0., 0.}, 
              Automatic, 
              Offset[10.752]], {{{3.6605952*^9, 1463.43}}, {{3.6922176*^9, 
             1616.14}}, {{3.7237536*^9, 1362.95}}, {{3.7552896*^9, 
             1235.07}}, {{3.7868256*^9, 1198.52}}, {{3.818448*^9, 
             1265.42}}, {{3.849984*^9, 1153.4}}}]}, 
           Annotation[#, "Charting`Private`Tag#16"]& ], 
          TagBox[{
            RGBColor[0.880722, 0.611041, 0.142051], 
            PointSize[0.007333333333333334], 
            AbsoluteThickness[2], 
            GeometricTransformationBox[
             InsetBox[
              FormBox[
               StyleBox[
                GraphicsBox[{
                  EdgeForm[
                   Thickness[Medium]], 
                  FaceForm[None], 
                  LineBox[{{-1, -1}, {1, -1}, {1, 1}, {-1, 1}, {-1, -1}}]}, 
                 PlotRangePadding -> Scaled[0.15]], StripOnInput -> False, 
                GraphicsBoxOptions -> {DefaultBaseStyle -> Directive[
                    PointSize[0.007333333333333334], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[2]]}], TraditionalForm], {0., 0.}, 
              Automatic, 
              Offset[10.752]], {{{3.5659872*^9, 709.73}}, {{3.5975232*^9, 
             772.65}}, {{3.6290592*^9, 718.43}}, {{3.6605952*^9, 729.22}}, {{
             3.6922176*^9, 701.55}}, {{3.7237536*^9, 681.92}}, {{3.7552896*^9,
              655.32}}, {{3.7868256*^9, 551.2}}, {{3.818448*^9, 564.56}}, {{
             3.849984*^9, 571.85}}}]}, 
           Annotation[#, "Charting`Private`Tag#17"]& ], 
          TagBox[{
            RGBColor[0.560181, 0.691569, 0.194885], 
            PointSize[0.007333333333333334], 
            AbsoluteThickness[2], 
            GeometricTransformationBox[
             InsetBox[
              FormBox[
               StyleBox[
                GraphicsBox[{
                  EdgeForm[
                   Thickness[Medium]], 
                  FaceForm[None], 
                  LineBox[{{0, 1}, {1, 0}, {0, -1}, {-1, 0}, {0, 1}}]}, 
                 PlotRangePadding -> Scaled[0.15]], StripOnInput -> False, 
                GraphicsBoxOptions -> {DefaultBaseStyle -> Directive[
                    PointSize[0.007333333333333334], 
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    AbsoluteThickness[2]]}], TraditionalForm], {0., 0.}, 
              Automatic, 
              Offset[13.056]], {{{3.5975232*^9, 665.54}}, {{3.6290592*^9, 
             613.39}}, {{3.6605952*^9, 381.87}}, {{3.6922176*^9, 502.07}}}]}, 
           Annotation[#, "Charting`Private`Tag#18"]& ], 
          TagBox[{
            RGBColor[0.922526, 0.385626, 0.209179], 
            PointSize[0.007333333333333334], 
            AbsoluteThickness[2], 
            GeometricTransformationBox[
             InsetBox[
              FormBox[
               StyleBox[
                GraphicsBox[{
                  EdgeForm[
                   Thickness[Medium]], 
                  FaceForm[None], 
                  LineBox[
                   
                   NCache[{{0, 1}, {-1, 1 - 3^Rational[1, 2]}, {
                    1, 1 - 3^Rational[1, 2]}, {0, 1}}, {{0, 
                    1}, {-1, -0.7320508075688772}, {1, -0.7320508075688772}, {
                    0, 1}}]]}, PlotRangePadding -> Scaled[0.15]], 
                StripOnInput -> False, 
                GraphicsBoxOptions -> {DefaultBaseStyle -> Directive[
                    PointSize[0.007333333333333334], 
                    RGBColor[0.922526, 0.385626, 0.209179], 
                    AbsoluteThickness[2]]}], TraditionalForm], {0., 0.}, 
              Automatic, 
              Offset[12.288]], {{{3.5659872*^9, 549.42}}, {{3.5975232*^9, 
             528.12}}, {{3.6290592*^9, 541.08}}, {{3.6605952*^9, 481.76}}, {{
             3.6922176*^9, 480.46}}, {{3.7237536*^9, 457.17}}, {{3.7552896*^9,
              444.55}}, {{3.7868256*^9, 341.48}}, {{3.818448*^9, 355.37}}, {{
             3.849984*^9, 355.55}}}]}, 
           Annotation[#, "Charting`Private`Tag#19"]& ], 
          TagBox[{
            RGBColor[0.528488, 0.470624, 0.701351], 
            PointSize[0.007333333333333334], 
            AbsoluteThickness[2], 
            GeometricTransformationBox[
             InsetBox[
              FormBox[
               StyleBox[
                GraphicsBox[{
                  EdgeForm[
                   Thickness[Medium]], 
                  FaceForm[None], 
                  LineBox[
                   
                   NCache[{{0, -1}, {-1, -1 + 3^Rational[1, 2]}, {
                    1, -1 + 3^Rational[1, 2]}, {0, -1}}, {{
                    0, -1}, {-1, 0.7320508075688772}, {
                    1, 0.7320508075688772}, {0, -1}}]]}, PlotRangePadding -> 
                 Scaled[0.15]], StripOnInput -> False, 
                GraphicsBoxOptions -> {DefaultBaseStyle -> Directive[
                    PointSize[0.007333333333333334], 
                    RGBColor[0.528488, 0.470624, 0.701351], 
                    AbsoluteThickness[2]]}], TraditionalForm], {0., 0.}, 
              Automatic, 
              Offset[12.288]], {{{3.5659872*^9, 407.29}}, {{3.5975232*^9, 
             3569.13}}, {{3.6290592*^9, 374.12}}, {{3.6605952*^9, 349.98}}, {{
             3.6922176*^9, 350.47}}, {{3.7237536*^9, 313.47}}, {{3.7552896*^9,
              307.99}}, {{3.7868256*^9, 266.44}}, {{3.818448*^9, 265.67}}, {{
             3.849984*^9, 272.48}}}]}, 
           Annotation[#, "Charting`Private`Tag#20"]& ], 
          TagBox[{
            RGBColor[0.772079, 0.431554, 0.102387], 
            PointSize[0.007333333333333334], 
            AbsoluteThickness[2], 
            GeometricTransformationBox[
             InsetBox[
              FormBox[
               StyleBox[
                GraphicsBox[{
                  EdgeForm[None], 
                  DiskBox[{0, 0}]}, PlotRangePadding -> Scaled[0.15]], 
                StripOnInput -> False, 
                GraphicsBoxOptions -> {DefaultBaseStyle -> Directive[
                    PointSize[0.007333333333333334], 
                    RGBColor[0.772079, 0.431554, 0.102387], 
                    AbsoluteThickness[2]]}], TraditionalForm], {0., 0.}, 
              Automatic, 
              Offset[10.976]], {{{3.5659872*^9, 978.24}}, {{3.5975232*^9, 
             819.99}}, {{3.6290592*^9, 716.4}}, {{3.6605952*^9, 792.44}}, {{
             3.6922176*^9, 661.24}}, {{3.7237536*^9, 751.83}}, {{3.7552896*^9,
              781.87}}, {{3.7868256*^9, 689.06}}}]}, 
           Annotation[#, "Charting`Private`Tag#21"]& ], 
          TagBox[{
            RGBColor[0.363898, 0.618501, 0.782349], 
            PointSize[0.007333333333333334], 
            AbsoluteThickness[2], 
            GeometricTransformationBox[
             InsetBox[
              FormBox[
               StyleBox[
                GraphicsBox[{
                  EdgeForm[None], 
                  PolygonBox[{{-1, -1}, {1, -1}, {1, 1}, {-1, 1}}]}, 
                 PlotRangePadding -> Scaled[0.15]], StripOnInput -> False, 
                GraphicsBoxOptions -> {DefaultBaseStyle -> Directive[
                    PointSize[0.007333333333333334], 
                    RGBColor[0.363898, 0.618501, 0.782349], 
                    AbsoluteThickness[2]]}], TraditionalForm], {0., 0.}, 
              Automatic, 
              Offset[10.5]], {{{3.5659872*^9, 678.64}}, {{3.5975232*^9, 
             506.95}}, {{3.6290592*^9, 569.9}}, {{3.6605952*^9, 546.01}}, {{
             3.6922176*^9, 504.08}}, {{3.7237536*^9, 453.68}}, {{3.7552896*^9,
              440.92}}, {{3.7868256*^9, 341.72}}, {{3.818448*^9, 414.4}}, {{
             3.849984*^9, 441.98}}}]}, 
           Annotation[#, "Charting`Private`Tag#22"]& ], 
          TagBox[{
            RGBColor[1, 0.75, 0], 
            PointSize[0.007333333333333334], 
            AbsoluteThickness[2], 
            GeometricTransformationBox[
             InsetBox[
              FormBox[
               StyleBox[
                GraphicsBox[{
                  EdgeForm[None], 
                  PolygonBox[{{0, 1}, {1, 0}, {0, -1}, {-1, 0}}]}], 
                StripOnInput -> False, 
                GraphicsBoxOptions -> {DefaultBaseStyle -> Directive[
                    PointSize[0.007333333333333334], 
                    RGBColor[1, 0.75, 0], 
                    AbsoluteThickness[2]]}], TraditionalForm], {0., 0.}, 
              Automatic, 
              Offset[10.2]], {{{3.5659872*^9, 235.43}}, {{3.5975232*^9, 
             252.37}}, {{3.6290592*^9, 212.76}}, {{3.6605952*^9, 165.58}}, {{
             3.6922176*^9, 180.19}}, {{3.7237536*^9, 164.87}}, {{3.7552896*^9,
              173.49}}, {{3.7868256*^9, 162.88}}, {{3.818448*^9, 183.93}}, {{
             3.849984*^9, 172.81}}}]}, 
           Annotation[#, "Charting`Private`Tag#23"]& ], 
          TagBox[{
            RGBColor[0.647624, 0.37816, 0.614037], 
            PointSize[0.007333333333333334], 
            AbsoluteThickness[2], 
            GeometricTransformationBox[
             InsetBox[
              FormBox[
               StyleBox[
                GraphicsBox[{
                  EdgeForm[None], 
                  PolygonBox[
                   
                   NCache[{{0, 1}, {-1, 1 - 3^Rational[1, 2]}, {
                    1, 1 - 3^Rational[1, 2]}}, {{0, 
                    1}, {-1, -0.7320508075688772}, {
                    1, -0.7320508075688772}}]]}], StripOnInput -> False, 
                GraphicsBoxOptions -> {DefaultBaseStyle -> Directive[
                    PointSize[0.007333333333333334], 
                    RGBColor[0.647624, 0.37816, 0.614037], 
                    AbsoluteThickness[2]]}], TraditionalForm], {0., 0.}, 
              Automatic, 
              Offset[11.4]], {{{3.5659872*^9, 571.1}}, {{3.5975232*^9, 
             472.03}}, {{3.6290592*^9, 399.49}}, {{3.6605952*^9, 339.41}}, {{
             3.6922176*^9, 315.65}}, {{3.7237536*^9, 305.97}}, {{3.7552896*^9,
              300.64}}, {{3.7868256*^9, 238.9}}, {{3.818448*^9, 283.27}}, {{
             3.849984*^9, 264.19}}}]}, 
           Annotation[#, "Charting`Private`Tag#24"]& ], 
          TagBox[{
            RGBColor[0.571589, 0.586483, 0.], 
            PointSize[0.007333333333333334], 
            AbsoluteThickness[2], 
            GeometricTransformationBox[
             InsetBox[
              FormBox[
               StyleBox[
                GraphicsBox[{
                  EdgeForm[None], 
                  PolygonBox[
                   
                   NCache[{{0, -1}, {-1, -1 + 3^Rational[1, 2]}, {
                    1, -1 + 3^Rational[1, 2]}}, {{
                    0, -1}, {-1, 0.7320508075688772}, {
                    1, 0.7320508075688772}}]]}], StripOnInput -> False, 
                GraphicsBoxOptions -> {DefaultBaseStyle -> Directive[
                    PointSize[0.007333333333333334], 
                    RGBColor[0.571589, 0.586483, 0.], 
                    AbsoluteThickness[2]]}], TraditionalForm], {0., 0.}, 
              Automatic, 
              Offset[11.52]], {{{3.5659872*^9, 666.79}}, {{3.5975232*^9, 
             620.57}}, {{3.6290592*^9, 547.67}}, {{3.6605952*^9, 501.03}}, {{
             3.6922176*^9, 484.42}}, {{3.7237536*^9, 539.86}}, {{3.7552896*^9,
              521.63}}, {{3.7868256*^9, 465.24}}, {{3.818448*^9, 433.02}}, {{
             3.849984*^9, 464.68}}}]}, 
           Annotation[#, "Charting`Private`Tag#25"]& ], 
          TagBox[{
            RGBColor[0.915, 0.3325, 0.2125], 
            PointSize[0.007333333333333334], 
            AbsoluteThickness[2], 
            GeometricTransformationBox[
             InsetBox[
              FormBox[
               StyleBox[
                GraphicsBox[
                 CircleBox[{0, 0}], PlotRangePadding -> Scaled[0.15]], 
                StripOnInput -> False, 
                GraphicsBoxOptions -> {DefaultBaseStyle -> Directive[
                    PointSize[0.007333333333333334], 
                    RGBColor[0.915, 0.3325, 0.2125], 
                    AbsoluteThickness[2]]}], TraditionalForm], {0., 0.}, 
              Automatic, 
              Offset[10.752]], {{{3.5659872*^9, 3366.32}}, {{3.5975232*^9, 
             3174.6}}, {{3.6290592*^9, 3320.58}}, {{3.6605952*^9, 
             2843.54}}, {{3.6922176*^9, 1497.77}}, {{3.7237536*^9, 
             1502.27}}, {{3.7552896*^9, 1503.39}}, {{3.7868256*^9, 
             1460.41}}, {{3.818448*^9, 1459.04}}, {{3.849984*^9, 1397.96}}}]},
            Annotation[#, "Charting`Private`Tag#26"]& ], 
          TagBox[{
            RGBColor[0.40082222609352647`, 0.5220066643438841, 0.85], 
            PointSize[0.007333333333333334], 
            AbsoluteThickness[2], 
            GeometricTransformationBox[
             InsetBox[
              FormBox[
               StyleBox[
                GraphicsBox[{
                  EdgeForm[
                   Thickness[Medium]], 
                  FaceForm[None], 
                  LineBox[{{-1, -1}, {1, -1}, {1, 1}, {-1, 1}, {-1, -1}}]}, 
                 PlotRangePadding -> Scaled[0.15]], StripOnInput -> False, 
                GraphicsBoxOptions -> {DefaultBaseStyle -> Directive[
                    PointSize[0.007333333333333334], 
                    RGBColor[0.40082222609352647`, 0.5220066643438841, 0.85], 
                    AbsoluteThickness[2]]}], TraditionalForm], {0., 0.}, 
              Automatic, 
              Offset[10.752]], {{{3.5659872*^9, 673.84}}, {{3.5975232*^9, 
             628.96}}, {{3.6290592*^9, 608.82}}, {{3.6605952*^9, 575.16}}, {{
             3.6922176*^9, 574.}}, {{3.7237536*^9, 598.45}}, {{3.7552896*^9, 
             612.97}}, {{3.7868256*^9, 668.07}}, {{3.818448*^9, 718.56}}, {{
             3.849984*^9, 733.2}}}]}, 
           Annotation[#, "Charting`Private`Tag#27"]& ], 
          TagBox[{
            RGBColor[
            0.9728288904374106, 0.621644452187053, 0.07336199581899142], 
            PointSize[0.007333333333333334], 
            AbsoluteThickness[2], 
            GeometricTransformationBox[
             InsetBox[
              FormBox[
               StyleBox[
                GraphicsBox[{
                  EdgeForm[
                   Thickness[Medium]], 
                  FaceForm[None], 
                  LineBox[{{0, 1}, {1, 0}, {0, -1}, {-1, 0}, {0, 1}}]}, 
                 PlotRangePadding -> Scaled[0.15]], StripOnInput -> False, 
                GraphicsBoxOptions -> {DefaultBaseStyle -> Directive[
                    PointSize[0.007333333333333334], 
                    RGBColor[
                    0.9728288904374106, 0.621644452187053, 
                    0.07336199581899142], 
                    AbsoluteThickness[2]]}], TraditionalForm], {0., 0.}, 
              Automatic, 
              Offset[13.056]], {{{3.5975232*^9, 764.27}}, {{3.6290592*^9, 
             727.74}}, {{3.6605952*^9, 701.59}}, {{3.6922176*^9, 675.63}}}]}, 
           Annotation[#, "Charting`Private`Tag#28"]& ], 
          TagBox[{
            RGBColor[0.736782672705901, 0.358, 0.5030266573755369], 
            PointSize[0.007333333333333334], 
            AbsoluteThickness[2], 
            GeometricTransformationBox[
             InsetBox[
              FormBox[
               StyleBox[
                GraphicsBox[{
                  EdgeForm[
                   Thickness[Medium]], 
                  FaceForm[None], 
                  LineBox[
                   
                   NCache[{{0, 1}, {-1, 1 - 3^Rational[1, 2]}, {
                    1, 1 - 3^Rational[1, 2]}, {0, 1}}, {{0, 
                    1}, {-1, -0.7320508075688772}, {1, -0.7320508075688772}, {
                    0, 1}}]]}, PlotRangePadding -> Scaled[0.15]], 
                StripOnInput -> False, 
                GraphicsBoxOptions -> {DefaultBaseStyle -> Directive[
                    PointSize[0.007333333333333334], 
                    RGBColor[0.736782672705901, 0.358, 0.5030266573755369], 
                    AbsoluteThickness[2]]}], TraditionalForm], {0., 0.}, 
              Automatic, 
              Offset[12.288]], {{{3.5975232*^9, 2903.39}}, {{3.6290592*^9, 
             2697.64}}, {{3.6605952*^9, 2562.33}}, {{3.6922176*^9, 
             2874.9}}}]}, Annotation[#, "Charting`Private`Tag#29"]& ], 
          TagBox[{
            RGBColor[0.28026441037696703`, 0.715, 0.4292089322474965], 
            PointSize[0.007333333333333334], 
            AbsoluteThickness[2], 
            GeometricTransformationBox[
             InsetBox[
              FormBox[
               StyleBox[
                GraphicsBox[{
                  EdgeForm[
                   Thickness[Medium]], 
                  FaceForm[None], 
                  LineBox[
                   
                   NCache[{{0, -1}, {-1, -1 + 3^Rational[1, 2]}, {
                    1, -1 + 3^Rational[1, 2]}, {0, -1}}, {{
                    0, -1}, {-1, 0.7320508075688772}, {
                    1, 0.7320508075688772}, {0, -1}}]]}, PlotRangePadding -> 
                 Scaled[0.15]], StripOnInput -> False, 
                GraphicsBoxOptions -> {DefaultBaseStyle -> Directive[
                    PointSize[0.007333333333333334], 
                    RGBColor[0.28026441037696703`, 0.715, 0.4292089322474965], 
                    AbsoluteThickness[2]]}], TraditionalForm], {0., 0.}, 
              Automatic, 
              Offset[12.288]], {{{3.5659872*^9, 1327.35}}, {{3.5975232*^9, 
             1250.18}}, {{3.6290592*^9, 1285.82}}, {{3.6605952*^9, 
             1196.44}}, {{3.6922176*^9, 1135.8}}, {{3.7237536*^9, 281.55}}, {{
             3.7552896*^9, 276.51}}, {{3.7868256*^9, 265.54}}, {{3.818448*^9, 
             250.44}}, {{3.849984*^9, 236.28}}}]}, 
           Annotation[#, "Charting`Private`Tag#30"]& ], 
          TagBox[{
            RGBColor[0.368417, 0.506779, 0.709798], 
            PointSize[0.007333333333333334], 
            AbsoluteThickness[2], 
            GeometricTransformationBox[
             InsetBox[
              FormBox[
               StyleBox[
                GraphicsBox[{
                  EdgeForm[None], 
                  DiskBox[{0, 0}]}, PlotRangePadding -> Scaled[0.15]], 
                StripOnInput -> False, 
                GraphicsBoxOptions -> {DefaultBaseStyle -> Directive[
                    PointSize[0.007333333333333334], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[2]]}], TraditionalForm], {0., 0.}, 
              Automatic, 
              Offset[10.976]], {{{3.5659872*^9, 1332.23}}, {{3.5975232*^9, 
             1337.62}}, {{3.6290592*^9, 1312.25}}, {{3.6605952*^9, 
             1301.69}}, {{3.6922176*^9, 1248.95}}, {{3.7237536*^9, 
             1251.57}}, {{3.7552896*^9, 1137.22}}, {{3.7868256*^9, 
             1129.09}}, {{3.818448*^9, 1140.81}}, {{3.849984*^9, 1166.05}}}]},
            Annotation[#, "Charting`Private`Tag#31"]& ], 
          TagBox[{
            RGBColor[0.880722, 0.611041, 0.142051], 
            PointSize[0.007333333333333334], 
            AbsoluteThickness[2], 
            GeometricTransformationBox[
             InsetBox[
              FormBox[
               StyleBox[
                GraphicsBox[{
                  EdgeForm[None], 
                  PolygonBox[{{-1, -1}, {1, -1}, {1, 1}, {-1, 1}}]}, 
                 PlotRangePadding -> Scaled[0.15]], StripOnInput -> False, 
                GraphicsBoxOptions -> {DefaultBaseStyle -> Directive[
                    PointSize[0.007333333333333334], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[2]]}], TraditionalForm], {0., 0.}, 
              Automatic, 
              Offset[10.5]], {{{3.5659872*^9, 2066.57}}, {{3.5975232*^9, 
             2118.27}}, {{3.6290592*^9, 2152.9}}, {{3.6605952*^9, 2118.8}}}]},
            Annotation[#, "Charting`Private`Tag#32"]& ], 
          TagBox[{
            RGBColor[0.560181, 0.691569, 0.194885], 
            PointSize[0.007333333333333334], 
            AbsoluteThickness[2], 
            GeometricTransformationBox[
             InsetBox[
              FormBox[
               StyleBox[
                GraphicsBox[{
                  EdgeForm[None], 
                  PolygonBox[{{0, 1}, {1, 0}, {0, -1}, {-1, 0}}]}], 
                StripOnInput -> False, 
                GraphicsBoxOptions -> {DefaultBaseStyle -> Directive[
                    PointSize[0.007333333333333334], 
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    AbsoluteThickness[2]]}], TraditionalForm], {0., 0.}, 
              Automatic, 
              Offset[10.2]], {{{3.5659872*^9, 858.23}}, {{3.6922176*^9, 
             1527.61}}}]}, Annotation[#, "Charting`Private`Tag#33"]& ], 
          TagBox[{
            RGBColor[0.922526, 0.385626, 0.209179], 
            PointSize[0.007333333333333334], 
            AbsoluteThickness[2], 
            GeometricTransformationBox[
             InsetBox[
              FormBox[
               StyleBox[
                GraphicsBox[{
                  EdgeForm[None], 
                  PolygonBox[
                   
                   NCache[{{0, 1}, {-1, 1 - 3^Rational[1, 2]}, {
                    1, 1 - 3^Rational[1, 2]}}, {{0, 
                    1}, {-1, -0.7320508075688772}, {
                    1, -0.7320508075688772}}]]}], StripOnInput -> False, 
                GraphicsBoxOptions -> {DefaultBaseStyle -> Directive[
                    PointSize[0.007333333333333334], 
                    RGBColor[0.922526, 0.385626, 0.209179], 
                    AbsoluteThickness[2]]}], TraditionalForm], {0., 0.}, 
              Automatic, 
              Offset[11.4]], {{{3.5659872*^9, 1931.18}}, {{3.5975232*^9, 
             1449.74}}, {{3.6290592*^9, 1320.48}}, {{3.6605952*^9, 
             1236.16}}, {{3.6922176*^9, 1265.91}}}]}, 
           Annotation[#, "Charting`Private`Tag#34"]& ], {}, 
          TagBox[{
            RGBColor[0.772079, 0.431554, 0.102387], 
            PointSize[0.007333333333333334], 
            AbsoluteThickness[2], 
            GeometricTransformationBox[
             InsetBox[
              FormBox[
               StyleBox[
                GraphicsBox[
                 CircleBox[{0, 0}], PlotRangePadding -> Scaled[0.15]], 
                StripOnInput -> False, 
                GraphicsBoxOptions -> {DefaultBaseStyle -> Directive[
                    PointSize[0.007333333333333334], 
                    RGBColor[0.772079, 0.431554, 0.102387], 
                    AbsoluteThickness[2]]}], TraditionalForm], {0., 0.}, 
              Automatic, 
              Offset[10.752]], {{{3.5659872*^9, 521.51}}, {{3.5975232*^9, 
             500.55}}, {{3.6290592*^9, 442.86}}, {{3.6605952*^9, 596.58}}, {{
             3.6922176*^9, 566.85}}, {{3.7237536*^9, 537.31}}, {{3.7552896*^9,
              580.38}}, {{3.7868256*^9, 595.46}}, {{3.818448*^9, 569.48}}, {{
             3.849984*^9, 486.01}}}]}, 
           Annotation[#, "Charting`Private`Tag#36"]& ], 
          TagBox[{
            RGBColor[0.363898, 0.618501, 0.782349], 
            PointSize[0.007333333333333334], 
            AbsoluteThickness[2], 
            GeometricTransformationBox[
             InsetBox[
              FormBox[
               StyleBox[
                GraphicsBox[{
                  EdgeForm[
                   Thickness[Medium]], 
                  FaceForm[None], 
                  LineBox[{{-1, -1}, {1, -1}, {1, 1}, {-1, 1}, {-1, -1}}]}, 
                 PlotRangePadding -> Scaled[0.15]], StripOnInput -> False, 
                GraphicsBoxOptions -> {DefaultBaseStyle -> Directive[
                    PointSize[0.007333333333333334], 
                    RGBColor[0.363898, 0.618501, 0.782349], 
                    AbsoluteThickness[2]]}], TraditionalForm], {0., 0.}, 
              Automatic, 
              Offset[10.752]], {{{3.5659872*^9, 485.48}}, {{3.5975232*^9, 
             587.87}}, {{3.6922176*^9, 133.53}}, {{3.7552896*^9, 241.49}}, {{
             3.7868256*^9, 322.74}}, {{3.818448*^9, 387.47}}, {{3.849984*^9, 
             437.15}}}]}, Annotation[#, "Charting`Private`Tag#37"]& ], 
          TagBox[{
            RGBColor[1, 0.75, 0], 
            PointSize[0.007333333333333334], 
            AbsoluteThickness[2], 
            GeometricTransformationBox[
             InsetBox[
              FormBox[
               StyleBox[
                GraphicsBox[{
                  EdgeForm[
                   Thickness[Medium]], 
                  FaceForm[None], 
                  LineBox[{{0, 1}, {1, 0}, {0, -1}, {-1, 0}, {0, 1}}]}, 
                 PlotRangePadding -> Scaled[0.15]], StripOnInput -> False, 
                GraphicsBoxOptions -> {DefaultBaseStyle -> Directive[
                    PointSize[0.007333333333333334], 
                    RGBColor[1, 0.75, 0], 
                    AbsoluteThickness[2]]}], TraditionalForm], {0., 0.}, 
              Automatic, 
              Offset[13.056]], {{{3.6290592*^9, 559.33}}, {{3.6605952*^9, 
             508.21}}, {{3.6922176*^9, 379.3}}, {{3.7237536*^9, 404.62}}, {{
             3.7552896*^9, 386.11}}, {{3.7868256*^9, 346.21}}, {{3.818448*^9, 
             445.38}}}]}, Annotation[#, "Charting`Private`Tag#38"]& ], 
          TagBox[{
            RGBColor[0.647624, 0.37816, 0.614037], 
            PointSize[0.007333333333333334], 
            AbsoluteThickness[2], 
            GeometricTransformationBox[
             InsetBox[
              FormBox[
               StyleBox[
                GraphicsBox[{
                  EdgeForm[
                   Thickness[Medium]], 
                  FaceForm[None], 
                  LineBox[
                   
                   NCache[{{0, 1}, {-1, 1 - 3^Rational[1, 2]}, {
                    1, 1 - 3^Rational[1, 2]}, {0, 1}}, {{0, 
                    1}, {-1, -0.7320508075688772}, {1, -0.7320508075688772}, {
                    0, 1}}]]}, PlotRangePadding -> Scaled[0.15]], 
                StripOnInput -> False, 
                GraphicsBoxOptions -> {DefaultBaseStyle -> Directive[
                    PointSize[0.007333333333333334], 
                    RGBColor[0.647624, 0.37816, 0.614037], 
                    AbsoluteThickness[2]]}], TraditionalForm], {0., 0.}, 
              Automatic, 
              Offset[12.288]], {{{3.5659872*^9, 485.82}}, {{3.5975232*^9, 
             523.45}}, {{3.6290592*^9, 493.58}}, {{3.6605952*^9, 488.34}}, {{
             3.6922176*^9, 474.3}}, {{3.7237536*^9, 447.02}}, {{3.7552896*^9, 
             427.76}}, {{3.7868256*^9, 385.84}}, {{3.818448*^9, 420.44}}, {{
             3.849984*^9, 403.3}}}]}, 
           Annotation[#, "Charting`Private`Tag#39"]& ], 
          TagBox[{
            RGBColor[0.571589, 0.586483, 0.], 
            PointSize[0.007333333333333334], 
            AbsoluteThickness[2], 
            GeometricTransformationBox[
             InsetBox[
              FormBox[
               StyleBox[
                GraphicsBox[{
                  EdgeForm[
                   Thickness[Medium]], 
                  FaceForm[None], 
                  LineBox[
                   
                   NCache[{{0, -1}, {-1, -1 + 3^Rational[1, 2]}, {
                    1, -1 + 3^Rational[1, 2]}, {0, -1}}, {{
                    0, -1}, {-1, 0.7320508075688772}, {
                    1, 0.7320508075688772}, {0, -1}}]]}, PlotRangePadding -> 
                 Scaled[0.15]], StripOnInput -> False, 
                GraphicsBoxOptions -> {DefaultBaseStyle -> Directive[
                    PointSize[0.007333333333333334], 
                    RGBColor[0.571589, 0.586483, 0.], 
                    AbsoluteThickness[2]]}], TraditionalForm], {0., 0.}, 
              Automatic, 
              Offset[12.288]], {{{3.5659872*^9, 661.94}}, {{3.5975232*^9, 
             642.86}}, {{3.6290592*^9, 670.84}}, {{3.6605952*^9, 583.17}}, {{
             3.6922176*^9, 558.09}}, {{3.7237536*^9, 687.25}}, {{3.7552896*^9,
              722.4}}, {{3.7868256*^9, 592.05}}, {{3.818448*^9, 827.95}}, {{
             3.849984*^9, 805.83}}}]}, 
           Annotation[#, "Charting`Private`Tag#40"]& ], 
          TagBox[{
            RGBColor[0.915, 0.3325, 0.2125], 
            PointSize[0.007333333333333334], 
            AbsoluteThickness[2], 
            GeometricTransformationBox[
             InsetBox[
              FormBox[
               StyleBox[
                GraphicsBox[{
                  EdgeForm[None], 
                  DiskBox[{0, 0}]}, PlotRangePadding -> Scaled[0.15]], 
                StripOnInput -> False, 
                GraphicsBoxOptions -> {DefaultBaseStyle -> Directive[
                    PointSize[0.007333333333333334], 
                    RGBColor[0.915, 0.3325, 0.2125], 
                    AbsoluteThickness[2]]}], TraditionalForm], {0., 0.}, 
              Automatic, 
              Offset[10.976]], {{{3.6605952*^9, 1047.13}}, {{3.6922176*^9, 
             1094.4}}, {{3.7237536*^9, 1136.17}}, {{3.7552896*^9, 
             1002.47}}}]}, Annotation[#, "Charting`Private`Tag#41"]& ]}}, {
        "WolframDynamicHighlight", <|
         "Label" -> {"XYLabel"}, "Ball" -> {"InterpolatedBall"}|>}], 
       StyleBox[
        DynamicBox[
         (Charting`HighlightActionBox["DynamicHighlight", {}, 
          Slot["HighlightElements"], 
          Slot["LayoutOptions"], 
          Slot["Meta"], 
          Charting`HighlightActionFunction["DynamicHighlight", {{{}, {}, 
             Annotation[{
               Hue[0.67, 0.6, 0.6], 
               Directive[
                PointSize[0.007333333333333334], 
                RGBColor[0.368417, 0.506779, 0.709798], 
                AbsoluteThickness[2]], 
               
               Line[{{3.5659872*^9, 1270.93}, {3.5975232*^9, 1051.21}, {
                3.6290592*^9, 1175.75}}], 
               
               Line[{{3.6922176*^9, 2099.12}, {3.7237536*^9, 2014.28}, {
                3.7552896*^9, 1771.98}, {3.7868256*^9, 1388.22}}]}, 
              "Charting`Private`Tag#1"], 
             Annotation[{
               Hue[0.9060679774997897, 0.6, 0.6], 
               Directive[
                PointSize[0.007333333333333334], 
                RGBColor[0.880722, 0.611041, 0.142051], 
                AbsoluteThickness[2]], 
               
               Line[{{3.5659872*^9, 468.29}, {3.5975232*^9, 439.56}, {
                3.6290592*^9, 385.81}, {3.6605952*^9, 395.61}, {3.6922176*^9, 
                363.29}, {3.7237536*^9, 340.04}, {3.7552896*^9, 334.13}, {
                3.7868256*^9, 314.88}, {3.818448*^9, 348.74}, {3.849984*^9, 
                351.62}}]}, "Charting`Private`Tag#2"], 
             Annotation[{
               Hue[0.1421359549995791, 0.6, 0.6], 
               Directive[
                PointSize[0.007333333333333334], 
                RGBColor[0.560181, 0.691569, 0.194885], 
                AbsoluteThickness[2]], 
               
               Line[{{3.5659872*^9, 741.49}, {3.5975232*^9, 692.75}, {
                3.6290592*^9, 622.2}, {3.6605952*^9, 582.}, {3.6922176*^9, 
                526.57}, {3.7237536*^9, 513.17}, {3.7552896*^9, 522.02}, {
                3.7868256*^9, 454.07}, {3.818448*^9, 473.06}, {3.849984*^9, 
                477.59}}]}, "Charting`Private`Tag#3"], 
             Annotation[{
               Hue[0.37820393249936934`, 0.6, 0.6], 
               Directive[
                PointSize[0.007333333333333334], 
                RGBColor[0.922526, 0.385626, 0.209179], 
                AbsoluteThickness[2]], 
               
               Line[{{3.5659872*^9, 3680.67}, {3.5975232*^9, 3720.97}, {
                3.6290592*^9, 3574.63}, {3.6605952*^9, 3442.74}, {
                3.6922176*^9, 3095.18}, {3.7237536*^9, 3162.05}, {
                3.7552896*^9, 885.95}, {3.7868256*^9, 966.17}, {3.818448*^9, 
                904.31}, {3.849984*^9, 896.68}}]}, "Charting`Private`Tag#4"], 
             Annotation[{
               Hue[0.6142719099991583, 0.6, 0.6], 
               Directive[
                PointSize[0.007333333333333334], 
                RGBColor[0.528488, 0.470624, 0.701351], 
                AbsoluteThickness[2]], 
               
               Line[{{3.5659872*^9, 938.78}, {3.5975232*^9, 927.08}, {
                3.6290592*^9, 910.73}, {3.6605952*^9, 897.92}, {3.6922176*^9, 
                867.7}, {3.7237536*^9, 860.39}, {3.7552896*^9, 877.95}, {
                3.7868256*^9, 840.8}, {3.818448*^9, 796.22}, {3.849984*^9, 
                777.75}}]}, "Charting`Private`Tag#5"], 
             Annotation[{
               Hue[0.8503398874989481, 0.6, 0.6], 
               Directive[
                PointSize[0.007333333333333334], 
                RGBColor[0.772079, 0.431554, 0.102387], 
                AbsoluteThickness[2]], 
               
               Line[{{3.5659872*^9, 642.11}, {3.5975232*^9, 582.91}, {
                3.6290592*^9, 560.89}, {3.6605952*^9, 578.98}, {3.6922176*^9, 
                510.32}, {3.7237536*^9, 432.25}, {3.7552896*^9, 430.47}, {
                3.7868256*^9, 372.39}, {3.818448*^9, 343.52}, {3.849984*^9, 
                288.11}}]}, "Charting`Private`Tag#6"], {}, 
             Annotation[{
               Hue[0.3224758424985268, 0.6, 0.6], 
               Directive[
                PointSize[0.007333333333333334], 
                RGBColor[1, 0.75, 0], 
                AbsoluteThickness[2]], 
               Line[{{3.818448*^9, 50.81}, {3.849984*^9, 45.56}}]}, 
              "Charting`Private`Tag#8"], 
             Annotation[{
               Hue[0.5585438199983166, 0.6, 0.6], 
               Directive[
                PointSize[0.007333333333333334], 
                RGBColor[0.647624, 0.37816, 0.614037], 
                AbsoluteThickness[2]], 
               
               Line[{{3.5659872*^9, 526.07}, {3.5975232*^9, 502.83}, {
                3.6290592*^9, 507.81}, {3.6605952*^9, 499.69}, {3.6922176*^9, 
                642.58}, {3.7237536*^9, 643.62}, {3.7552896*^9, 641.38}, {
                3.7868256*^9, 491.57}, {3.818448*^9, 624.08}, {3.849984*^9, 
                680.22}}]}, "Charting`Private`Tag#9"], 
             Annotation[{
               Hue[0.7946117974981064, 0.6, 0.6], 
               Directive[
                PointSize[0.007333333333333334], 
                RGBColor[0.571589, 0.586483, 0.], 
                AbsoluteThickness[2]], 
               
               Line[{{3.5659872*^9, 1017.65}, {3.5975232*^9, 874.29}, {
                3.6290592*^9, 959.24}, {3.6605952*^9, 703.17}, {3.6922176*^9, 
                698.97}, {3.7237536*^9, 815.02}, {3.7552896*^9, 818.06}, {
                3.7868256*^9, 680.72}, {3.818448*^9, 796.01}}]}, 
              "Charting`Private`Tag#10"], 
             Annotation[{
               Hue[0.030679774997896203`, 0.6, 0.6], 
               Directive[
                PointSize[0.007333333333333334], 
                RGBColor[0.915, 0.3325, 0.2125], 
                AbsoluteThickness[2]], 
               
               Line[{{3.5659872*^9, 402.66}, {3.5975232*^9, 363.85}, {
                3.6290592*^9, 307.01}, {3.6605952*^9, 328.75}, {3.6922176*^9, 
                299.07}, {3.7237536*^9, 296.38}, {3.7552896*^9, 326.16}, {
                3.7868256*^9, 293.29}, {3.818448*^9, 310.92}, {3.849984*^9, 
                326.98}}]}, "Charting`Private`Tag#11"], 
             Annotation[{
               Hue[0.266747752497686, 0.6, 0.6], 
               Directive[
                PointSize[0.007333333333333334], 
                RGBColor[0.40082222609352647`, 0.5220066643438841, 0.85], 
                AbsoluteThickness[2]], 
               
               Line[{{3.5659872*^9, 413.8}, {3.5975232*^9, 373.36}, {
                3.6290592*^9, 363.46}, {3.6605952*^9, 346.03}, {3.6922176*^9, 
                321.38}, {3.7237536*^9, 357.1}}]}, "Charting`Private`Tag#12"], 
             Annotation[{
               Hue[0.5028157299974758, 0.6, 0.6], 
               Directive[
                PointSize[0.007333333333333334], 
                RGBColor[
                0.9728288904374106, 0.621644452187053, 0.07336199581899142], 
                AbsoluteThickness[2]], 
               
               Line[{{3.5659872*^9, 7023.97}, {3.5975232*^9, 8007.93}, {
                3.6290592*^9, 6386.6}, {3.6605952*^9, 5342.8}, {3.6922176*^9, 
                5086.21}, {3.7237536*^9, 4570.74}, {3.7552896*^9, 4563.88}, {
                3.7868256*^9, 4002.34}, {3.818448*^9, 3745.84}}]}, 
              "Charting`Private`Tag#13"], 
             Annotation[{
               Hue[0.7388837074972656, 0.6, 0.6], 
               Directive[
                PointSize[0.007333333333333334], 
                RGBColor[0.736782672705901, 0.358, 0.5030266573755369], 
                AbsoluteThickness[2]], 
               
               Line[{{3.5659872*^9, 426.22}, {3.5975232*^9, 460.31}, {
                3.6290592*^9, 481.25}, {3.6605952*^9, 453.49}, {3.6922176*^9, 
                474.95}, {3.7237536*^9, 443.92}, {3.7552896*^9, 421.83}, {
                3.7868256*^9, 371.81}, {3.818448*^9, 361.76}, {3.849984*^9, 
                263.95}}]}, "Charting`Private`Tag#14"], 
             Annotation[{
               Hue[0.9749516849970554, 0.6, 0.6], 
               Directive[
                PointSize[0.007333333333333334], 
                RGBColor[0.28026441037696703`, 0.715, 0.4292089322474965], 
                AbsoluteThickness[2]], 
               
               Line[{{3.5659872*^9, 657.15}, {3.5975232*^9, 772.62}, {
                3.6290592*^9, 591.29}, {3.6605952*^9, 536.88}, {3.6922176*^9, 
                634.08}, {3.7237536*^9, 704.15}, {3.7552896*^9, 628.59}, {
                3.7868256*^9, 574.78}, {3.818448*^9, 536.9}, {3.849984*^9, 
                533.11}}]}, "Charting`Private`Tag#15"], 
             Annotation[{
               Hue[0.21101966249684523`, 0.6, 0.6], 
               Directive[
                PointSize[0.007333333333333334], 
                RGBColor[0.368417, 0.506779, 0.709798], 
                AbsoluteThickness[2]], 
               
               Line[{{3.6605952*^9, 1463.43}, {3.6922176*^9, 1616.14}, {
                3.7237536*^9, 1362.95}, {3.7552896*^9, 1235.07}, {
                3.7868256*^9, 1198.52}, {3.818448*^9, 1265.42}, {3.849984*^9, 
                1153.4}}]}, "Charting`Private`Tag#16"], 
             Annotation[{
               Hue[0.44708763999663503`, 0.6, 0.6], 
               Directive[
                PointSize[0.007333333333333334], 
                RGBColor[0.880722, 0.611041, 0.142051], 
                AbsoluteThickness[2]], 
               
               Line[{{3.5659872*^9, 709.73}, {3.5975232*^9, 772.65}, {
                3.6290592*^9, 718.43}, {3.6605952*^9, 729.22}, {3.6922176*^9, 
                701.55}, {3.7237536*^9, 681.92}, {3.7552896*^9, 655.32}, {
                3.7868256*^9, 551.2}, {3.818448*^9, 564.56}, {3.849984*^9, 
                571.85}}]}, "Charting`Private`Tag#17"], 
             Annotation[{
               Hue[0.6831556174964248, 0.6, 0.6], 
               Directive[
                PointSize[0.007333333333333334], 
                RGBColor[0.560181, 0.691569, 0.194885], 
                AbsoluteThickness[2]], 
               
               Line[{{3.5975232*^9, 665.54}, {3.6290592*^9, 613.39}, {
                3.6605952*^9, 381.87}, {3.6922176*^9, 502.07}}]}, 
              "Charting`Private`Tag#18"], 
             Annotation[{
               Hue[0.9192235949962146, 0.6, 0.6], 
               Directive[
                PointSize[0.007333333333333334], 
                RGBColor[0.922526, 0.385626, 0.209179], 
                AbsoluteThickness[2]], 
               
               Line[{{3.5659872*^9, 549.42}, {3.5975232*^9, 528.12}, {
                3.6290592*^9, 541.08}, {3.6605952*^9, 481.76}, {3.6922176*^9, 
                480.46}, {3.7237536*^9, 457.17}, {3.7552896*^9, 444.55}, {
                3.7868256*^9, 341.48}, {3.818448*^9, 355.37}, {3.849984*^9, 
                355.55}}]}, "Charting`Private`Tag#19"], 
             Annotation[{
               Hue[0.15529157249600445`, 0.6, 0.6], 
               Directive[
                PointSize[0.007333333333333334], 
                RGBColor[0.528488, 0.470624, 0.701351], 
                AbsoluteThickness[2]], 
               
               Line[{{3.5659872*^9, 407.29}, {3.5975232*^9, 3569.13}, {
                3.6290592*^9, 374.12}, {3.6605952*^9, 349.98}, {3.6922176*^9, 
                350.47}, {3.7237536*^9, 313.47}, {3.7552896*^9, 307.99}, {
                3.7868256*^9, 266.44}, {3.818448*^9, 265.67}, {3.849984*^9, 
                272.48}}]}, "Charting`Private`Tag#20"], 
             Annotation[{
               Hue[0.39135954999579425`, 0.6, 0.6], 
               Directive[
                PointSize[0.007333333333333334], 
                RGBColor[0.772079, 0.431554, 0.102387], 
                AbsoluteThickness[2]], 
               
               Line[{{3.5659872*^9, 978.24}, {3.5975232*^9, 819.99}, {
                3.6290592*^9, 716.4}, {3.6605952*^9, 792.44}, {3.6922176*^9, 
                661.24}, {3.7237536*^9, 751.83}, {3.7552896*^9, 781.87}, {
                3.7868256*^9, 689.06}}]}, "Charting`Private`Tag#21"], 
             Annotation[{
               Hue[0.6274275274955841, 0.6, 0.6], 
               Directive[
                PointSize[0.007333333333333334], 
                RGBColor[0.363898, 0.618501, 0.782349], 
                AbsoluteThickness[2]], 
               
               Line[{{3.5659872*^9, 678.64}, {3.5975232*^9, 506.95}, {
                3.6290592*^9, 569.9}, {3.6605952*^9, 546.01}, {3.6922176*^9, 
                504.08}, {3.7237536*^9, 453.68}, {3.7552896*^9, 440.92}, {
                3.7868256*^9, 341.72}, {3.818448*^9, 414.4}, {3.849984*^9, 
                441.98}}]}, "Charting`Private`Tag#22"], 
             Annotation[{
               Hue[0.8634955049953739, 0.6, 0.6], 
               Directive[
                PointSize[0.007333333333333334], 
                RGBColor[1, 0.75, 0], 
                AbsoluteThickness[2]], 
               
               Line[{{3.5659872*^9, 235.43}, {3.5975232*^9, 252.37}, {
                3.6290592*^9, 212.76}, {3.6605952*^9, 165.58}, {3.6922176*^9, 
                180.19}, {3.7237536*^9, 164.87}, {3.7552896*^9, 173.49}, {
                3.7868256*^9, 162.88}, {3.818448*^9, 183.93}, {3.849984*^9, 
                172.81}}]}, "Charting`Private`Tag#23"], 
             Annotation[{
               Hue[0.09956348249516367, 0.6, 0.6], 
               Directive[
                PointSize[0.007333333333333334], 
                RGBColor[0.647624, 0.37816, 0.614037], 
                AbsoluteThickness[2]], 
               
               Line[{{3.5659872*^9, 571.1}, {3.5975232*^9, 472.03}, {
                3.6290592*^9, 399.49}, {3.6605952*^9, 339.41}, {3.6922176*^9, 
                315.65}, {3.7237536*^9, 305.97}, {3.7552896*^9, 300.64}, {
                3.7868256*^9, 238.9}, {3.818448*^9, 283.27}, {3.849984*^9, 
                264.19}}]}, "Charting`Private`Tag#24"], 
             Annotation[{
               Hue[0.3356314599949535, 0.6, 0.6], 
               Directive[
                PointSize[0.007333333333333334], 
                RGBColor[0.571589, 0.586483, 0.], 
                AbsoluteThickness[2]], 
               
               Line[{{3.5659872*^9, 666.79}, {3.5975232*^9, 620.57}, {
                3.6290592*^9, 547.67}, {3.6605952*^9, 501.03}, {3.6922176*^9, 
                484.42}, {3.7237536*^9, 539.86}, {3.7552896*^9, 521.63}, {
                3.7868256*^9, 465.24}, {3.818448*^9, 433.02}, {3.849984*^9, 
                464.68}}]}, "Charting`Private`Tag#25"], 
             Annotation[{
               Hue[0.5716994374947433, 0.6, 0.6], 
               Directive[
                PointSize[0.007333333333333334], 
                RGBColor[0.915, 0.3325, 0.2125], 
                AbsoluteThickness[2]], 
               
               Line[{{3.5659872*^9, 3366.32}, {3.5975232*^9, 3174.6}, {
                3.6290592*^9, 3320.58}, {3.6605952*^9, 2843.54}, {
                3.6922176*^9, 1497.77}, {3.7237536*^9, 1502.27}, {
                3.7552896*^9, 1503.39}, {3.7868256*^9, 1460.41}, {3.818448*^9,
                 1459.04}, {3.849984*^9, 1397.96}}]}, 
              "Charting`Private`Tag#26"], 
             Annotation[{
               Hue[0.8077674149945295, 0.6, 0.6], 
               Directive[
                PointSize[0.007333333333333334], 
                RGBColor[0.40082222609352647`, 0.5220066643438841, 0.85], 
                AbsoluteThickness[2]], 
               
               Line[{{3.5659872*^9, 673.84}, {3.5975232*^9, 628.96}, {
                3.6290592*^9, 608.82}, {3.6605952*^9, 575.16}, {3.6922176*^9, 
                574.}, {3.7237536*^9, 598.45}, {3.7552896*^9, 612.97}, {
                3.7868256*^9, 668.07}, {3.818448*^9, 718.56}, {3.849984*^9, 
                733.2}}]}, "Charting`Private`Tag#27"], 
             Annotation[{
               Hue[0.04383539249432289, 0.6, 0.6], 
               Directive[
                PointSize[0.007333333333333334], 
                RGBColor[
                0.9728288904374106, 0.621644452187053, 0.07336199581899142], 
                AbsoluteThickness[2]], 
               
               Line[{{3.5975232*^9, 764.27}, {3.6290592*^9, 727.74}, {
                3.6605952*^9, 701.59}, {3.6922176*^9, 675.63}}]}, 
              "Charting`Private`Tag#28"], 
             Annotation[{
               Hue[0.27990336999410914`, 0.6, 0.6], 
               Directive[
                PointSize[0.007333333333333334], 
                RGBColor[0.736782672705901, 0.358, 0.5030266573755369], 
                AbsoluteThickness[2]], 
               
               Line[{{3.5975232*^9, 2903.39}, {3.6290592*^9, 2697.64}, {
                3.6605952*^9, 2562.33}, {3.6922176*^9, 2874.9}}]}, 
              "Charting`Private`Tag#29"], 
             Annotation[{
               Hue[0.5159713474939025, 0.6, 0.6], 
               Directive[
                PointSize[0.007333333333333334], 
                RGBColor[0.28026441037696703`, 0.715, 0.4292089322474965], 
                AbsoluteThickness[2]], 
               
               Line[{{3.5659872*^9, 1327.35}, {3.5975232*^9, 1250.18}, {
                3.6290592*^9, 1285.82}, {3.6605952*^9, 1196.44}, {
                3.6922176*^9, 1135.8}, {3.7237536*^9, 281.55}, {3.7552896*^9, 
                276.51}, {3.7868256*^9, 265.54}, {3.818448*^9, 250.44}, {
                3.849984*^9, 236.28}}]}, "Charting`Private`Tag#30"], 
             Annotation[{
               Hue[0.7520393249936888, 0.6, 0.6], 
               Directive[
                PointSize[0.007333333333333334], 
                RGBColor[0.368417, 0.506779, 0.709798], 
                AbsoluteThickness[2]], 
               
               Line[{{3.5659872*^9, 1332.23}, {3.5975232*^9, 1337.62}, {
                3.6290592*^9, 1312.25}, {3.6605952*^9, 1301.69}, {
                3.6922176*^9, 1248.95}, {3.7237536*^9, 1251.57}, {
                3.7552896*^9, 1137.22}, {3.7868256*^9, 1129.09}, {3.818448*^9,
                 1140.81}, {3.849984*^9, 1166.05}}]}, 
              "Charting`Private`Tag#31"], 
             Annotation[{
               Hue[0.9881073024934821, 0.6, 0.6], 
               Directive[
                PointSize[0.007333333333333334], 
                RGBColor[0.880722, 0.611041, 0.142051], 
                AbsoluteThickness[2]], 
               
               Line[{{3.5659872*^9, 2066.57}, {3.5975232*^9, 2118.27}, {
                3.6290592*^9, 2152.9}, {3.6605952*^9, 2118.8}}]}, 
              "Charting`Private`Tag#32"], {}, 
             Annotation[{
               Hue[0.4602432574930617, 0.6, 0.6], 
               Directive[
                PointSize[0.007333333333333334], 
                RGBColor[0.922526, 0.385626, 0.209179], 
                AbsoluteThickness[2]], 
               
               Line[{{3.5659872*^9, 1931.18}, {3.5975232*^9, 1449.74}, {
                3.6290592*^9, 1320.48}, {3.6605952*^9, 1236.16}, {
                3.6922176*^9, 1265.91}}]}, "Charting`Private`Tag#34"], {}, 
             Annotation[{
               Hue[0.9323792124926413, 0.6, 0.6], 
               Directive[
                PointSize[0.007333333333333334], 
                RGBColor[0.772079, 0.431554, 0.102387], 
                AbsoluteThickness[2]], 
               
               Line[{{3.5659872*^9, 521.51}, {3.5975232*^9, 500.55}, {
                3.6290592*^9, 442.86}, {3.6605952*^9, 596.58}, {3.6922176*^9, 
                566.85}, {3.7237536*^9, 537.31}, {3.7552896*^9, 580.38}, {
                3.7868256*^9, 595.46}, {3.818448*^9, 569.48}, {3.849984*^9, 
                486.01}}]}, "Charting`Private`Tag#36"], 
             Annotation[{
               Hue[0.16844718999242758`, 0.6, 0.6], 
               Directive[
                PointSize[0.007333333333333334], 
                RGBColor[0.363898, 0.618501, 0.782349], 
                AbsoluteThickness[2]], 
               Line[{{3.5659872*^9, 485.48}, {3.5975232*^9, 587.87}}], 
               
               Line[{{3.7552896*^9, 241.49}, {3.7868256*^9, 322.74}, {
                3.818448*^9, 387.47}, {3.849984*^9, 437.15}}]}, 
              "Charting`Private`Tag#37"], 
             Annotation[{
               Hue[0.40451516749222094`, 0.6, 0.6], 
               Directive[
                PointSize[0.007333333333333334], 
                RGBColor[1, 0.75, 0], 
                AbsoluteThickness[2]], 
               
               Line[{{3.6290592*^9, 559.33}, {3.6605952*^9, 508.21}, {
                3.6922176*^9, 379.3}, {3.7237536*^9, 404.62}, {3.7552896*^9, 
                386.11}, {3.7868256*^9, 346.21}, {3.818448*^9, 445.38}}]}, 
              "Charting`Private`Tag#38"], 
             Annotation[{
               Hue[0.6405831449920072, 0.6, 0.6], 
               Directive[
                PointSize[0.007333333333333334], 
                RGBColor[0.647624, 0.37816, 0.614037], 
                AbsoluteThickness[2]], 
               
               Line[{{3.5659872*^9, 485.82}, {3.5975232*^9, 523.45}, {
                3.6290592*^9, 493.58}, {3.6605952*^9, 488.34}, {3.6922176*^9, 
                474.3}, {3.7237536*^9, 447.02}, {3.7552896*^9, 427.76}, {
                3.7868256*^9, 385.84}, {3.818448*^9, 420.44}, {3.849984*^9, 
                403.3}}]}, "Charting`Private`Tag#39"], 
             Annotation[{
               Hue[0.8766511224918005, 0.6, 0.6], 
               Directive[
                PointSize[0.007333333333333334], 
                RGBColor[0.571589, 0.586483, 0.], 
                AbsoluteThickness[2]], 
               
               Line[{{3.5659872*^9, 661.94}, {3.5975232*^9, 642.86}, {
                3.6290592*^9, 670.84}, {3.6605952*^9, 583.17}, {3.6922176*^9, 
                558.09}, {3.7237536*^9, 687.25}, {3.7552896*^9, 722.4}, {
                3.7868256*^9, 592.05}, {3.818448*^9, 827.95}, {3.849984*^9, 
                805.83}}]}, "Charting`Private`Tag#40"], 
             Annotation[{
               Hue[0.1127190999915868, 0.6, 0.6], 
               Directive[
                PointSize[0.007333333333333334], 
                RGBColor[0.915, 0.3325, 0.2125], 
                AbsoluteThickness[2]], 
               
               Line[{{3.6605952*^9, 1047.13}, {3.6922176*^9, 1094.4}, {
                3.7237536*^9, 1136.17}, {3.7552896*^9, 1002.47}}]}, 
              "Charting`Private`Tag#41"]}, {
             Annotation[{
               Directive[
                PointSize[0.007333333333333334], 
                RGBColor[0.368417, 0.506779, 0.709798], 
                AbsoluteThickness[2]], 
               GeometricTransformation[
                Inset[
                 Style[
                  Graphics[{
                    EdgeForm[], 
                    Disk[{0, 0}]}, PlotRangePadding -> Scaled[0.15]], 
                  GraphicsBoxOptions -> {DefaultBaseStyle -> Directive[
                    PointSize[0.007333333333333334], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[2]]}], {0., 0.}, Automatic, 
                 Offset[10.976]], {{{3.5659872*^9, 1270.93}}, {{3.5975232*^9, 
                1051.21}}, {{3.6290592*^9, 1175.75}}, {{3.6922176*^9, 
                2099.12}}, {{3.7237536*^9, 2014.28}}, {{3.7552896*^9, 
                1771.98}}, {{3.7868256*^9, 1388.22}}}]}, 
              "Charting`Private`Tag#1"], 
             Annotation[{
               Directive[
                PointSize[0.007333333333333334], 
                RGBColor[0.880722, 0.611041, 0.142051], 
                AbsoluteThickness[2]], 
               GeometricTransformation[
                Inset[
                 Style[
                  Graphics[{
                    EdgeForm[], 
                    Polygon[{{-1, -1}, {1, -1}, {1, 1}, {-1, 1}}]}, 
                   PlotRangePadding -> Scaled[0.15]], 
                  GraphicsBoxOptions -> {DefaultBaseStyle -> Directive[
                    PointSize[0.007333333333333334], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[2]]}], {0., 0.}, Automatic, 
                 Offset[10.5]], {{{3.5659872*^9, 468.29}}, {{3.5975232*^9, 
                439.56}}, {{3.6290592*^9, 385.81}}, {{3.6605952*^9, 
                395.61}}, {{3.6922176*^9, 363.29}}, {{3.7237536*^9, 
                340.04}}, {{3.7552896*^9, 334.13}}, {{3.7868256*^9, 
                314.88}}, {{3.818448*^9, 348.74}}, {{3.849984*^9, 351.62}}}]},
               "Charting`Private`Tag#2"], 
             Annotation[{
               Directive[
                PointSize[0.007333333333333334], 
                RGBColor[0.560181, 0.691569, 0.194885], 
                AbsoluteThickness[2]], 
               GeometricTransformation[
                Inset[
                 Style[
                  Graphics[{
                    EdgeForm[], 
                    Polygon[{{0, 1}, {1, 0}, {0, -1}, {-1, 0}}]}], 
                  GraphicsBoxOptions -> {DefaultBaseStyle -> Directive[
                    PointSize[0.007333333333333334], 
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    AbsoluteThickness[2]]}], {0., 0.}, Automatic, 
                 Offset[10.2]], {{{3.5659872*^9, 741.49}}, {{3.5975232*^9, 
                692.75}}, {{3.6290592*^9, 622.2}}, {{3.6605952*^9, 582.}}, {{
                3.6922176*^9, 526.57}}, {{3.7237536*^9, 513.17}}, {{
                3.7552896*^9, 522.02}}, {{3.7868256*^9, 454.07}}, {{
                3.818448*^9, 473.06}}, {{3.849984*^9, 477.59}}}]}, 
              "Charting`Private`Tag#3"], 
             Annotation[{
               Directive[
                PointSize[0.007333333333333334], 
                RGBColor[0.922526, 0.385626, 0.209179], 
                AbsoluteThickness[2]], 
               GeometricTransformation[
                Inset[
                 Style[
                  Graphics[{
                    EdgeForm[], 
                    
                    Polygon[{{0, 1}, {-1, 1 - 3^Rational[1, 2]}, {
                    1, 1 - 3^Rational[1, 2]}}]}], 
                  GraphicsBoxOptions -> {DefaultBaseStyle -> Directive[
                    PointSize[0.007333333333333334], 
                    RGBColor[0.922526, 0.385626, 0.209179], 
                    AbsoluteThickness[2]]}], {0., 0.}, Automatic, 
                 Offset[11.4]], {{{3.5659872*^9, 3680.67}}, {{3.5975232*^9, 
                3720.97}}, {{3.6290592*^9, 3574.63}}, {{3.6605952*^9, 
                3442.74}}, {{3.6922176*^9, 3095.18}}, {{3.7237536*^9, 
                3162.05}}, {{3.7552896*^9, 885.95}}, {{3.7868256*^9, 
                966.17}}, {{3.818448*^9, 904.31}}, {{3.849984*^9, 896.68}}}]},
               "Charting`Private`Tag#4"], 
             Annotation[{
               Directive[
                PointSize[0.007333333333333334], 
                RGBColor[0.528488, 0.470624, 0.701351], 
                AbsoluteThickness[2]], 
               GeometricTransformation[
                Inset[
                 Style[
                  Graphics[{
                    EdgeForm[], 
                    
                    Polygon[{{0, -1}, {-1, -1 + 3^Rational[1, 2]}, {
                    1, -1 + 3^Rational[1, 2]}}]}], 
                  GraphicsBoxOptions -> {DefaultBaseStyle -> Directive[
                    PointSize[0.007333333333333334], 
                    RGBColor[0.528488, 0.470624, 0.701351], 
                    AbsoluteThickness[2]]}], {0., 0.}, Automatic, 
                 Offset[11.52]], {{{3.5659872*^9, 938.78}}, {{3.5975232*^9, 
                927.08}}, {{3.6290592*^9, 910.73}}, {{3.6605952*^9, 
                897.92}}, {{3.6922176*^9, 867.7}}, {{3.7237536*^9, 
                860.39}}, {{3.7552896*^9, 877.95}}, {{3.7868256*^9, 
                840.8}}, {{3.818448*^9, 796.22}}, {{3.849984*^9, 777.75}}}]}, 
              "Charting`Private`Tag#5"], 
             Annotation[{
               Directive[
                PointSize[0.007333333333333334], 
                RGBColor[0.772079, 0.431554, 0.102387], 
                AbsoluteThickness[2]], 
               GeometricTransformation[
                Inset[
                 Style[
                  Graphics[
                   Circle[{0, 0}], PlotRangePadding -> Scaled[0.15]], 
                  GraphicsBoxOptions -> {DefaultBaseStyle -> Directive[
                    PointSize[0.007333333333333334], 
                    RGBColor[0.772079, 0.431554, 0.102387], 
                    AbsoluteThickness[2]]}], {0., 0.}, Automatic, 
                 Offset[10.752]], {{{3.5659872*^9, 642.11}}, {{3.5975232*^9, 
                582.91}}, {{3.6290592*^9, 560.89}}, {{3.6605952*^9, 
                578.98}}, {{3.6922176*^9, 510.32}}, {{3.7237536*^9, 
                432.25}}, {{3.7552896*^9, 430.47}}, {{3.7868256*^9, 
                372.39}}, {{3.818448*^9, 343.52}}, {{3.849984*^9, 288.11}}}]},
               "Charting`Private`Tag#6"], {}, 
             Annotation[{
               Directive[
                PointSize[0.007333333333333334], 
                RGBColor[1, 0.75, 0], 
                AbsoluteThickness[2]], 
               GeometricTransformation[
                Inset[
                 Style[
                  Graphics[{
                    EdgeForm[
                    Thickness[Medium]], 
                    FaceForm[], 
                    Line[{{0, 1}, {1, 0}, {0, -1}, {-1, 0}, {0, 1}}]}, 
                   PlotRangePadding -> Scaled[0.15]], 
                  GraphicsBoxOptions -> {DefaultBaseStyle -> Directive[
                    PointSize[0.007333333333333334], 
                    RGBColor[1, 0.75, 0], 
                    AbsoluteThickness[2]]}], {0., 0.}, Automatic, 
                 Offset[13.056]], {{{3.818448*^9, 50.81}}, {{3.849984*^9, 
                45.56}}}]}, "Charting`Private`Tag#8"], 
             Annotation[{
               Directive[
                PointSize[0.007333333333333334], 
                RGBColor[0.647624, 0.37816, 0.614037], 
                AbsoluteThickness[2]], 
               GeometricTransformation[
                Inset[
                 Style[
                  Graphics[{
                    EdgeForm[
                    Thickness[Medium]], 
                    FaceForm[], 
                    
                    Line[{{0, 1}, {-1, 1 - 3^Rational[1, 2]}, {
                    1, 1 - 3^Rational[1, 2]}, {0, 1}}]}, PlotRangePadding -> 
                   Scaled[0.15]], 
                  GraphicsBoxOptions -> {DefaultBaseStyle -> Directive[
                    PointSize[0.007333333333333334], 
                    RGBColor[0.647624, 0.37816, 0.614037], 
                    AbsoluteThickness[2]]}], {0., 0.}, Automatic, 
                 Offset[12.288]], {{{3.5659872*^9, 526.07}}, {{3.5975232*^9, 
                502.83}}, {{3.6290592*^9, 507.81}}, {{3.6605952*^9, 
                499.69}}, {{3.6922176*^9, 642.58}}, {{3.7237536*^9, 
                643.62}}, {{3.7552896*^9, 641.38}}, {{3.7868256*^9, 
                491.57}}, {{3.818448*^9, 624.08}}, {{3.849984*^9, 680.22}}}]},
               "Charting`Private`Tag#9"], 
             Annotation[{
               Directive[
                PointSize[0.007333333333333334], 
                RGBColor[0.571589, 0.586483, 0.], 
                AbsoluteThickness[2]], 
               GeometricTransformation[
                Inset[
                 Style[
                  Graphics[{
                    EdgeForm[
                    Thickness[Medium]], 
                    FaceForm[], 
                    
                    Line[{{0, -1}, {-1, -1 + 3^Rational[1, 2]}, {
                    1, -1 + 3^Rational[1, 2]}, {0, -1}}]}, PlotRangePadding -> 
                   Scaled[0.15]], 
                  GraphicsBoxOptions -> {DefaultBaseStyle -> Directive[
                    PointSize[0.007333333333333334], 
                    RGBColor[0.571589, 0.586483, 0.], 
                    AbsoluteThickness[2]]}], {0., 0.}, Automatic, 
                 Offset[12.288]], {{{3.5659872*^9, 1017.65}}, {{3.5975232*^9, 
                874.29}}, {{3.6290592*^9, 959.24}}, {{3.6605952*^9, 
                703.17}}, {{3.6922176*^9, 698.97}}, {{3.7237536*^9, 
                815.02}}, {{3.7552896*^9, 818.06}}, {{3.7868256*^9, 
                680.72}}, {{3.818448*^9, 796.01}}}]}, 
              "Charting`Private`Tag#10"], 
             Annotation[{
               Directive[
                PointSize[0.007333333333333334], 
                RGBColor[0.915, 0.3325, 0.2125], 
                AbsoluteThickness[2]], 
               GeometricTransformation[
                Inset[
                 Style[
                  Graphics[{
                    EdgeForm[], 
                    Disk[{0, 0}]}, PlotRangePadding -> Scaled[0.15]], 
                  GraphicsBoxOptions -> {DefaultBaseStyle -> Directive[
                    PointSize[0.007333333333333334], 
                    RGBColor[0.915, 0.3325, 0.2125], 
                    AbsoluteThickness[2]]}], {0., 0.}, Automatic, 
                 Offset[10.976]], {{{3.5659872*^9, 402.66}}, {{3.5975232*^9, 
                363.85}}, {{3.6290592*^9, 307.01}}, {{3.6605952*^9, 
                328.75}}, {{3.6922176*^9, 299.07}}, {{3.7237536*^9, 
                296.38}}, {{3.7552896*^9, 326.16}}, {{3.7868256*^9, 
                293.29}}, {{3.818448*^9, 310.92}}, {{3.849984*^9, 326.98}}}]},
               "Charting`Private`Tag#11"], 
             Annotation[{
               Directive[
                PointSize[0.007333333333333334], 
                RGBColor[0.40082222609352647`, 0.5220066643438841, 0.85], 
                AbsoluteThickness[2]], 
               GeometricTransformation[
                Inset[
                 Style[
                  Graphics[{
                    EdgeForm[], 
                    Polygon[{{-1, -1}, {1, -1}, {1, 1}, {-1, 1}}]}, 
                   PlotRangePadding -> Scaled[0.15]], 
                  GraphicsBoxOptions -> {DefaultBaseStyle -> Directive[
                    PointSize[0.007333333333333334], 
                    RGBColor[0.40082222609352647`, 0.5220066643438841, 0.85], 
                    AbsoluteThickness[2]]}], {0., 0.}, Automatic, 
                 Offset[10.5]], {{{3.5659872*^9, 413.8}}, {{3.5975232*^9, 
                373.36}}, {{3.6290592*^9, 363.46}}, {{3.6605952*^9, 
                346.03}}, {{3.6922176*^9, 321.38}}, {{3.7237536*^9, 
                357.1}}}]}, "Charting`Private`Tag#12"], 
             Annotation[{
               Directive[
                PointSize[0.007333333333333334], 
                RGBColor[
                0.9728288904374106, 0.621644452187053, 0.07336199581899142], 
                AbsoluteThickness[2]], 
               GeometricTransformation[
                Inset[
                 Style[
                  Graphics[{
                    EdgeForm[], 
                    Polygon[{{0, 1}, {1, 0}, {0, -1}, {-1, 0}}]}], 
                  GraphicsBoxOptions -> {DefaultBaseStyle -> Directive[
                    PointSize[0.007333333333333334], 
                    RGBColor[
                    0.9728288904374106, 0.621644452187053, 
                    0.07336199581899142], 
                    AbsoluteThickness[2]]}], {0., 0.}, Automatic, 
                 Offset[10.2]], {{{3.5659872*^9, 7023.97}}, {{3.5975232*^9, 
                8007.93}}, {{3.6290592*^9, 6386.6}}, {{3.6605952*^9, 
                5342.8}}, {{3.6922176*^9, 5086.21}}, {{3.7237536*^9, 
                4570.74}}, {{3.7552896*^9, 4563.88}}, {{3.7868256*^9, 
                4002.34}}, {{3.818448*^9, 3745.84}}}]}, 
              "Charting`Private`Tag#13"], 
             Annotation[{
               Directive[
                PointSize[0.007333333333333334], 
                RGBColor[0.736782672705901, 0.358, 0.5030266573755369], 
                AbsoluteThickness[2]], 
               GeometricTransformation[
                Inset[
                 Style[
                  Graphics[{
                    EdgeForm[], 
                    
                    Polygon[{{0, 1}, {-1, 1 - 3^Rational[1, 2]}, {
                    1, 1 - 3^Rational[1, 2]}}]}], 
                  GraphicsBoxOptions -> {DefaultBaseStyle -> Directive[
                    PointSize[0.007333333333333334], 
                    RGBColor[0.736782672705901, 0.358, 0.5030266573755369], 
                    AbsoluteThickness[2]]}], {0., 0.}, Automatic, 
                 Offset[11.4]], {{{3.5659872*^9, 426.22}}, {{3.5975232*^9, 
                460.31}}, {{3.6290592*^9, 481.25}}, {{3.6605952*^9, 
                453.49}}, {{3.6922176*^9, 474.95}}, {{3.7237536*^9, 
                443.92}}, {{3.7552896*^9, 421.83}}, {{3.7868256*^9, 
                371.81}}, {{3.818448*^9, 361.76}}, {{3.849984*^9, 263.95}}}]},
               "Charting`Private`Tag#14"], 
             Annotation[{
               Directive[
                PointSize[0.007333333333333334], 
                RGBColor[0.28026441037696703`, 0.715, 0.4292089322474965], 
                AbsoluteThickness[2]], 
               GeometricTransformation[
                Inset[
                 Style[
                  Graphics[{
                    EdgeForm[], 
                    
                    Polygon[{{0, -1}, {-1, -1 + 3^Rational[1, 2]}, {
                    1, -1 + 3^Rational[1, 2]}}]}], 
                  GraphicsBoxOptions -> {DefaultBaseStyle -> Directive[
                    PointSize[0.007333333333333334], 
                    RGBColor[0.28026441037696703`, 0.715, 0.4292089322474965], 
                    AbsoluteThickness[2]]}], {0., 0.}, Automatic, 
                 Offset[11.52]], {{{3.5659872*^9, 657.15}}, {{3.5975232*^9, 
                772.62}}, {{3.6290592*^9, 591.29}}, {{3.6605952*^9, 
                536.88}}, {{3.6922176*^9, 634.08}}, {{3.7237536*^9, 
                704.15}}, {{3.7552896*^9, 628.59}}, {{3.7868256*^9, 
                574.78}}, {{3.818448*^9, 536.9}}, {{3.849984*^9, 533.11}}}]}, 
              "Charting`Private`Tag#15"], 
             Annotation[{
               Directive[
                PointSize[0.007333333333333334], 
                RGBColor[0.368417, 0.506779, 0.709798], 
                AbsoluteThickness[2]], 
               GeometricTransformation[
                Inset[
                 Style[
                  Graphics[
                   Circle[{0, 0}], PlotRangePadding -> Scaled[0.15]], 
                  GraphicsBoxOptions -> {DefaultBaseStyle -> Directive[
                    PointSize[0.007333333333333334], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[2]]}], {0., 0.}, Automatic, 
                 Offset[10.752]], {{{3.6605952*^9, 1463.43}}, {{3.6922176*^9, 
                1616.14}}, {{3.7237536*^9, 1362.95}}, {{3.7552896*^9, 
                1235.07}}, {{3.7868256*^9, 1198.52}}, {{3.818448*^9, 
                1265.42}}, {{3.849984*^9, 1153.4}}}]}, 
              "Charting`Private`Tag#16"], 
             Annotation[{
               Directive[
                PointSize[0.007333333333333334], 
                RGBColor[0.880722, 0.611041, 0.142051], 
                AbsoluteThickness[2]], 
               GeometricTransformation[
                Inset[
                 Style[
                  Graphics[{
                    EdgeForm[
                    Thickness[Medium]], 
                    FaceForm[], 
                    Line[{{-1, -1}, {1, -1}, {1, 1}, {-1, 1}, {-1, -1}}]}, 
                   PlotRangePadding -> Scaled[0.15]], 
                  GraphicsBoxOptions -> {DefaultBaseStyle -> Directive[
                    PointSize[0.007333333333333334], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[2]]}], {0., 0.}, Automatic, 
                 Offset[10.752]], {{{3.5659872*^9, 709.73}}, {{3.5975232*^9, 
                772.65}}, {{3.6290592*^9, 718.43}}, {{3.6605952*^9, 
                729.22}}, {{3.6922176*^9, 701.55}}, {{3.7237536*^9, 
                681.92}}, {{3.7552896*^9, 655.32}}, {{3.7868256*^9, 
                551.2}}, {{3.818448*^9, 564.56}}, {{3.849984*^9, 571.85}}}]}, 
              "Charting`Private`Tag#17"], 
             Annotation[{
               Directive[
                PointSize[0.007333333333333334], 
                RGBColor[0.560181, 0.691569, 0.194885], 
                AbsoluteThickness[2]], 
               GeometricTransformation[
                Inset[
                 Style[
                  Graphics[{
                    EdgeForm[
                    Thickness[Medium]], 
                    FaceForm[], 
                    Line[{{0, 1}, {1, 0}, {0, -1}, {-1, 0}, {0, 1}}]}, 
                   PlotRangePadding -> Scaled[0.15]], 
                  GraphicsBoxOptions -> {DefaultBaseStyle -> Directive[
                    PointSize[0.007333333333333334], 
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    AbsoluteThickness[2]]}], {0., 0.}, Automatic, 
                 Offset[13.056]], {{{3.5975232*^9, 665.54}}, {{3.6290592*^9, 
                613.39}}, {{3.6605952*^9, 381.87}}, {{3.6922176*^9, 
                502.07}}}]}, "Charting`Private`Tag#18"], 
             Annotation[{
               Directive[
                PointSize[0.007333333333333334], 
                RGBColor[0.922526, 0.385626, 0.209179], 
                AbsoluteThickness[2]], 
               GeometricTransformation[
                Inset[
                 Style[
                  Graphics[{
                    EdgeForm[
                    Thickness[Medium]], 
                    FaceForm[], 
                    
                    Line[{{0, 1}, {-1, 1 - 3^Rational[1, 2]}, {
                    1, 1 - 3^Rational[1, 2]}, {0, 1}}]}, PlotRangePadding -> 
                   Scaled[0.15]], 
                  GraphicsBoxOptions -> {DefaultBaseStyle -> Directive[
                    PointSize[0.007333333333333334], 
                    RGBColor[0.922526, 0.385626, 0.209179], 
                    AbsoluteThickness[2]]}], {0., 0.}, Automatic, 
                 Offset[12.288]], {{{3.5659872*^9, 549.42}}, {{3.5975232*^9, 
                528.12}}, {{3.6290592*^9, 541.08}}, {{3.6605952*^9, 
                481.76}}, {{3.6922176*^9, 480.46}}, {{3.7237536*^9, 
                457.17}}, {{3.7552896*^9, 444.55}}, {{3.7868256*^9, 
                341.48}}, {{3.818448*^9, 355.37}}, {{3.849984*^9, 355.55}}}]},
               "Charting`Private`Tag#19"], 
             Annotation[{
               Directive[
                PointSize[0.007333333333333334], 
                RGBColor[0.528488, 0.470624, 0.701351], 
                AbsoluteThickness[2]], 
               GeometricTransformation[
                Inset[
                 Style[
                  Graphics[{
                    EdgeForm[
                    Thickness[Medium]], 
                    FaceForm[], 
                    
                    Line[{{0, -1}, {-1, -1 + 3^Rational[1, 2]}, {
                    1, -1 + 3^Rational[1, 2]}, {0, -1}}]}, PlotRangePadding -> 
                   Scaled[0.15]], 
                  GraphicsBoxOptions -> {DefaultBaseStyle -> Directive[
                    PointSize[0.007333333333333334], 
                    RGBColor[0.528488, 0.470624, 0.701351], 
                    AbsoluteThickness[2]]}], {0., 0.}, Automatic, 
                 Offset[12.288]], {{{3.5659872*^9, 407.29}}, {{3.5975232*^9, 
                3569.13}}, {{3.6290592*^9, 374.12}}, {{3.6605952*^9, 
                349.98}}, {{3.6922176*^9, 350.47}}, {{3.7237536*^9, 
                313.47}}, {{3.7552896*^9, 307.99}}, {{3.7868256*^9, 
                266.44}}, {{3.818448*^9, 265.67}}, {{3.849984*^9, 272.48}}}]},
               "Charting`Private`Tag#20"], 
             Annotation[{
               Directive[
                PointSize[0.007333333333333334], 
                RGBColor[0.772079, 0.431554, 0.102387], 
                AbsoluteThickness[2]], 
               GeometricTransformation[
                Inset[
                 Style[
                  Graphics[{
                    EdgeForm[], 
                    Disk[{0, 0}]}, PlotRangePadding -> Scaled[0.15]], 
                  GraphicsBoxOptions -> {DefaultBaseStyle -> Directive[
                    PointSize[0.007333333333333334], 
                    RGBColor[0.772079, 0.431554, 0.102387], 
                    AbsoluteThickness[2]]}], {0., 0.}, Automatic, 
                 Offset[10.976]], {{{3.5659872*^9, 978.24}}, {{3.5975232*^9, 
                819.99}}, {{3.6290592*^9, 716.4}}, {{3.6605952*^9, 
                792.44}}, {{3.6922176*^9, 661.24}}, {{3.7237536*^9, 
                751.83}}, {{3.7552896*^9, 781.87}}, {{3.7868256*^9, 
                689.06}}}]}, "Charting`Private`Tag#21"], 
             Annotation[{
               Directive[
                PointSize[0.007333333333333334], 
                RGBColor[0.363898, 0.618501, 0.782349], 
                AbsoluteThickness[2]], 
               GeometricTransformation[
                Inset[
                 Style[
                  Graphics[{
                    EdgeForm[], 
                    Polygon[{{-1, -1}, {1, -1}, {1, 1}, {-1, 1}}]}, 
                   PlotRangePadding -> Scaled[0.15]], 
                  GraphicsBoxOptions -> {DefaultBaseStyle -> Directive[
                    PointSize[0.007333333333333334], 
                    RGBColor[0.363898, 0.618501, 0.782349], 
                    AbsoluteThickness[2]]}], {0., 0.}, Automatic, 
                 Offset[10.5]], {{{3.5659872*^9, 678.64}}, {{3.5975232*^9, 
                506.95}}, {{3.6290592*^9, 569.9}}, {{3.6605952*^9, 
                546.01}}, {{3.6922176*^9, 504.08}}, {{3.7237536*^9, 
                453.68}}, {{3.7552896*^9, 440.92}}, {{3.7868256*^9, 
                341.72}}, {{3.818448*^9, 414.4}}, {{3.849984*^9, 441.98}}}]}, 
              "Charting`Private`Tag#22"], 
             Annotation[{
               Directive[
                PointSize[0.007333333333333334], 
                RGBColor[1, 0.75, 0], 
                AbsoluteThickness[2]], 
               GeometricTransformation[
                Inset[
                 Style[
                  Graphics[{
                    EdgeForm[], 
                    Polygon[{{0, 1}, {1, 0}, {0, -1}, {-1, 0}}]}], 
                  GraphicsBoxOptions -> {DefaultBaseStyle -> Directive[
                    PointSize[0.007333333333333334], 
                    RGBColor[1, 0.75, 0], 
                    AbsoluteThickness[2]]}], {0., 0.}, Automatic, 
                 Offset[10.2]], {{{3.5659872*^9, 235.43}}, {{3.5975232*^9, 
                252.37}}, {{3.6290592*^9, 212.76}}, {{3.6605952*^9, 
                165.58}}, {{3.6922176*^9, 180.19}}, {{3.7237536*^9, 
                164.87}}, {{3.7552896*^9, 173.49}}, {{3.7868256*^9, 
                162.88}}, {{3.818448*^9, 183.93}}, {{3.849984*^9, 172.81}}}]},
               "Charting`Private`Tag#23"], 
             Annotation[{
               Directive[
                PointSize[0.007333333333333334], 
                RGBColor[0.647624, 0.37816, 0.614037], 
                AbsoluteThickness[2]], 
               GeometricTransformation[
                Inset[
                 Style[
                  Graphics[{
                    EdgeForm[], 
                    
                    Polygon[{{0, 1}, {-1, 1 - 3^Rational[1, 2]}, {
                    1, 1 - 3^Rational[1, 2]}}]}], 
                  GraphicsBoxOptions -> {DefaultBaseStyle -> Directive[
                    PointSize[0.007333333333333334], 
                    RGBColor[0.647624, 0.37816, 0.614037], 
                    AbsoluteThickness[2]]}], {0., 0.}, Automatic, 
                 Offset[11.4]], {{{3.5659872*^9, 571.1}}, {{3.5975232*^9, 
                472.03}}, {{3.6290592*^9, 399.49}}, {{3.6605952*^9, 
                339.41}}, {{3.6922176*^9, 315.65}}, {{3.7237536*^9, 
                305.97}}, {{3.7552896*^9, 300.64}}, {{3.7868256*^9, 
                238.9}}, {{3.818448*^9, 283.27}}, {{3.849984*^9, 264.19}}}]}, 
              "Charting`Private`Tag#24"], 
             Annotation[{
               Directive[
                PointSize[0.007333333333333334], 
                RGBColor[0.571589, 0.586483, 0.], 
                AbsoluteThickness[2]], 
               GeometricTransformation[
                Inset[
                 Style[
                  Graphics[{
                    EdgeForm[], 
                    
                    Polygon[{{0, -1}, {-1, -1 + 3^Rational[1, 2]}, {
                    1, -1 + 3^Rational[1, 2]}}]}], 
                  GraphicsBoxOptions -> {DefaultBaseStyle -> Directive[
                    PointSize[0.007333333333333334], 
                    RGBColor[0.571589, 0.586483, 0.], 
                    AbsoluteThickness[2]]}], {0., 0.}, Automatic, 
                 Offset[11.52]], {{{3.5659872*^9, 666.79}}, {{3.5975232*^9, 
                620.57}}, {{3.6290592*^9, 547.67}}, {{3.6605952*^9, 
                501.03}}, {{3.6922176*^9, 484.42}}, {{3.7237536*^9, 
                539.86}}, {{3.7552896*^9, 521.63}}, {{3.7868256*^9, 
                465.24}}, {{3.818448*^9, 433.02}}, {{3.849984*^9, 464.68}}}]},
               "Charting`Private`Tag#25"], 
             Annotation[{
               Directive[
                PointSize[0.007333333333333334], 
                RGBColor[0.915, 0.3325, 0.2125], 
                AbsoluteThickness[2]], 
               GeometricTransformation[
                Inset[
                 Style[
                  Graphics[
                   Circle[{0, 0}], PlotRangePadding -> Scaled[0.15]], 
                  GraphicsBoxOptions -> {DefaultBaseStyle -> Directive[
                    PointSize[0.007333333333333334], 
                    RGBColor[0.915, 0.3325, 0.2125], 
                    AbsoluteThickness[2]]}], {0., 0.}, Automatic, 
                 Offset[10.752]], {{{3.5659872*^9, 3366.32}}, {{3.5975232*^9, 
                3174.6}}, {{3.6290592*^9, 3320.58}}, {{3.6605952*^9, 
                2843.54}}, {{3.6922176*^9, 1497.77}}, {{3.7237536*^9, 
                1502.27}}, {{3.7552896*^9, 1503.39}}, {{3.7868256*^9, 
                1460.41}}, {{3.818448*^9, 1459.04}}, {{3.849984*^9, 
                1397.96}}}]}, "Charting`Private`Tag#26"], 
             Annotation[{
               Directive[
                PointSize[0.007333333333333334], 
                RGBColor[0.40082222609352647`, 0.5220066643438841, 0.85], 
                AbsoluteThickness[2]], 
               GeometricTransformation[
                Inset[
                 Style[
                  Graphics[{
                    EdgeForm[
                    Thickness[Medium]], 
                    FaceForm[], 
                    Line[{{-1, -1}, {1, -1}, {1, 1}, {-1, 1}, {-1, -1}}]}, 
                   PlotRangePadding -> Scaled[0.15]], 
                  GraphicsBoxOptions -> {DefaultBaseStyle -> Directive[
                    PointSize[0.007333333333333334], 
                    RGBColor[0.40082222609352647`, 0.5220066643438841, 0.85], 
                    AbsoluteThickness[2]]}], {0., 0.}, Automatic, 
                 Offset[10.752]], {{{3.5659872*^9, 673.84}}, {{3.5975232*^9, 
                628.96}}, {{3.6290592*^9, 608.82}}, {{3.6605952*^9, 
                575.16}}, {{3.6922176*^9, 574.}}, {{3.7237536*^9, 598.45}}, {{
                3.7552896*^9, 612.97}}, {{3.7868256*^9, 668.07}}, {{
                3.818448*^9, 718.56}}, {{3.849984*^9, 733.2}}}]}, 
              "Charting`Private`Tag#27"], 
             Annotation[{
               Directive[
                PointSize[0.007333333333333334], 
                RGBColor[
                0.9728288904374106, 0.621644452187053, 0.07336199581899142], 
                AbsoluteThickness[2]], 
               GeometricTransformation[
                Inset[
                 Style[
                  Graphics[{
                    EdgeForm[
                    Thickness[Medium]], 
                    FaceForm[], 
                    Line[{{0, 1}, {1, 0}, {0, -1}, {-1, 0}, {0, 1}}]}, 
                   PlotRangePadding -> Scaled[0.15]], 
                  GraphicsBoxOptions -> {DefaultBaseStyle -> Directive[
                    PointSize[0.007333333333333334], 
                    RGBColor[
                    0.9728288904374106, 0.621644452187053, 
                    0.07336199581899142], 
                    AbsoluteThickness[2]]}], {0., 0.}, Automatic, 
                 Offset[13.056]], {{{3.5975232*^9, 764.27}}, {{3.6290592*^9, 
                727.74}}, {{3.6605952*^9, 701.59}}, {{3.6922176*^9, 
                675.63}}}]}, "Charting`Private`Tag#28"], 
             Annotation[{
               Directive[
                PointSize[0.007333333333333334], 
                RGBColor[0.736782672705901, 0.358, 0.5030266573755369], 
                AbsoluteThickness[2]], 
               GeometricTransformation[
                Inset[
                 Style[
                  Graphics[{
                    EdgeForm[
                    Thickness[Medium]], 
                    FaceForm[], 
                    
                    Line[{{0, 1}, {-1, 1 - 3^Rational[1, 2]}, {
                    1, 1 - 3^Rational[1, 2]}, {0, 1}}]}, PlotRangePadding -> 
                   Scaled[0.15]], 
                  GraphicsBoxOptions -> {DefaultBaseStyle -> Directive[
                    PointSize[0.007333333333333334], 
                    RGBColor[0.736782672705901, 0.358, 0.5030266573755369], 
                    AbsoluteThickness[2]]}], {0., 0.}, Automatic, 
                 Offset[12.288]], {{{3.5975232*^9, 2903.39}}, {{3.6290592*^9, 
                2697.64}}, {{3.6605952*^9, 2562.33}}, {{3.6922176*^9, 
                2874.9}}}]}, "Charting`Private`Tag#29"], 
             Annotation[{
               Directive[
                PointSize[0.007333333333333334], 
                RGBColor[0.28026441037696703`, 0.715, 0.4292089322474965], 
                AbsoluteThickness[2]], 
               GeometricTransformation[
                Inset[
                 Style[
                  Graphics[{
                    EdgeForm[
                    Thickness[Medium]], 
                    FaceForm[], 
                    
                    Line[{{0, -1}, {-1, -1 + 3^Rational[1, 2]}, {
                    1, -1 + 3^Rational[1, 2]}, {0, -1}}]}, PlotRangePadding -> 
                   Scaled[0.15]], 
                  GraphicsBoxOptions -> {DefaultBaseStyle -> Directive[
                    PointSize[0.007333333333333334], 
                    RGBColor[0.28026441037696703`, 0.715, 0.4292089322474965], 
                    AbsoluteThickness[2]]}], {0., 0.}, Automatic, 
                 Offset[12.288]], {{{3.5659872*^9, 1327.35}}, {{3.5975232*^9, 
                1250.18}}, {{3.6290592*^9, 1285.82}}, {{3.6605952*^9, 
                1196.44}}, {{3.6922176*^9, 1135.8}}, {{3.7237536*^9, 
                281.55}}, {{3.7552896*^9, 276.51}}, {{3.7868256*^9, 
                265.54}}, {{3.818448*^9, 250.44}}, {{3.849984*^9, 236.28}}}]},
               "Charting`Private`Tag#30"], 
             Annotation[{
               Directive[
                PointSize[0.007333333333333334], 
                RGBColor[0.368417, 0.506779, 0.709798], 
                AbsoluteThickness[2]], 
               GeometricTransformation[
                Inset[
                 Style[
                  Graphics[{
                    EdgeForm[], 
                    Disk[{0, 0}]}, PlotRangePadding -> Scaled[0.15]], 
                  GraphicsBoxOptions -> {DefaultBaseStyle -> Directive[
                    PointSize[0.007333333333333334], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[2]]}], {0., 0.}, Automatic, 
                 Offset[10.976]], {{{3.5659872*^9, 1332.23}}, {{3.5975232*^9, 
                1337.62}}, {{3.6290592*^9, 1312.25}}, {{3.6605952*^9, 
                1301.69}}, {{3.6922176*^9, 1248.95}}, {{3.7237536*^9, 
                1251.57}}, {{3.7552896*^9, 1137.22}}, {{3.7868256*^9, 
                1129.09}}, {{3.818448*^9, 1140.81}}, {{3.849984*^9, 
                1166.05}}}]}, "Charting`Private`Tag#31"], 
             Annotation[{
               Directive[
                PointSize[0.007333333333333334], 
                RGBColor[0.880722, 0.611041, 0.142051], 
                AbsoluteThickness[2]], 
               GeometricTransformation[
                Inset[
                 Style[
                  Graphics[{
                    EdgeForm[], 
                    Polygon[{{-1, -1}, {1, -1}, {1, 1}, {-1, 1}}]}, 
                   PlotRangePadding -> Scaled[0.15]], 
                  GraphicsBoxOptions -> {DefaultBaseStyle -> Directive[
                    PointSize[0.007333333333333334], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[2]]}], {0., 0.}, Automatic, 
                 Offset[10.5]], {{{3.5659872*^9, 2066.57}}, {{3.5975232*^9, 
                2118.27}}, {{3.6290592*^9, 2152.9}}, {{3.6605952*^9, 
                2118.8}}}]}, "Charting`Private`Tag#32"], 
             Annotation[{
               Directive[
                PointSize[0.007333333333333334], 
                RGBColor[0.560181, 0.691569, 0.194885], 
                AbsoluteThickness[2]], 
               GeometricTransformation[
                Inset[
                 Style[
                  Graphics[{
                    EdgeForm[], 
                    Polygon[{{0, 1}, {1, 0}, {0, -1}, {-1, 0}}]}], 
                  GraphicsBoxOptions -> {DefaultBaseStyle -> Directive[
                    PointSize[0.007333333333333334], 
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    AbsoluteThickness[2]]}], {0., 0.}, Automatic, 
                 Offset[10.2]], {{{3.5659872*^9, 858.23}}, {{3.6922176*^9, 
                1527.61}}}]}, "Charting`Private`Tag#33"], 
             Annotation[{
               Directive[
                PointSize[0.007333333333333334], 
                RGBColor[0.922526, 0.385626, 0.209179], 
                AbsoluteThickness[2]], 
               GeometricTransformation[
                Inset[
                 Style[
                  Graphics[{
                    EdgeForm[], 
                    
                    Polygon[{{0, 1}, {-1, 1 - 3^Rational[1, 2]}, {
                    1, 1 - 3^Rational[1, 2]}}]}], 
                  GraphicsBoxOptions -> {DefaultBaseStyle -> Directive[
                    PointSize[0.007333333333333334], 
                    RGBColor[0.922526, 0.385626, 0.209179], 
                    AbsoluteThickness[2]]}], {0., 0.}, Automatic, 
                 Offset[11.4]], {{{3.5659872*^9, 1931.18}}, {{3.5975232*^9, 
                1449.74}}, {{3.6290592*^9, 1320.48}}, {{3.6605952*^9, 
                1236.16}}, {{3.6922176*^9, 1265.91}}}]}, 
              "Charting`Private`Tag#34"], {}, 
             Annotation[{
               Directive[
                PointSize[0.007333333333333334], 
                RGBColor[0.772079, 0.431554, 0.102387], 
                AbsoluteThickness[2]], 
               GeometricTransformation[
                Inset[
                 Style[
                  Graphics[
                   Circle[{0, 0}], PlotRangePadding -> Scaled[0.15]], 
                  GraphicsBoxOptions -> {DefaultBaseStyle -> Directive[
                    PointSize[0.007333333333333334], 
                    RGBColor[0.772079, 0.431554, 0.102387], 
                    AbsoluteThickness[2]]}], {0., 0.}, Automatic, 
                 Offset[10.752]], {{{3.5659872*^9, 521.51}}, {{3.5975232*^9, 
                500.55}}, {{3.6290592*^9, 442.86}}, {{3.6605952*^9, 
                596.58}}, {{3.6922176*^9, 566.85}}, {{3.7237536*^9, 
                537.31}}, {{3.7552896*^9, 580.38}}, {{3.7868256*^9, 
                595.46}}, {{3.818448*^9, 569.48}}, {{3.849984*^9, 486.01}}}]},
               "Charting`Private`Tag#36"], 
             Annotation[{
               Directive[
                PointSize[0.007333333333333334], 
                RGBColor[0.363898, 0.618501, 0.782349], 
                AbsoluteThickness[2]], 
               GeometricTransformation[
                Inset[
                 Style[
                  Graphics[{
                    EdgeForm[
                    Thickness[Medium]], 
                    FaceForm[], 
                    Line[{{-1, -1}, {1, -1}, {1, 1}, {-1, 1}, {-1, -1}}]}, 
                   PlotRangePadding -> Scaled[0.15]], 
                  GraphicsBoxOptions -> {DefaultBaseStyle -> Directive[
                    PointSize[0.007333333333333334], 
                    RGBColor[0.363898, 0.618501, 0.782349], 
                    AbsoluteThickness[2]]}], {0., 0.}, Automatic, 
                 Offset[10.752]], {{{3.5659872*^9, 485.48}}, {{3.5975232*^9, 
                587.87}}, {{3.6922176*^9, 133.53}}, {{3.7552896*^9, 
                241.49}}, {{3.7868256*^9, 322.74}}, {{3.818448*^9, 
                387.47}}, {{3.849984*^9, 437.15}}}]}, 
              "Charting`Private`Tag#37"], 
             Annotation[{
               Directive[
                PointSize[0.007333333333333334], 
                RGBColor[1, 0.75, 0], 
                AbsoluteThickness[2]], 
               GeometricTransformation[
                Inset[
                 Style[
                  Graphics[{
                    EdgeForm[
                    Thickness[Medium]], 
                    FaceForm[], 
                    Line[{{0, 1}, {1, 0}, {0, -1}, {-1, 0}, {0, 1}}]}, 
                   PlotRangePadding -> Scaled[0.15]], 
                  GraphicsBoxOptions -> {DefaultBaseStyle -> Directive[
                    PointSize[0.007333333333333334], 
                    RGBColor[1, 0.75, 0], 
                    AbsoluteThickness[2]]}], {0., 0.}, Automatic, 
                 Offset[13.056]], {{{3.6290592*^9, 559.33}}, {{3.6605952*^9, 
                508.21}}, {{3.6922176*^9, 379.3}}, {{3.7237536*^9, 
                404.62}}, {{3.7552896*^9, 386.11}}, {{3.7868256*^9, 
                346.21}}, {{3.818448*^9, 445.38}}}]}, 
              "Charting`Private`Tag#38"], 
             Annotation[{
               Directive[
                PointSize[0.007333333333333334], 
                RGBColor[0.647624, 0.37816, 0.614037], 
                AbsoluteThickness[2]], 
               GeometricTransformation[
                Inset[
                 Style[
                  Graphics[{
                    EdgeForm[
                    Thickness[Medium]], 
                    FaceForm[], 
                    
                    Line[{{0, 1}, {-1, 1 - 3^Rational[1, 2]}, {
                    1, 1 - 3^Rational[1, 2]}, {0, 1}}]}, PlotRangePadding -> 
                   Scaled[0.15]], 
                  GraphicsBoxOptions -> {DefaultBaseStyle -> Directive[
                    PointSize[0.007333333333333334], 
                    RGBColor[0.647624, 0.37816, 0.614037], 
                    AbsoluteThickness[2]]}], {0., 0.}, Automatic, 
                 Offset[12.288]], {{{3.5659872*^9, 485.82}}, {{3.5975232*^9, 
                523.45}}, {{3.6290592*^9, 493.58}}, {{3.6605952*^9, 
                488.34}}, {{3.6922176*^9, 474.3}}, {{3.7237536*^9, 
                447.02}}, {{3.7552896*^9, 427.76}}, {{3.7868256*^9, 
                385.84}}, {{3.818448*^9, 420.44}}, {{3.849984*^9, 403.3}}}]}, 
              "Charting`Private`Tag#39"], 
             Annotation[{
               Directive[
                PointSize[0.007333333333333334], 
                RGBColor[0.571589, 0.586483, 0.], 
                AbsoluteThickness[2]], 
               GeometricTransformation[
                Inset[
                 Style[
                  Graphics[{
                    EdgeForm[
                    Thickness[Medium]], 
                    FaceForm[], 
                    
                    Line[{{0, -1}, {-1, -1 + 3^Rational[1, 2]}, {
                    1, -1 + 3^Rational[1, 2]}, {0, -1}}]}, PlotRangePadding -> 
                   Scaled[0.15]], 
                  GraphicsBoxOptions -> {DefaultBaseStyle -> Directive[
                    PointSize[0.007333333333333334], 
                    RGBColor[0.571589, 0.586483, 0.], 
                    AbsoluteThickness[2]]}], {0., 0.}, Automatic, 
                 Offset[12.288]], {{{3.5659872*^9, 661.94}}, {{3.5975232*^9, 
                642.86}}, {{3.6290592*^9, 670.84}}, {{3.6605952*^9, 
                583.17}}, {{3.6922176*^9, 558.09}}, {{3.7237536*^9, 
                687.25}}, {{3.7552896*^9, 722.4}}, {{3.7868256*^9, 
                592.05}}, {{3.818448*^9, 827.95}}, {{3.849984*^9, 805.83}}}]},
               "Charting`Private`Tag#40"], 
             Annotation[{
               Directive[
                PointSize[0.007333333333333334], 
                RGBColor[0.915, 0.3325, 0.2125], 
                AbsoluteThickness[2]], 
               GeometricTransformation[
                Inset[
                 Style[
                  Graphics[{
                    EdgeForm[], 
                    Disk[{0, 0}]}, PlotRangePadding -> Scaled[0.15]], 
                  GraphicsBoxOptions -> {DefaultBaseStyle -> Directive[
                    PointSize[0.007333333333333334], 
                    RGBColor[0.915, 0.3325, 0.2125], 
                    AbsoluteThickness[2]]}], {0., 0.}, Automatic, 
                 Offset[10.976]], {{{3.6605952*^9, 1047.13}}, {{3.6922176*^9, 
                1094.4}}, {{3.7237536*^9, 1136.17}}, {{3.7552896*^9, 
                1002.47}}}]}, "Charting`Private`Tag#41"]}}, <|
           "HighlightElements" -> <|
             "Label" -> {"XYLabel"}, "Ball" -> {"InterpolatedBall"}|>, 
            "LayoutOptions" -> <|
             "PanelPlotLayout" -> <||>, 
              "PlotRange" -> {{3.5659872*^9, 3.849984`16.*^9}, {0., 10000.}}, 
              "Frame" -> {{True, True}, {True, True}}, 
              "AxesOrigin" -> {3.5659872*^9, 0}, 
              "ImageSize" -> {360, 360/GoldenRatio}, "Axes" -> {False, False},
               "LabelStyle" -> {}, "AspectRatio" -> GoldenRatio^(-1), 
              "DefaultStyle" -> {
                Directive[
                 PointSize[0.007333333333333334], 
                 RGBColor[0.915, 0.3325, 0.2125], 
                 AbsoluteThickness[2]], 
                Directive[
                 PointSize[0.007333333333333334], 
                 RGBColor[0.571589, 0.586483, 0.], 
                 AbsoluteThickness[2]], 
                Directive[
                 PointSize[0.007333333333333334], 
                 RGBColor[0.647624, 0.37816, 0.614037], 
                 AbsoluteThickness[2]], 
                Directive[
                 PointSize[0.007333333333333334], 
                 RGBColor[1, 0.75, 0], 
                 AbsoluteThickness[2]], 
                Directive[
                 PointSize[0.007333333333333334], 
                 RGBColor[0.363898, 0.618501, 0.782349], 
                 AbsoluteThickness[2]], 
                Directive[
                 PointSize[0.007333333333333334], 
                 RGBColor[0.772079, 0.431554, 0.102387], 
                 AbsoluteThickness[2]], 
                Directive[
                 PointSize[0.007333333333333334], 
                 RGBColor[0.922526, 0.385626, 0.209179], 
                 AbsoluteThickness[2]], 
                Directive[
                 PointSize[0.007333333333333334], 
                 RGBColor[0.560181, 0.691569, 0.194885], 
                 AbsoluteThickness[2]], 
                Directive[
                 PointSize[0.007333333333333334], 
                 RGBColor[0.880722, 0.611041, 0.142051], 
                 AbsoluteThickness[2]], 
                Directive[
                 PointSize[0.007333333333333334], 
                 RGBColor[0.368417, 0.506779, 0.709798], 
                 AbsoluteThickness[2]], 
                Directive[
                 PointSize[0.007333333333333334], 
                 RGBColor[0.28026441037696703`, 0.715, 0.4292089322474965], 
                 AbsoluteThickness[2]], 
                Directive[
                 PointSize[0.007333333333333334], 
                 RGBColor[0.736782672705901, 0.358, 0.5030266573755369], 
                 AbsoluteThickness[2]], 
                Directive[
                 PointSize[0.007333333333333334], 
                 RGBColor[
                 0.9728288904374106, 0.621644452187053, 0.07336199581899142], 
                 AbsoluteThickness[2]], 
                Directive[
                 PointSize[0.007333333333333334], 
                 RGBColor[0.40082222609352647`, 0.5220066643438841, 0.85], 
                 AbsoluteThickness[2]], 
                Directive[
                 PointSize[0.007333333333333334], 
                 RGBColor[0.915, 0.3325, 0.2125], 
                 AbsoluteThickness[2]], 
                Directive[
                 PointSize[0.007333333333333334], 
                 RGBColor[0.571589, 0.586483, 0.], 
                 AbsoluteThickness[2]], 
                Directive[
                 PointSize[0.007333333333333334], 
                 RGBColor[0.647624, 0.37816, 0.614037], 
                 AbsoluteThickness[2]], 
                Directive[
                 PointSize[0.007333333333333334], 
                 RGBColor[1, 0.75, 0], 
                 AbsoluteThickness[2]], 
                Directive[
                 PointSize[0.007333333333333334], 
                 RGBColor[0.363898, 0.618501, 0.782349], 
                 AbsoluteThickness[2]], 
                Directive[
                 PointSize[0.007333333333333334], 
                 RGBColor[0.772079, 0.431554, 0.102387], 
                 AbsoluteThickness[2]], 
                Directive[
                 PointSize[0.007333333333333334], 
                 RGBColor[0.528488, 0.470624, 0.701351], 
                 AbsoluteThickness[2]], 
                Directive[
                 PointSize[0.007333333333333334], 
                 RGBColor[0.922526, 0.385626, 0.209179], 
                 AbsoluteThickness[2]], 
                Directive[
                 PointSize[0.007333333333333334], 
                 RGBColor[0.560181, 0.691569, 0.194885], 
                 AbsoluteThickness[2]], 
                Directive[
                 PointSize[0.007333333333333334], 
                 RGBColor[0.880722, 0.611041, 0.142051], 
                 AbsoluteThickness[2]], 
                Directive[
                 PointSize[0.007333333333333334], 
                 RGBColor[0.368417, 0.506779, 0.709798], 
                 AbsoluteThickness[2]], 
                Directive[
                 PointSize[0.007333333333333334], 
                 RGBColor[0.28026441037696703`, 0.715, 0.4292089322474965], 
                 AbsoluteThickness[2]], 
                Directive[
                 PointSize[0.007333333333333334], 
                 RGBColor[0.736782672705901, 0.358, 0.5030266573755369], 
                 AbsoluteThickness[2]], 
                Directive[
                 PointSize[0.007333333333333334], 
                 RGBColor[
                 0.9728288904374106, 0.621644452187053, 0.07336199581899142], 
                 AbsoluteThickness[2]], 
                Directive[
                 PointSize[0.007333333333333334], 
                 RGBColor[0.40082222609352647`, 0.5220066643438841, 0.85], 
                 AbsoluteThickness[2]], 
                Directive[
                 PointSize[0.007333333333333334], 
                 RGBColor[0.915, 0.3325, 0.2125], 
                 AbsoluteThickness[2]], 
                Directive[
                 PointSize[0.007333333333333334], 
                 RGBColor[0.571589, 0.586483, 0.], 
                 AbsoluteThickness[2]], 
                Directive[
                 PointSize[0.007333333333333334], 
                 RGBColor[0.647624, 0.37816, 0.614037], 
                 AbsoluteThickness[2]], 
                Directive[
                 PointSize[0.007333333333333334], 
                 RGBColor[1, 0.75, 0], 
                 AbsoluteThickness[2]], 
                Directive[
                 PointSize[0.007333333333333334], 
                 RGBColor[0.772079, 0.431554, 0.102387], 
                 AbsoluteThickness[2]], 
                Directive[
                 PointSize[0.007333333333333334], 
                 RGBColor[0.528488, 0.470624, 0.701351], 
                 AbsoluteThickness[2]], 
                Directive[
                 PointSize[0.007333333333333334], 
                 RGBColor[0.922526, 0.385626, 0.209179], 
                 AbsoluteThickness[2]], 
                Directive[
                 PointSize[0.007333333333333334], 
                 RGBColor[0.560181, 0.691569, 0.194885], 
                 AbsoluteThickness[2]], 
                Directive[
                 PointSize[0.007333333333333334], 
                 RGBColor[0.880722, 0.611041, 0.142051], 
                 AbsoluteThickness[2]], 
                Directive[
                 PointSize[0.007333333333333334], 
                 RGBColor[0.368417, 0.506779, 0.709798], 
                 AbsoluteThickness[2]]}, 
              "HighlightLabelingFunctions" -> <|"CoordinatesToolOptions" -> (({
                  DateString[
                   Part[#, 1], "DateShort"], 
                  Part[#, 2]}& )[{
                   Identity[
                    Part[#, 1]], 
                   Identity[
                    Part[#, 2]]}]& ), 
                "ScalingFunctions" -> {{Identity, Identity}, {
                  Identity, Identity}}|>, "Primitives" -> {}, "GCFlag" -> 
              False|>, 
            "Meta" -> <|
             "DefaultHighlight" -> {"Dynamic", None}, "Index" -> {}, 
              "Function" -> DateListPlot, "GroupHighlight" -> False|>|>]]& )[<|
          "HighlightElements" -> <|
            "Label" -> {"XYLabel"}, "Ball" -> {"InterpolatedBall"}|>, 
           "LayoutOptions" -> <|
            "PanelPlotLayout" -> <||>, 
             "PlotRange" -> {{3.5659872*^9, 3.849984`16.*^9}, {0., 10000.}}, 
             "Frame" -> {{True, True}, {True, True}}, 
             "AxesOrigin" -> {3.5659872*^9, 0}, 
             "ImageSize" -> {360, 360/GoldenRatio}, "Axes" -> {False, False}, 
             "LabelStyle" -> {}, "AspectRatio" -> GoldenRatio^(-1), 
             "DefaultStyle" -> {
               Directive[
                PointSize[0.007333333333333334], 
                RGBColor[0.915, 0.3325, 0.2125], 
                AbsoluteThickness[2]], 
               Directive[
                PointSize[0.007333333333333334], 
                RGBColor[0.571589, 0.586483, 0.], 
                AbsoluteThickness[2]], 
               Directive[
                PointSize[0.007333333333333334], 
                RGBColor[0.647624, 0.37816, 0.614037], 
                AbsoluteThickness[2]], 
               Directive[
                PointSize[0.007333333333333334], 
                RGBColor[1, 0.75, 0], 
                AbsoluteThickness[2]], 
               Directive[
                PointSize[0.007333333333333334], 
                RGBColor[0.363898, 0.618501, 0.782349], 
                AbsoluteThickness[2]], 
               Directive[
                PointSize[0.007333333333333334], 
                RGBColor[0.772079, 0.431554, 0.102387], 
                AbsoluteThickness[2]], 
               Directive[
                PointSize[0.007333333333333334], 
                RGBColor[0.922526, 0.385626, 0.209179], 
                AbsoluteThickness[2]], 
               Directive[
                PointSize[0.007333333333333334], 
                RGBColor[0.560181, 0.691569, 0.194885], 
                AbsoluteThickness[2]], 
               Directive[
                PointSize[0.007333333333333334], 
                RGBColor[0.880722, 0.611041, 0.142051], 
                AbsoluteThickness[2]], 
               Directive[
                PointSize[0.007333333333333334], 
                RGBColor[0.368417, 0.506779, 0.709798], 
                AbsoluteThickness[2]], 
               Directive[
                PointSize[0.007333333333333334], 
                RGBColor[0.28026441037696703`, 0.715, 0.4292089322474965], 
                AbsoluteThickness[2]], 
               Directive[
                PointSize[0.007333333333333334], 
                RGBColor[0.736782672705901, 0.358, 0.5030266573755369], 
                AbsoluteThickness[2]], 
               Directive[
                PointSize[0.007333333333333334], 
                RGBColor[
                0.9728288904374106, 0.621644452187053, 0.07336199581899142], 
                AbsoluteThickness[2]], 
               Directive[
                PointSize[0.007333333333333334], 
                RGBColor[0.40082222609352647`, 0.5220066643438841, 0.85], 
                AbsoluteThickness[2]], 
               Directive[
                PointSize[0.007333333333333334], 
                RGBColor[0.915, 0.3325, 0.2125], 
                AbsoluteThickness[2]], 
               Directive[
                PointSize[0.007333333333333334], 
                RGBColor[0.571589, 0.586483, 0.], 
                AbsoluteThickness[2]], 
               Directive[
                PointSize[0.007333333333333334], 
                RGBColor[0.647624, 0.37816, 0.614037], 
                AbsoluteThickness[2]], 
               Directive[
                PointSize[0.007333333333333334], 
                RGBColor[1, 0.75, 0], 
                AbsoluteThickness[2]], 
               Directive[
                PointSize[0.007333333333333334], 
                RGBColor[0.363898, 0.618501, 0.782349], 
                AbsoluteThickness[2]], 
               Directive[
                PointSize[0.007333333333333334], 
                RGBColor[0.772079, 0.431554, 0.102387], 
                AbsoluteThickness[2]], 
               Directive[
                PointSize[0.007333333333333334], 
                RGBColor[0.528488, 0.470624, 0.701351], 
                AbsoluteThickness[2]], 
               Directive[
                PointSize[0.007333333333333334], 
                RGBColor[0.922526, 0.385626, 0.209179], 
                AbsoluteThickness[2]], 
               Directive[
                PointSize[0.007333333333333334], 
                RGBColor[0.560181, 0.691569, 0.194885], 
                AbsoluteThickness[2]], 
               Directive[
                PointSize[0.007333333333333334], 
                RGBColor[0.880722, 0.611041, 0.142051], 
                AbsoluteThickness[2]], 
               Directive[
                PointSize[0.007333333333333334], 
                RGBColor[0.368417, 0.506779, 0.709798], 
                AbsoluteThickness[2]], 
               Directive[
                PointSize[0.007333333333333334], 
                RGBColor[0.28026441037696703`, 0.715, 0.4292089322474965], 
                AbsoluteThickness[2]], 
               Directive[
                PointSize[0.007333333333333334], 
                RGBColor[0.736782672705901, 0.358, 0.5030266573755369], 
                AbsoluteThickness[2]], 
               Directive[
                PointSize[0.007333333333333334], 
                RGBColor[
                0.9728288904374106, 0.621644452187053, 0.07336199581899142], 
                AbsoluteThickness[2]], 
               Directive[
                PointSize[0.007333333333333334], 
                RGBColor[0.40082222609352647`, 0.5220066643438841, 0.85], 
                AbsoluteThickness[2]], 
               Directive[
                PointSize[0.007333333333333334], 
                RGBColor[0.915, 0.3325, 0.2125], 
                AbsoluteThickness[2]], 
               Directive[
                PointSize[0.007333333333333334], 
                RGBColor[0.571589, 0.586483, 0.], 
                AbsoluteThickness[2]], 
               Directive[
                PointSize[0.007333333333333334], 
                RGBColor[0.647624, 0.37816, 0.614037], 
                AbsoluteThickness[2]], 
               Directive[
                PointSize[0.007333333333333334], 
                RGBColor[1, 0.75, 0], 
                AbsoluteThickness[2]], 
               Directive[
                PointSize[0.007333333333333334], 
                RGBColor[0.772079, 0.431554, 0.102387], 
                AbsoluteThickness[2]], 
               Directive[
                PointSize[0.007333333333333334], 
                RGBColor[0.528488, 0.470624, 0.701351], 
                AbsoluteThickness[2]], 
               Directive[
                PointSize[0.007333333333333334], 
                RGBColor[0.922526, 0.385626, 0.209179], 
                AbsoluteThickness[2]], 
               Directive[
                PointSize[0.007333333333333334], 
                RGBColor[0.560181, 0.691569, 0.194885], 
                AbsoluteThickness[2]], 
               Directive[
                PointSize[0.007333333333333334], 
                RGBColor[0.880722, 0.611041, 0.142051], 
                AbsoluteThickness[2]], 
               Directive[
                PointSize[0.007333333333333334], 
                RGBColor[0.368417, 0.506779, 0.709798], 
                AbsoluteThickness[2]]}, 
             "HighlightLabelingFunctions" -> <|"CoordinatesToolOptions" -> (({
                 DateString[
                  Part[#, 1], "DateShort"], 
                 Part[#, 2]}& )[{
                  Identity[
                   Part[#, 1]], 
                  Identity[
                   Part[#, 2]]}]& ), 
               "ScalingFunctions" -> {{Identity, Identity}, {
                 Identity, Identity}}|>, "Primitives" -> {}, "GCFlag" -> 
             False|>, 
           "Meta" -> <|
            "DefaultHighlight" -> {"Dynamic", None}, "Index" -> {}, 
             "Function" -> DateListPlot, "GroupHighlight" -> False|>|>], 
         ImageSizeCache -> {{4.503599627370496*^15, -4.503599627370496*^15}, {
          4.503599627370496*^15, -4.503599627370496*^15}}], Selectable -> 
        False]}, 
      Annotation[{{{}, {}, 
         Annotation[{
           Hue[0.67, 0.6, 0.6], 
           Directive[
            PointSize[0.007333333333333334], 
            RGBColor[0.368417, 0.506779, 0.709798], 
            AbsoluteThickness[2]], 
           
           Line[{{3.5659872*^9, 1270.93}, {3.5975232*^9, 1051.21}, {
            3.6290592*^9, 1175.75}}], 
           
           Line[{{3.6922176*^9, 2099.12}, {3.7237536*^9, 2014.28}, {
            3.7552896*^9, 1771.98}, {3.7868256*^9, 1388.22}}]}, 
          "Charting`Private`Tag#1"], 
         Annotation[{
           Hue[0.9060679774997897, 0.6, 0.6], 
           Directive[
            PointSize[0.007333333333333334], 
            RGBColor[0.880722, 0.611041, 0.142051], 
            AbsoluteThickness[2]], 
           
           Line[{{3.5659872*^9, 468.29}, {3.5975232*^9, 439.56}, {
            3.6290592*^9, 385.81}, {3.6605952*^9, 395.61}, {3.6922176*^9, 
            363.29}, {3.7237536*^9, 340.04}, {3.7552896*^9, 334.13}, {
            3.7868256*^9, 314.88}, {3.818448*^9, 348.74}, {3.849984*^9, 
            351.62}}]}, "Charting`Private`Tag#2"], 
         Annotation[{
           Hue[0.1421359549995791, 0.6, 0.6], 
           Directive[
            PointSize[0.007333333333333334], 
            RGBColor[0.560181, 0.691569, 0.194885], 
            AbsoluteThickness[2]], 
           
           Line[{{3.5659872*^9, 741.49}, {3.5975232*^9, 692.75}, {
            3.6290592*^9, 622.2}, {3.6605952*^9, 582.}, {3.6922176*^9, 
            526.57}, {3.7237536*^9, 513.17}, {3.7552896*^9, 522.02}, {
            3.7868256*^9, 454.07}, {3.818448*^9, 473.06}, {3.849984*^9, 
            477.59}}]}, "Charting`Private`Tag#3"], 
         Annotation[{
           Hue[0.37820393249936934`, 0.6, 0.6], 
           Directive[
            PointSize[0.007333333333333334], 
            RGBColor[0.922526, 0.385626, 0.209179], 
            AbsoluteThickness[2]], 
           
           Line[{{3.5659872*^9, 3680.67}, {3.5975232*^9, 3720.97}, {
            3.6290592*^9, 3574.63}, {3.6605952*^9, 3442.74}, {3.6922176*^9, 
            3095.18}, {3.7237536*^9, 3162.05}, {3.7552896*^9, 885.95}, {
            3.7868256*^9, 966.17}, {3.818448*^9, 904.31}, {3.849984*^9, 
            896.68}}]}, "Charting`Private`Tag#4"], 
         Annotation[{
           Hue[0.6142719099991583, 0.6, 0.6], 
           Directive[
            PointSize[0.007333333333333334], 
            RGBColor[0.528488, 0.470624, 0.701351], 
            AbsoluteThickness[2]], 
           
           Line[{{3.5659872*^9, 938.78}, {3.5975232*^9, 927.08}, {
            3.6290592*^9, 910.73}, {3.6605952*^9, 897.92}, {3.6922176*^9, 
            867.7}, {3.7237536*^9, 860.39}, {3.7552896*^9, 877.95}, {
            3.7868256*^9, 840.8}, {3.818448*^9, 796.22}, {3.849984*^9, 
            777.75}}]}, "Charting`Private`Tag#5"], 
         Annotation[{
           Hue[0.8503398874989481, 0.6, 0.6], 
           Directive[
            PointSize[0.007333333333333334], 
            RGBColor[0.772079, 0.431554, 0.102387], 
            AbsoluteThickness[2]], 
           
           Line[{{3.5659872*^9, 642.11}, {3.5975232*^9, 582.91}, {
            3.6290592*^9, 560.89}, {3.6605952*^9, 578.98}, {3.6922176*^9, 
            510.32}, {3.7237536*^9, 432.25}, {3.7552896*^9, 430.47}, {
            3.7868256*^9, 372.39}, {3.818448*^9, 343.52}, {3.849984*^9, 
            288.11}}]}, "Charting`Private`Tag#6"], {}, 
         Annotation[{
           Hue[0.3224758424985268, 0.6, 0.6], 
           Directive[
            PointSize[0.007333333333333334], 
            RGBColor[1, 0.75, 0], 
            AbsoluteThickness[2]], 
           Line[{{3.818448*^9, 50.81}, {3.849984*^9, 45.56}}]}, 
          "Charting`Private`Tag#8"], 
         Annotation[{
           Hue[0.5585438199983166, 0.6, 0.6], 
           Directive[
            PointSize[0.007333333333333334], 
            RGBColor[0.647624, 0.37816, 0.614037], 
            AbsoluteThickness[2]], 
           
           Line[{{3.5659872*^9, 526.07}, {3.5975232*^9, 502.83}, {
            3.6290592*^9, 507.81}, {3.6605952*^9, 499.69}, {3.6922176*^9, 
            642.58}, {3.7237536*^9, 643.62}, {3.7552896*^9, 641.38}, {
            3.7868256*^9, 491.57}, {3.818448*^9, 624.08}, {3.849984*^9, 
            680.22}}]}, "Charting`Private`Tag#9"], 
         Annotation[{
           Hue[0.7946117974981064, 0.6, 0.6], 
           Directive[
            PointSize[0.007333333333333334], 
            RGBColor[0.571589, 0.586483, 0.], 
            AbsoluteThickness[2]], 
           
           Line[{{3.5659872*^9, 1017.65}, {3.5975232*^9, 874.29}, {
            3.6290592*^9, 959.24}, {3.6605952*^9, 703.17}, {3.6922176*^9, 
            698.97}, {3.7237536*^9, 815.02}, {3.7552896*^9, 818.06}, {
            3.7868256*^9, 680.72}, {3.818448*^9, 796.01}}]}, 
          "Charting`Private`Tag#10"], 
         Annotation[{
           Hue[0.030679774997896203`, 0.6, 0.6], 
           Directive[
            PointSize[0.007333333333333334], 
            RGBColor[0.915, 0.3325, 0.2125], 
            AbsoluteThickness[2]], 
           
           Line[{{3.5659872*^9, 402.66}, {3.5975232*^9, 363.85}, {
            3.6290592*^9, 307.01}, {3.6605952*^9, 328.75}, {3.6922176*^9, 
            299.07}, {3.7237536*^9, 296.38}, {3.7552896*^9, 326.16}, {
            3.7868256*^9, 293.29}, {3.818448*^9, 310.92}, {3.849984*^9, 
            326.98}}]}, "Charting`Private`Tag#11"], 
         Annotation[{
           Hue[0.266747752497686, 0.6, 0.6], 
           Directive[
            PointSize[0.007333333333333334], 
            RGBColor[0.40082222609352647`, 0.5220066643438841, 0.85], 
            AbsoluteThickness[2]], 
           
           Line[{{3.5659872*^9, 413.8}, {3.5975232*^9, 373.36}, {3.6290592*^9,
             363.46}, {3.6605952*^9, 346.03}, {3.6922176*^9, 321.38}, {
            3.7237536*^9, 357.1}}]}, "Charting`Private`Tag#12"], 
         Annotation[{
           Hue[0.5028157299974758, 0.6, 0.6], 
           Directive[
            PointSize[0.007333333333333334], 
            RGBColor[
            0.9728288904374106, 0.621644452187053, 0.07336199581899142], 
            AbsoluteThickness[2]], 
           
           Line[{{3.5659872*^9, 7023.97}, {3.5975232*^9, 8007.93}, {
            3.6290592*^9, 6386.6}, {3.6605952*^9, 5342.8}, {3.6922176*^9, 
            5086.21}, {3.7237536*^9, 4570.74}, {3.7552896*^9, 4563.88}, {
            3.7868256*^9, 4002.34}, {3.818448*^9, 3745.84}}]}, 
          "Charting`Private`Tag#13"], 
         Annotation[{
           Hue[0.7388837074972656, 0.6, 0.6], 
           Directive[
            PointSize[0.007333333333333334], 
            RGBColor[0.736782672705901, 0.358, 0.5030266573755369], 
            AbsoluteThickness[2]], 
           
           Line[{{3.5659872*^9, 426.22}, {3.5975232*^9, 460.31}, {
            3.6290592*^9, 481.25}, {3.6605952*^9, 453.49}, {3.6922176*^9, 
            474.95}, {3.7237536*^9, 443.92}, {3.7552896*^9, 421.83}, {
            3.7868256*^9, 371.81}, {3.818448*^9, 361.76}, {3.849984*^9, 
            263.95}}]}, "Charting`Private`Tag#14"], 
         Annotation[{
           Hue[0.9749516849970554, 0.6, 0.6], 
           Directive[
            PointSize[0.007333333333333334], 
            RGBColor[0.28026441037696703`, 0.715, 0.4292089322474965], 
            AbsoluteThickness[2]], 
           
           Line[{{3.5659872*^9, 657.15}, {3.5975232*^9, 772.62}, {
            3.6290592*^9, 591.29}, {3.6605952*^9, 536.88}, {3.6922176*^9, 
            634.08}, {3.7237536*^9, 704.15}, {3.7552896*^9, 628.59}, {
            3.7868256*^9, 574.78}, {3.818448*^9, 536.9}, {3.849984*^9, 
            533.11}}]}, "Charting`Private`Tag#15"], 
         Annotation[{
           Hue[0.21101966249684523`, 0.6, 0.6], 
           Directive[
            PointSize[0.007333333333333334], 
            RGBColor[0.368417, 0.506779, 0.709798], 
            AbsoluteThickness[2]], 
           
           Line[{{3.6605952*^9, 1463.43}, {3.6922176*^9, 1616.14}, {
            3.7237536*^9, 1362.95}, {3.7552896*^9, 1235.07}, {3.7868256*^9, 
            1198.52}, {3.818448*^9, 1265.42}, {3.849984*^9, 1153.4}}]}, 
          "Charting`Private`Tag#16"], 
         Annotation[{
           Hue[0.44708763999663503`, 0.6, 0.6], 
           Directive[
            PointSize[0.007333333333333334], 
            RGBColor[0.880722, 0.611041, 0.142051], 
            AbsoluteThickness[2]], 
           
           Line[{{3.5659872*^9, 709.73}, {3.5975232*^9, 772.65}, {
            3.6290592*^9, 718.43}, {3.6605952*^9, 729.22}, {3.6922176*^9, 
            701.55}, {3.7237536*^9, 681.92}, {3.7552896*^9, 655.32}, {
            3.7868256*^9, 551.2}, {3.818448*^9, 564.56}, {3.849984*^9, 
            571.85}}]}, "Charting`Private`Tag#17"], 
         Annotation[{
           Hue[0.6831556174964248, 0.6, 0.6], 
           Directive[
            PointSize[0.007333333333333334], 
            RGBColor[0.560181, 0.691569, 0.194885], 
            AbsoluteThickness[2]], 
           
           Line[{{3.5975232*^9, 665.54}, {3.6290592*^9, 613.39}, {
            3.6605952*^9, 381.87}, {3.6922176*^9, 502.07}}]}, 
          "Charting`Private`Tag#18"], 
         Annotation[{
           Hue[0.9192235949962146, 0.6, 0.6], 
           Directive[
            PointSize[0.007333333333333334], 
            RGBColor[0.922526, 0.385626, 0.209179], 
            AbsoluteThickness[2]], 
           
           Line[{{3.5659872*^9, 549.42}, {3.5975232*^9, 528.12}, {
            3.6290592*^9, 541.08}, {3.6605952*^9, 481.76}, {3.6922176*^9, 
            480.46}, {3.7237536*^9, 457.17}, {3.7552896*^9, 444.55}, {
            3.7868256*^9, 341.48}, {3.818448*^9, 355.37}, {3.849984*^9, 
            355.55}}]}, "Charting`Private`Tag#19"], 
         Annotation[{
           Hue[0.15529157249600445`, 0.6, 0.6], 
           Directive[
            PointSize[0.007333333333333334], 
            RGBColor[0.528488, 0.470624, 0.701351], 
            AbsoluteThickness[2]], 
           
           Line[{{3.5659872*^9, 407.29}, {3.5975232*^9, 3569.13}, {
            3.6290592*^9, 374.12}, {3.6605952*^9, 349.98}, {3.6922176*^9, 
            350.47}, {3.7237536*^9, 313.47}, {3.7552896*^9, 307.99}, {
            3.7868256*^9, 266.44}, {3.818448*^9, 265.67}, {3.849984*^9, 
            272.48}}]}, "Charting`Private`Tag#20"], 
         Annotation[{
           Hue[0.39135954999579425`, 0.6, 0.6], 
           Directive[
            PointSize[0.007333333333333334], 
            RGBColor[0.772079, 0.431554, 0.102387], 
            AbsoluteThickness[2]], 
           
           Line[{{3.5659872*^9, 978.24}, {3.5975232*^9, 819.99}, {
            3.6290592*^9, 716.4}, {3.6605952*^9, 792.44}, {3.6922176*^9, 
            661.24}, {3.7237536*^9, 751.83}, {3.7552896*^9, 781.87}, {
            3.7868256*^9, 689.06}}]}, "Charting`Private`Tag#21"], 
         Annotation[{
           Hue[0.6274275274955841, 0.6, 0.6], 
           Directive[
            PointSize[0.007333333333333334], 
            RGBColor[0.363898, 0.618501, 0.782349], 
            AbsoluteThickness[2]], 
           
           Line[{{3.5659872*^9, 678.64}, {3.5975232*^9, 506.95}, {
            3.6290592*^9, 569.9}, {3.6605952*^9, 546.01}, {3.6922176*^9, 
            504.08}, {3.7237536*^9, 453.68}, {3.7552896*^9, 440.92}, {
            3.7868256*^9, 341.72}, {3.818448*^9, 414.4}, {3.849984*^9, 
            441.98}}]}, "Charting`Private`Tag#22"], 
         Annotation[{
           Hue[0.8634955049953739, 0.6, 0.6], 
           Directive[
            PointSize[0.007333333333333334], 
            RGBColor[1, 0.75, 0], 
            AbsoluteThickness[2]], 
           
           Line[{{3.5659872*^9, 235.43}, {3.5975232*^9, 252.37}, {
            3.6290592*^9, 212.76}, {3.6605952*^9, 165.58}, {3.6922176*^9, 
            180.19}, {3.7237536*^9, 164.87}, {3.7552896*^9, 173.49}, {
            3.7868256*^9, 162.88}, {3.818448*^9, 183.93}, {3.849984*^9, 
            172.81}}]}, "Charting`Private`Tag#23"], 
         Annotation[{
           Hue[0.09956348249516367, 0.6, 0.6], 
           Directive[
            PointSize[0.007333333333333334], 
            RGBColor[0.647624, 0.37816, 0.614037], 
            AbsoluteThickness[2]], 
           
           Line[{{3.5659872*^9, 571.1}, {3.5975232*^9, 472.03}, {3.6290592*^9,
             399.49}, {3.6605952*^9, 339.41}, {3.6922176*^9, 315.65}, {
            3.7237536*^9, 305.97}, {3.7552896*^9, 300.64}, {3.7868256*^9, 
            238.9}, {3.818448*^9, 283.27}, {3.849984*^9, 264.19}}]}, 
          "Charting`Private`Tag#24"], 
         Annotation[{
           Hue[0.3356314599949535, 0.6, 0.6], 
           Directive[
            PointSize[0.007333333333333334], 
            RGBColor[0.571589, 0.586483, 0.], 
            AbsoluteThickness[2]], 
           
           Line[{{3.5659872*^9, 666.79}, {3.5975232*^9, 620.57}, {
            3.6290592*^9, 547.67}, {3.6605952*^9, 501.03}, {3.6922176*^9, 
            484.42}, {3.7237536*^9, 539.86}, {3.7552896*^9, 521.63}, {
            3.7868256*^9, 465.24}, {3.818448*^9, 433.02}, {3.849984*^9, 
            464.68}}]}, "Charting`Private`Tag#25"], 
         Annotation[{
           Hue[0.5716994374947433, 0.6, 0.6], 
           Directive[
            PointSize[0.007333333333333334], 
            RGBColor[0.915, 0.3325, 0.2125], 
            AbsoluteThickness[2]], 
           
           Line[{{3.5659872*^9, 3366.32}, {3.5975232*^9, 3174.6}, {
            3.6290592*^9, 3320.58}, {3.6605952*^9, 2843.54}, {3.6922176*^9, 
            1497.77}, {3.7237536*^9, 1502.27}, {3.7552896*^9, 1503.39}, {
            3.7868256*^9, 1460.41}, {3.818448*^9, 1459.04}, {3.849984*^9, 
            1397.96}}]}, "Charting`Private`Tag#26"], 
         Annotation[{
           Hue[0.8077674149945295, 0.6, 0.6], 
           Directive[
            PointSize[0.007333333333333334], 
            RGBColor[0.40082222609352647`, 0.5220066643438841, 0.85], 
            AbsoluteThickness[2]], 
           
           Line[{{3.5659872*^9, 673.84}, {3.5975232*^9, 628.96}, {
            3.6290592*^9, 608.82}, {3.6605952*^9, 575.16}, {3.6922176*^9, 
            574.}, {3.7237536*^9, 598.45}, {3.7552896*^9, 612.97}, {
            3.7868256*^9, 668.07}, {3.818448*^9, 718.56}, {3.849984*^9, 
            733.2}}]}, "Charting`Private`Tag#27"], 
         Annotation[{
           Hue[0.04383539249432289, 0.6, 0.6], 
           Directive[
            PointSize[0.007333333333333334], 
            RGBColor[
            0.9728288904374106, 0.621644452187053, 0.07336199581899142], 
            AbsoluteThickness[2]], 
           
           Line[{{3.5975232*^9, 764.27}, {3.6290592*^9, 727.74}, {
            3.6605952*^9, 701.59}, {3.6922176*^9, 675.63}}]}, 
          "Charting`Private`Tag#28"], 
         Annotation[{
           Hue[0.27990336999410914`, 0.6, 0.6], 
           Directive[
            PointSize[0.007333333333333334], 
            RGBColor[0.736782672705901, 0.358, 0.5030266573755369], 
            AbsoluteThickness[2]], 
           
           Line[{{3.5975232*^9, 2903.39}, {3.6290592*^9, 2697.64}, {
            3.6605952*^9, 2562.33}, {3.6922176*^9, 2874.9}}]}, 
          "Charting`Private`Tag#29"], 
         Annotation[{
           Hue[0.5159713474939025, 0.6, 0.6], 
           Directive[
            PointSize[0.007333333333333334], 
            RGBColor[0.28026441037696703`, 0.715, 0.4292089322474965], 
            AbsoluteThickness[2]], 
           
           Line[{{3.5659872*^9, 1327.35}, {3.5975232*^9, 1250.18}, {
            3.6290592*^9, 1285.82}, {3.6605952*^9, 1196.44}, {3.6922176*^9, 
            1135.8}, {3.7237536*^9, 281.55}, {3.7552896*^9, 276.51}, {
            3.7868256*^9, 265.54}, {3.818448*^9, 250.44}, {3.849984*^9, 
            236.28}}]}, "Charting`Private`Tag#30"], 
         Annotation[{
           Hue[0.7520393249936888, 0.6, 0.6], 
           Directive[
            PointSize[0.007333333333333334], 
            RGBColor[0.368417, 0.506779, 0.709798], 
            AbsoluteThickness[2]], 
           
           Line[{{3.5659872*^9, 1332.23}, {3.5975232*^9, 1337.62}, {
            3.6290592*^9, 1312.25}, {3.6605952*^9, 1301.69}, {3.6922176*^9, 
            1248.95}, {3.7237536*^9, 1251.57}, {3.7552896*^9, 1137.22}, {
            3.7868256*^9, 1129.09}, {3.818448*^9, 1140.81}, {3.849984*^9, 
            1166.05}}]}, "Charting`Private`Tag#31"], 
         Annotation[{
           Hue[0.9881073024934821, 0.6, 0.6], 
           Directive[
            PointSize[0.007333333333333334], 
            RGBColor[0.880722, 0.611041, 0.142051], 
            AbsoluteThickness[2]], 
           
           Line[{{3.5659872*^9, 2066.57}, {3.5975232*^9, 2118.27}, {
            3.6290592*^9, 2152.9}, {3.6605952*^9, 2118.8}}]}, 
          "Charting`Private`Tag#32"], {}, 
         Annotation[{
           Hue[0.4602432574930617, 0.6, 0.6], 
           Directive[
            PointSize[0.007333333333333334], 
            RGBColor[0.922526, 0.385626, 0.209179], 
            AbsoluteThickness[2]], 
           
           Line[{{3.5659872*^9, 1931.18}, {3.5975232*^9, 1449.74}, {
            3.6290592*^9, 1320.48}, {3.6605952*^9, 1236.16}, {3.6922176*^9, 
            1265.91}}]}, "Charting`Private`Tag#34"], {}, 
         Annotation[{
           Hue[0.9323792124926413, 0.6, 0.6], 
           Directive[
            PointSize[0.007333333333333334], 
            RGBColor[0.772079, 0.431554, 0.102387], 
            AbsoluteThickness[2]], 
           
           Line[{{3.5659872*^9, 521.51}, {3.5975232*^9, 500.55}, {
            3.6290592*^9, 442.86}, {3.6605952*^9, 596.58}, {3.6922176*^9, 
            566.85}, {3.7237536*^9, 537.31}, {3.7552896*^9, 580.38}, {
            3.7868256*^9, 595.46}, {3.818448*^9, 569.48}, {3.849984*^9, 
            486.01}}]}, "Charting`Private`Tag#36"], 
         Annotation[{
           Hue[0.16844718999242758`, 0.6, 0.6], 
           Directive[
            PointSize[0.007333333333333334], 
            RGBColor[0.363898, 0.618501, 0.782349], 
            AbsoluteThickness[2]], 
           Line[{{3.5659872*^9, 485.48}, {3.5975232*^9, 587.87}}], 
           
           Line[{{3.7552896*^9, 241.49}, {3.7868256*^9, 322.74}, {3.818448*^9,
             387.47}, {3.849984*^9, 437.15}}]}, "Charting`Private`Tag#37"], 
         Annotation[{
           Hue[0.40451516749222094`, 0.6, 0.6], 
           Directive[
            PointSize[0.007333333333333334], 
            RGBColor[1, 0.75, 0], 
            AbsoluteThickness[2]], 
           Line[{{3.6290592*^9, 559.33}, {3.6605952*^9, 508.21}, {
            3.6922176*^9, 379.3}, {3.7237536*^9, 404.62}, {3.7552896*^9, 
            386.11}, {3.7868256*^9, 346.21}, {3.818448*^9, 445.38}}]}, 
          "Charting`Private`Tag#38"], 
         Annotation[{
           Hue[0.6405831449920072, 0.6, 0.6], 
           Directive[
            PointSize[0.007333333333333334], 
            RGBColor[0.647624, 0.37816, 0.614037], 
            AbsoluteThickness[2]], 
           
           Line[{{3.5659872*^9, 485.82}, {3.5975232*^9, 523.45}, {
            3.6290592*^9, 493.58}, {3.6605952*^9, 488.34}, {3.6922176*^9, 
            474.3}, {3.7237536*^9, 447.02}, {3.7552896*^9, 427.76}, {
            3.7868256*^9, 385.84}, {3.818448*^9, 420.44}, {3.849984*^9, 
            403.3}}]}, "Charting`Private`Tag#39"], 
         Annotation[{
           Hue[0.8766511224918005, 0.6, 0.6], 
           Directive[
            PointSize[0.007333333333333334], 
            RGBColor[0.571589, 0.586483, 0.], 
            AbsoluteThickness[2]], 
           
           Line[{{3.5659872*^9, 661.94}, {3.5975232*^9, 642.86}, {
            3.6290592*^9, 670.84}, {3.6605952*^9, 583.17}, {3.6922176*^9, 
            558.09}, {3.7237536*^9, 687.25}, {3.7552896*^9, 722.4}, {
            3.7868256*^9, 592.05}, {3.818448*^9, 827.95}, {3.849984*^9, 
            805.83}}]}, "Charting`Private`Tag#40"], 
         Annotation[{
           Hue[0.1127190999915868, 0.6, 0.6], 
           Directive[
            PointSize[0.007333333333333334], 
            RGBColor[0.915, 0.3325, 0.2125], 
            AbsoluteThickness[2]], 
           
           Line[{{3.6605952*^9, 1047.13}, {3.6922176*^9, 1094.4}, {
            3.7237536*^9, 1136.17}, {3.7552896*^9, 1002.47}}]}, 
          "Charting`Private`Tag#41"]}, {
         Annotation[{
           Directive[
            PointSize[0.007333333333333334], 
            RGBColor[0.368417, 0.506779, 0.709798], 
            AbsoluteThickness[2]], 
           GeometricTransformation[
            Inset[
             Style[
              Graphics[{
                EdgeForm[], 
                Disk[{0, 0}]}, PlotRangePadding -> Scaled[0.15]], 
              GraphicsBoxOptions -> {DefaultBaseStyle -> Directive[
                  PointSize[0.007333333333333334], 
                  RGBColor[0.368417, 0.506779, 0.709798], 
                  AbsoluteThickness[2]]}], {0., 0.}, Automatic, 
             Offset[10.976]], {{{3.5659872*^9, 1270.93}}, {{3.5975232*^9, 
            1051.21}}, {{3.6290592*^9, 1175.75}}, {{3.6922176*^9, 
            2099.12}}, {{3.7237536*^9, 2014.28}}, {{3.7552896*^9, 
            1771.98}}, {{3.7868256*^9, 1388.22}}}]}, 
          "Charting`Private`Tag#1"], 
         Annotation[{
           Directive[
            PointSize[0.007333333333333334], 
            RGBColor[0.880722, 0.611041, 0.142051], 
            AbsoluteThickness[2]], 
           GeometricTransformation[
            Inset[
             Style[
              Graphics[{
                EdgeForm[], 
                Polygon[{{-1, -1}, {1, -1}, {1, 1}, {-1, 1}}]}, 
               PlotRangePadding -> Scaled[0.15]], 
              GraphicsBoxOptions -> {DefaultBaseStyle -> Directive[
                  PointSize[0.007333333333333334], 
                  RGBColor[0.880722, 0.611041, 0.142051], 
                  AbsoluteThickness[2]]}], {0., 0.}, Automatic, 
             Offset[10.5]], {{{3.5659872*^9, 468.29}}, {{3.5975232*^9, 
            439.56}}, {{3.6290592*^9, 385.81}}, {{3.6605952*^9, 395.61}}, {{
            3.6922176*^9, 363.29}}, {{3.7237536*^9, 340.04}}, {{3.7552896*^9, 
            334.13}}, {{3.7868256*^9, 314.88}}, {{3.818448*^9, 348.74}}, {{
            3.849984*^9, 351.62}}}]}, "Charting`Private`Tag#2"], 
         Annotation[{
           Directive[
            PointSize[0.007333333333333334], 
            RGBColor[0.560181, 0.691569, 0.194885], 
            AbsoluteThickness[2]], 
           GeometricTransformation[
            Inset[
             Style[
              Graphics[{
                EdgeForm[], 
                Polygon[{{0, 1}, {1, 0}, {0, -1}, {-1, 0}}]}], 
              GraphicsBoxOptions -> {DefaultBaseStyle -> Directive[
                  PointSize[0.007333333333333334], 
                  RGBColor[0.560181, 0.691569, 0.194885], 
                  AbsoluteThickness[2]]}], {0., 0.}, Automatic, 
             Offset[10.2]], {{{3.5659872*^9, 741.49}}, {{3.5975232*^9, 
            692.75}}, {{3.6290592*^9, 622.2}}, {{3.6605952*^9, 582.}}, {{
            3.6922176*^9, 526.57}}, {{3.7237536*^9, 513.17}}, {{3.7552896*^9, 
            522.02}}, {{3.7868256*^9, 454.07}}, {{3.818448*^9, 473.06}}, {{
            3.849984*^9, 477.59}}}]}, "Charting`Private`Tag#3"], 
         Annotation[{
           Directive[
            PointSize[0.007333333333333334], 
            RGBColor[0.922526, 0.385626, 0.209179], 
            AbsoluteThickness[2]], 
           GeometricTransformation[
            Inset[
             Style[
              Graphics[{
                EdgeForm[], 
                
                Polygon[{{0, 1}, {-1, 1 - 3^Rational[1, 2]}, {
                  1, 1 - 3^Rational[1, 2]}}]}], 
              GraphicsBoxOptions -> {DefaultBaseStyle -> Directive[
                  PointSize[0.007333333333333334], 
                  RGBColor[0.922526, 0.385626, 0.209179], 
                  AbsoluteThickness[2]]}], {0., 0.}, Automatic, 
             Offset[11.4]], {{{3.5659872*^9, 3680.67}}, {{3.5975232*^9, 
            3720.97}}, {{3.6290592*^9, 3574.63}}, {{3.6605952*^9, 
            3442.74}}, {{3.6922176*^9, 3095.18}}, {{3.7237536*^9, 
            3162.05}}, {{3.7552896*^9, 885.95}}, {{3.7868256*^9, 966.17}}, {{
            3.818448*^9, 904.31}}, {{3.849984*^9, 896.68}}}]}, 
          "Charting`Private`Tag#4"], 
         Annotation[{
           Directive[
            PointSize[0.007333333333333334], 
            RGBColor[0.528488, 0.470624, 0.701351], 
            AbsoluteThickness[2]], 
           GeometricTransformation[
            Inset[
             Style[
              Graphics[{
                EdgeForm[], 
                
                Polygon[{{0, -1}, {-1, -1 + 3^Rational[1, 2]}, {
                  1, -1 + 3^Rational[1, 2]}}]}], 
              GraphicsBoxOptions -> {DefaultBaseStyle -> Directive[
                  PointSize[0.007333333333333334], 
                  RGBColor[0.528488, 0.470624, 0.701351], 
                  AbsoluteThickness[2]]}], {0., 0.}, Automatic, 
             Offset[11.52]], {{{3.5659872*^9, 938.78}}, {{3.5975232*^9, 
            927.08}}, {{3.6290592*^9, 910.73}}, {{3.6605952*^9, 897.92}}, {{
            3.6922176*^9, 867.7}}, {{3.7237536*^9, 860.39}}, {{3.7552896*^9, 
            877.95}}, {{3.7868256*^9, 840.8}}, {{3.818448*^9, 796.22}}, {{
            3.849984*^9, 777.75}}}]}, "Charting`Private`Tag#5"], 
         Annotation[{
           Directive[
            PointSize[0.007333333333333334], 
            RGBColor[0.772079, 0.431554, 0.102387], 
            AbsoluteThickness[2]], 
           GeometricTransformation[
            Inset[
             Style[
              Graphics[
               Circle[{0, 0}], PlotRangePadding -> Scaled[0.15]], 
              GraphicsBoxOptions -> {DefaultBaseStyle -> Directive[
                  PointSize[0.007333333333333334], 
                  RGBColor[0.772079, 0.431554, 0.102387], 
                  AbsoluteThickness[2]]}], {0., 0.}, Automatic, 
             Offset[10.752]], {{{3.5659872*^9, 642.11}}, {{3.5975232*^9, 
            582.91}}, {{3.6290592*^9, 560.89}}, {{3.6605952*^9, 578.98}}, {{
            3.6922176*^9, 510.32}}, {{3.7237536*^9, 432.25}}, {{3.7552896*^9, 
            430.47}}, {{3.7868256*^9, 372.39}}, {{3.818448*^9, 343.52}}, {{
            3.849984*^9, 288.11}}}]}, "Charting`Private`Tag#6"], {}, 
         Annotation[{
           Directive[
            PointSize[0.007333333333333334], 
            RGBColor[1, 0.75, 0], 
            AbsoluteThickness[2]], 
           GeometricTransformation[
            Inset[
             Style[
              Graphics[{
                EdgeForm[
                 Thickness[Medium]], 
                FaceForm[], 
                Line[{{0, 1}, {1, 0}, {0, -1}, {-1, 0}, {0, 1}}]}, 
               PlotRangePadding -> Scaled[0.15]], 
              GraphicsBoxOptions -> {DefaultBaseStyle -> Directive[
                  PointSize[0.007333333333333334], 
                  RGBColor[1, 0.75, 0], 
                  AbsoluteThickness[2]]}], {0., 0.}, Automatic, 
             Offset[13.056]], {{{3.818448*^9, 50.81}}, {{3.849984*^9, 
            45.56}}}]}, "Charting`Private`Tag#8"], 
         Annotation[{
           Directive[
            PointSize[0.007333333333333334], 
            RGBColor[0.647624, 0.37816, 0.614037], 
            AbsoluteThickness[2]], 
           GeometricTransformation[
            Inset[
             Style[
              Graphics[{
                EdgeForm[
                 Thickness[Medium]], 
                FaceForm[], 
                
                Line[{{0, 1}, {-1, 1 - 3^Rational[1, 2]}, {
                  1, 1 - 3^Rational[1, 2]}, {0, 1}}]}, PlotRangePadding -> 
               Scaled[0.15]], 
              GraphicsBoxOptions -> {DefaultBaseStyle -> Directive[
                  PointSize[0.007333333333333334], 
                  RGBColor[0.647624, 0.37816, 0.614037], 
                  AbsoluteThickness[2]]}], {0., 0.}, Automatic, 
             Offset[12.288]], {{{3.5659872*^9, 526.07}}, {{3.5975232*^9, 
            502.83}}, {{3.6290592*^9, 507.81}}, {{3.6605952*^9, 499.69}}, {{
            3.6922176*^9, 642.58}}, {{3.7237536*^9, 643.62}}, {{3.7552896*^9, 
            641.38}}, {{3.7868256*^9, 491.57}}, {{3.818448*^9, 624.08}}, {{
            3.849984*^9, 680.22}}}]}, "Charting`Private`Tag#9"], 
         Annotation[{
           Directive[
            PointSize[0.007333333333333334], 
            RGBColor[0.571589, 0.586483, 0.], 
            AbsoluteThickness[2]], 
           GeometricTransformation[
            Inset[
             Style[
              Graphics[{
                EdgeForm[
                 Thickness[Medium]], 
                FaceForm[], 
                
                Line[{{0, -1}, {-1, -1 + 3^Rational[1, 2]}, {
                  1, -1 + 3^Rational[1, 2]}, {0, -1}}]}, PlotRangePadding -> 
               Scaled[0.15]], 
              GraphicsBoxOptions -> {DefaultBaseStyle -> Directive[
                  PointSize[0.007333333333333334], 
                  RGBColor[0.571589, 0.586483, 0.], 
                  AbsoluteThickness[2]]}], {0., 0.}, Automatic, 
             Offset[12.288]], {{{3.5659872*^9, 1017.65}}, {{3.5975232*^9, 
            874.29}}, {{3.6290592*^9, 959.24}}, {{3.6605952*^9, 703.17}}, {{
            3.6922176*^9, 698.97}}, {{3.7237536*^9, 815.02}}, {{3.7552896*^9, 
            818.06}}, {{3.7868256*^9, 680.72}}, {{3.818448*^9, 796.01}}}]}, 
          "Charting`Private`Tag#10"], 
         Annotation[{
           Directive[
            PointSize[0.007333333333333334], 
            RGBColor[0.915, 0.3325, 0.2125], 
            AbsoluteThickness[2]], 
           GeometricTransformation[
            Inset[
             Style[
              Graphics[{
                EdgeForm[], 
                Disk[{0, 0}]}, PlotRangePadding -> Scaled[0.15]], 
              GraphicsBoxOptions -> {DefaultBaseStyle -> Directive[
                  PointSize[0.007333333333333334], 
                  RGBColor[0.915, 0.3325, 0.2125], 
                  AbsoluteThickness[2]]}], {0., 0.}, Automatic, 
             Offset[10.976]], {{{3.5659872*^9, 402.66}}, {{3.5975232*^9, 
            363.85}}, {{3.6290592*^9, 307.01}}, {{3.6605952*^9, 328.75}}, {{
            3.6922176*^9, 299.07}}, {{3.7237536*^9, 296.38}}, {{3.7552896*^9, 
            326.16}}, {{3.7868256*^9, 293.29}}, {{3.818448*^9, 310.92}}, {{
            3.849984*^9, 326.98}}}]}, "Charting`Private`Tag#11"], 
         Annotation[{
           Directive[
            PointSize[0.007333333333333334], 
            RGBColor[0.40082222609352647`, 0.5220066643438841, 0.85], 
            AbsoluteThickness[2]], 
           GeometricTransformation[
            Inset[
             Style[
              Graphics[{
                EdgeForm[], 
                Polygon[{{-1, -1}, {1, -1}, {1, 1}, {-1, 1}}]}, 
               PlotRangePadding -> Scaled[0.15]], 
              GraphicsBoxOptions -> {DefaultBaseStyle -> Directive[
                  PointSize[0.007333333333333334], 
                  RGBColor[0.40082222609352647`, 0.5220066643438841, 0.85], 
                  AbsoluteThickness[2]]}], {0., 0.}, Automatic, 
             Offset[10.5]], {{{3.5659872*^9, 413.8}}, {{3.5975232*^9, 
            373.36}}, {{3.6290592*^9, 363.46}}, {{3.6605952*^9, 346.03}}, {{
            3.6922176*^9, 321.38}}, {{3.7237536*^9, 357.1}}}]}, 
          "Charting`Private`Tag#12"], 
         Annotation[{
           Directive[
            PointSize[0.007333333333333334], 
            RGBColor[
            0.9728288904374106, 0.621644452187053, 0.07336199581899142], 
            AbsoluteThickness[2]], 
           GeometricTransformation[
            Inset[
             Style[
              Graphics[{
                EdgeForm[], 
                Polygon[{{0, 1}, {1, 0}, {0, -1}, {-1, 0}}]}], 
              GraphicsBoxOptions -> {DefaultBaseStyle -> Directive[
                  PointSize[0.007333333333333334], 
                  RGBColor[
                  0.9728288904374106, 0.621644452187053, 0.07336199581899142], 
                  AbsoluteThickness[2]]}], {0., 0.}, Automatic, 
             Offset[10.2]], {{{3.5659872*^9, 7023.97}}, {{3.5975232*^9, 
            8007.93}}, {{3.6290592*^9, 6386.6}}, {{3.6605952*^9, 5342.8}}, {{
            3.6922176*^9, 5086.21}}, {{3.7237536*^9, 4570.74}}, {{
            3.7552896*^9, 4563.88}}, {{3.7868256*^9, 4002.34}}, {{3.818448*^9,
             3745.84}}}]}, "Charting`Private`Tag#13"], 
         Annotation[{
           Directive[
            PointSize[0.007333333333333334], 
            RGBColor[0.736782672705901, 0.358, 0.5030266573755369], 
            AbsoluteThickness[2]], 
           GeometricTransformation[
            Inset[
             Style[
              Graphics[{
                EdgeForm[], 
                
                Polygon[{{0, 1}, {-1, 1 - 3^Rational[1, 2]}, {
                  1, 1 - 3^Rational[1, 2]}}]}], 
              GraphicsBoxOptions -> {DefaultBaseStyle -> Directive[
                  PointSize[0.007333333333333334], 
                  RGBColor[0.736782672705901, 0.358, 0.5030266573755369], 
                  AbsoluteThickness[2]]}], {0., 0.}, Automatic, 
             Offset[11.4]], {{{3.5659872*^9, 426.22}}, {{3.5975232*^9, 
            460.31}}, {{3.6290592*^9, 481.25}}, {{3.6605952*^9, 453.49}}, {{
            3.6922176*^9, 474.95}}, {{3.7237536*^9, 443.92}}, {{3.7552896*^9, 
            421.83}}, {{3.7868256*^9, 371.81}}, {{3.818448*^9, 361.76}}, {{
            3.849984*^9, 263.95}}}]}, "Charting`Private`Tag#14"], 
         Annotation[{
           Directive[
            PointSize[0.007333333333333334], 
            RGBColor[0.28026441037696703`, 0.715, 0.4292089322474965], 
            AbsoluteThickness[2]], 
           GeometricTransformation[
            Inset[
             Style[
              Graphics[{
                EdgeForm[], 
                
                Polygon[{{0, -1}, {-1, -1 + 3^Rational[1, 2]}, {
                  1, -1 + 3^Rational[1, 2]}}]}], 
              GraphicsBoxOptions -> {DefaultBaseStyle -> Directive[
                  PointSize[0.007333333333333334], 
                  RGBColor[0.28026441037696703`, 0.715, 0.4292089322474965], 
                  AbsoluteThickness[2]]}], {0., 0.}, Automatic, 
             Offset[11.52]], {{{3.5659872*^9, 657.15}}, {{3.5975232*^9, 
            772.62}}, {{3.6290592*^9, 591.29}}, {{3.6605952*^9, 536.88}}, {{
            3.6922176*^9, 634.08}}, {{3.7237536*^9, 704.15}}, {{3.7552896*^9, 
            628.59}}, {{3.7868256*^9, 574.78}}, {{3.818448*^9, 536.9}}, {{
            3.849984*^9, 533.11}}}]}, "Charting`Private`Tag#15"], 
         Annotation[{
           Directive[
            PointSize[0.007333333333333334], 
            RGBColor[0.368417, 0.506779, 0.709798], 
            AbsoluteThickness[2]], 
           GeometricTransformation[
            Inset[
             Style[
              Graphics[
               Circle[{0, 0}], PlotRangePadding -> Scaled[0.15]], 
              GraphicsBoxOptions -> {DefaultBaseStyle -> Directive[
                  PointSize[0.007333333333333334], 
                  RGBColor[0.368417, 0.506779, 0.709798], 
                  AbsoluteThickness[2]]}], {0., 0.}, Automatic, 
             Offset[10.752]], {{{3.6605952*^9, 1463.43}}, {{3.6922176*^9, 
            1616.14}}, {{3.7237536*^9, 1362.95}}, {{3.7552896*^9, 
            1235.07}}, {{3.7868256*^9, 1198.52}}, {{3.818448*^9, 1265.42}}, {{
            3.849984*^9, 1153.4}}}]}, "Charting`Private`Tag#16"], 
         Annotation[{
           Directive[
            PointSize[0.007333333333333334], 
            RGBColor[0.880722, 0.611041, 0.142051], 
            AbsoluteThickness[2]], 
           GeometricTransformation[
            Inset[
             Style[
              Graphics[{
                EdgeForm[
                 Thickness[Medium]], 
                FaceForm[], 
                Line[{{-1, -1}, {1, -1}, {1, 1}, {-1, 1}, {-1, -1}}]}, 
               PlotRangePadding -> Scaled[0.15]], 
              GraphicsBoxOptions -> {DefaultBaseStyle -> Directive[
                  PointSize[0.007333333333333334], 
                  RGBColor[0.880722, 0.611041, 0.142051], 
                  AbsoluteThickness[2]]}], {0., 0.}, Automatic, 
             Offset[10.752]], {{{3.5659872*^9, 709.73}}, {{3.5975232*^9, 
            772.65}}, {{3.6290592*^9, 718.43}}, {{3.6605952*^9, 729.22}}, {{
            3.6922176*^9, 701.55}}, {{3.7237536*^9, 681.92}}, {{3.7552896*^9, 
            655.32}}, {{3.7868256*^9, 551.2}}, {{3.818448*^9, 564.56}}, {{
            3.849984*^9, 571.85}}}]}, "Charting`Private`Tag#17"], 
         Annotation[{
           Directive[
            PointSize[0.007333333333333334], 
            RGBColor[0.560181, 0.691569, 0.194885], 
            AbsoluteThickness[2]], 
           GeometricTransformation[
            Inset[
             Style[
              Graphics[{
                EdgeForm[
                 Thickness[Medium]], 
                FaceForm[], 
                Line[{{0, 1}, {1, 0}, {0, -1}, {-1, 0}, {0, 1}}]}, 
               PlotRangePadding -> Scaled[0.15]], 
              GraphicsBoxOptions -> {DefaultBaseStyle -> Directive[
                  PointSize[0.007333333333333334], 
                  RGBColor[0.560181, 0.691569, 0.194885], 
                  AbsoluteThickness[2]]}], {0., 0.}, Automatic, 
             Offset[13.056]], {{{3.5975232*^9, 665.54}}, {{3.6290592*^9, 
            613.39}}, {{3.6605952*^9, 381.87}}, {{3.6922176*^9, 502.07}}}]}, 
          "Charting`Private`Tag#18"], 
         Annotation[{
           Directive[
            PointSize[0.007333333333333334], 
            RGBColor[0.922526, 0.385626, 0.209179], 
            AbsoluteThickness[2]], 
           GeometricTransformation[
            Inset[
             Style[
              Graphics[{
                EdgeForm[
                 Thickness[Medium]], 
                FaceForm[], 
                
                Line[{{0, 1}, {-1, 1 - 3^Rational[1, 2]}, {
                  1, 1 - 3^Rational[1, 2]}, {0, 1}}]}, PlotRangePadding -> 
               Scaled[0.15]], 
              GraphicsBoxOptions -> {DefaultBaseStyle -> Directive[
                  PointSize[0.007333333333333334], 
                  RGBColor[0.922526, 0.385626, 0.209179], 
                  AbsoluteThickness[2]]}], {0., 0.}, Automatic, 
             Offset[12.288]], {{{3.5659872*^9, 549.42}}, {{3.5975232*^9, 
            528.12}}, {{3.6290592*^9, 541.08}}, {{3.6605952*^9, 481.76}}, {{
            3.6922176*^9, 480.46}}, {{3.7237536*^9, 457.17}}, {{3.7552896*^9, 
            444.55}}, {{3.7868256*^9, 341.48}}, {{3.818448*^9, 355.37}}, {{
            3.849984*^9, 355.55}}}]}, "Charting`Private`Tag#19"], 
         Annotation[{
           Directive[
            PointSize[0.007333333333333334], 
            RGBColor[0.528488, 0.470624, 0.701351], 
            AbsoluteThickness[2]], 
           GeometricTransformation[
            Inset[
             Style[
              Graphics[{
                EdgeForm[
                 Thickness[Medium]], 
                FaceForm[], 
                
                Line[{{0, -1}, {-1, -1 + 3^Rational[1, 2]}, {
                  1, -1 + 3^Rational[1, 2]}, {0, -1}}]}, PlotRangePadding -> 
               Scaled[0.15]], 
              GraphicsBoxOptions -> {DefaultBaseStyle -> Directive[
                  PointSize[0.007333333333333334], 
                  RGBColor[0.528488, 0.470624, 0.701351], 
                  AbsoluteThickness[2]]}], {0., 0.}, Automatic, 
             Offset[12.288]], {{{3.5659872*^9, 407.29}}, {{3.5975232*^9, 
            3569.13}}, {{3.6290592*^9, 374.12}}, {{3.6605952*^9, 349.98}}, {{
            3.6922176*^9, 350.47}}, {{3.7237536*^9, 313.47}}, {{3.7552896*^9, 
            307.99}}, {{3.7868256*^9, 266.44}}, {{3.818448*^9, 265.67}}, {{
            3.849984*^9, 272.48}}}]}, "Charting`Private`Tag#20"], 
         Annotation[{
           Directive[
            PointSize[0.007333333333333334], 
            RGBColor[0.772079, 0.431554, 0.102387], 
            AbsoluteThickness[2]], 
           GeometricTransformation[
            Inset[
             Style[
              Graphics[{
                EdgeForm[], 
                Disk[{0, 0}]}, PlotRangePadding -> Scaled[0.15]], 
              GraphicsBoxOptions -> {DefaultBaseStyle -> Directive[
                  PointSize[0.007333333333333334], 
                  RGBColor[0.772079, 0.431554, 0.102387], 
                  AbsoluteThickness[2]]}], {0., 0.}, Automatic, 
             Offset[10.976]], {{{3.5659872*^9, 978.24}}, {{3.5975232*^9, 
            819.99}}, {{3.6290592*^9, 716.4}}, {{3.6605952*^9, 792.44}}, {{
            3.6922176*^9, 661.24}}, {{3.7237536*^9, 751.83}}, {{3.7552896*^9, 
            781.87}}, {{3.7868256*^9, 689.06}}}]}, "Charting`Private`Tag#21"], 
         Annotation[{
           Directive[
            PointSize[0.007333333333333334], 
            RGBColor[0.363898, 0.618501, 0.782349], 
            AbsoluteThickness[2]], 
           GeometricTransformation[
            Inset[
             Style[
              Graphics[{
                EdgeForm[], 
                Polygon[{{-1, -1}, {1, -1}, {1, 1}, {-1, 1}}]}, 
               PlotRangePadding -> Scaled[0.15]], 
              GraphicsBoxOptions -> {DefaultBaseStyle -> Directive[
                  PointSize[0.007333333333333334], 
                  RGBColor[0.363898, 0.618501, 0.782349], 
                  AbsoluteThickness[2]]}], {0., 0.}, Automatic, 
             Offset[10.5]], {{{3.5659872*^9, 678.64}}, {{3.5975232*^9, 
            506.95}}, {{3.6290592*^9, 569.9}}, {{3.6605952*^9, 546.01}}, {{
            3.6922176*^9, 504.08}}, {{3.7237536*^9, 453.68}}, {{3.7552896*^9, 
            440.92}}, {{3.7868256*^9, 341.72}}, {{3.818448*^9, 414.4}}, {{
            3.849984*^9, 441.98}}}]}, "Charting`Private`Tag#22"], 
         Annotation[{
           Directive[
            PointSize[0.007333333333333334], 
            RGBColor[1, 0.75, 0], 
            AbsoluteThickness[2]], 
           GeometricTransformation[
            Inset[
             Style[
              Graphics[{
                EdgeForm[], 
                Polygon[{{0, 1}, {1, 0}, {0, -1}, {-1, 0}}]}], 
              GraphicsBoxOptions -> {DefaultBaseStyle -> Directive[
                  PointSize[0.007333333333333334], 
                  RGBColor[1, 0.75, 0], 
                  AbsoluteThickness[2]]}], {0., 0.}, Automatic, 
             Offset[10.2]], {{{3.5659872*^9, 235.43}}, {{3.5975232*^9, 
            252.37}}, {{3.6290592*^9, 212.76}}, {{3.6605952*^9, 165.58}}, {{
            3.6922176*^9, 180.19}}, {{3.7237536*^9, 164.87}}, {{3.7552896*^9, 
            173.49}}, {{3.7868256*^9, 162.88}}, {{3.818448*^9, 183.93}}, {{
            3.849984*^9, 172.81}}}]}, "Charting`Private`Tag#23"], 
         Annotation[{
           Directive[
            PointSize[0.007333333333333334], 
            RGBColor[0.647624, 0.37816, 0.614037], 
            AbsoluteThickness[2]], 
           GeometricTransformation[
            Inset[
             Style[
              Graphics[{
                EdgeForm[], 
                
                Polygon[{{0, 1}, {-1, 1 - 3^Rational[1, 2]}, {
                  1, 1 - 3^Rational[1, 2]}}]}], 
              GraphicsBoxOptions -> {DefaultBaseStyle -> Directive[
                  PointSize[0.007333333333333334], 
                  RGBColor[0.647624, 0.37816, 0.614037], 
                  AbsoluteThickness[2]]}], {0., 0.}, Automatic, 
             Offset[11.4]], {{{3.5659872*^9, 571.1}}, {{3.5975232*^9, 
            472.03}}, {{3.6290592*^9, 399.49}}, {{3.6605952*^9, 339.41}}, {{
            3.6922176*^9, 315.65}}, {{3.7237536*^9, 305.97}}, {{3.7552896*^9, 
            300.64}}, {{3.7868256*^9, 238.9}}, {{3.818448*^9, 283.27}}, {{
            3.849984*^9, 264.19}}}]}, "Charting`Private`Tag#24"], 
         Annotation[{
           Directive[
            PointSize[0.007333333333333334], 
            RGBColor[0.571589, 0.586483, 0.], 
            AbsoluteThickness[2]], 
           GeometricTransformation[
            Inset[
             Style[
              Graphics[{
                EdgeForm[], 
                
                Polygon[{{0, -1}, {-1, -1 + 3^Rational[1, 2]}, {
                  1, -1 + 3^Rational[1, 2]}}]}], 
              GraphicsBoxOptions -> {DefaultBaseStyle -> Directive[
                  PointSize[0.007333333333333334], 
                  RGBColor[0.571589, 0.586483, 0.], 
                  AbsoluteThickness[2]]}], {0., 0.}, Automatic, 
             Offset[11.52]], {{{3.5659872*^9, 666.79}}, {{3.5975232*^9, 
            620.57}}, {{3.6290592*^9, 547.67}}, {{3.6605952*^9, 501.03}}, {{
            3.6922176*^9, 484.42}}, {{3.7237536*^9, 539.86}}, {{3.7552896*^9, 
            521.63}}, {{3.7868256*^9, 465.24}}, {{3.818448*^9, 433.02}}, {{
            3.849984*^9, 464.68}}}]}, "Charting`Private`Tag#25"], 
         Annotation[{
           Directive[
            PointSize[0.007333333333333334], 
            RGBColor[0.915, 0.3325, 0.2125], 
            AbsoluteThickness[2]], 
           GeometricTransformation[
            Inset[
             Style[
              Graphics[
               Circle[{0, 0}], PlotRangePadding -> Scaled[0.15]], 
              GraphicsBoxOptions -> {DefaultBaseStyle -> Directive[
                  PointSize[0.007333333333333334], 
                  RGBColor[0.915, 0.3325, 0.2125], 
                  AbsoluteThickness[2]]}], {0., 0.}, Automatic, 
             Offset[10.752]], {{{3.5659872*^9, 3366.32}}, {{3.5975232*^9, 
            3174.6}}, {{3.6290592*^9, 3320.58}}, {{3.6605952*^9, 2843.54}}, {{
            3.6922176*^9, 1497.77}}, {{3.7237536*^9, 1502.27}}, {{
            3.7552896*^9, 1503.39}}, {{3.7868256*^9, 1460.41}}, {{3.818448*^9,
             1459.04}}, {{3.849984*^9, 1397.96}}}]}, 
          "Charting`Private`Tag#26"], 
         Annotation[{
           Directive[
            PointSize[0.007333333333333334], 
            RGBColor[0.40082222609352647`, 0.5220066643438841, 0.85], 
            AbsoluteThickness[2]], 
           GeometricTransformation[
            Inset[
             Style[
              Graphics[{
                EdgeForm[
                 Thickness[Medium]], 
                FaceForm[], 
                Line[{{-1, -1}, {1, -1}, {1, 1}, {-1, 1}, {-1, -1}}]}, 
               PlotRangePadding -> Scaled[0.15]], 
              GraphicsBoxOptions -> {DefaultBaseStyle -> Directive[
                  PointSize[0.007333333333333334], 
                  RGBColor[0.40082222609352647`, 0.5220066643438841, 0.85], 
                  AbsoluteThickness[2]]}], {0., 0.}, Automatic, 
             Offset[10.752]], {{{3.5659872*^9, 673.84}}, {{3.5975232*^9, 
            628.96}}, {{3.6290592*^9, 608.82}}, {{3.6605952*^9, 575.16}}, {{
            3.6922176*^9, 574.}}, {{3.7237536*^9, 598.45}}, {{3.7552896*^9, 
            612.97}}, {{3.7868256*^9, 668.07}}, {{3.818448*^9, 718.56}}, {{
            3.849984*^9, 733.2}}}]}, "Charting`Private`Tag#27"], 
         Annotation[{
           Directive[
            PointSize[0.007333333333333334], 
            RGBColor[
            0.9728288904374106, 0.621644452187053, 0.07336199581899142], 
            AbsoluteThickness[2]], 
           GeometricTransformation[
            Inset[
             Style[
              Graphics[{
                EdgeForm[
                 Thickness[Medium]], 
                FaceForm[], 
                Line[{{0, 1}, {1, 0}, {0, -1}, {-1, 0}, {0, 1}}]}, 
               PlotRangePadding -> Scaled[0.15]], 
              GraphicsBoxOptions -> {DefaultBaseStyle -> Directive[
                  PointSize[0.007333333333333334], 
                  RGBColor[
                  0.9728288904374106, 0.621644452187053, 0.07336199581899142], 
                  AbsoluteThickness[2]]}], {0., 0.}, Automatic, 
             Offset[13.056]], {{{3.5975232*^9, 764.27}}, {{3.6290592*^9, 
            727.74}}, {{3.6605952*^9, 701.59}}, {{3.6922176*^9, 675.63}}}]}, 
          "Charting`Private`Tag#28"], 
         Annotation[{
           Directive[
            PointSize[0.007333333333333334], 
            RGBColor[0.736782672705901, 0.358, 0.5030266573755369], 
            AbsoluteThickness[2]], 
           GeometricTransformation[
            Inset[
             Style[
              Graphics[{
                EdgeForm[
                 Thickness[Medium]], 
                FaceForm[], 
                
                Line[{{0, 1}, {-1, 1 - 3^Rational[1, 2]}, {
                  1, 1 - 3^Rational[1, 2]}, {0, 1}}]}, PlotRangePadding -> 
               Scaled[0.15]], 
              GraphicsBoxOptions -> {DefaultBaseStyle -> Directive[
                  PointSize[0.007333333333333334], 
                  RGBColor[0.736782672705901, 0.358, 0.5030266573755369], 
                  AbsoluteThickness[2]]}], {0., 0.}, Automatic, 
             Offset[12.288]], {{{3.5975232*^9, 2903.39}}, {{3.6290592*^9, 
            2697.64}}, {{3.6605952*^9, 2562.33}}, {{3.6922176*^9, 2874.9}}}]},
           "Charting`Private`Tag#29"], 
         Annotation[{
           Directive[
            PointSize[0.007333333333333334], 
            RGBColor[0.28026441037696703`, 0.715, 0.4292089322474965], 
            AbsoluteThickness[2]], 
           GeometricTransformation[
            Inset[
             Style[
              Graphics[{
                EdgeForm[
                 Thickness[Medium]], 
                FaceForm[], 
                
                Line[{{0, -1}, {-1, -1 + 3^Rational[1, 2]}, {
                  1, -1 + 3^Rational[1, 2]}, {0, -1}}]}, PlotRangePadding -> 
               Scaled[0.15]], 
              GraphicsBoxOptions -> {DefaultBaseStyle -> Directive[
                  PointSize[0.007333333333333334], 
                  RGBColor[0.28026441037696703`, 0.715, 0.4292089322474965], 
                  AbsoluteThickness[2]]}], {0., 0.}, Automatic, 
             Offset[12.288]], {{{3.5659872*^9, 1327.35}}, {{3.5975232*^9, 
            1250.18}}, {{3.6290592*^9, 1285.82}}, {{3.6605952*^9, 
            1196.44}}, {{3.6922176*^9, 1135.8}}, {{3.7237536*^9, 281.55}}, {{
            3.7552896*^9, 276.51}}, {{3.7868256*^9, 265.54}}, {{3.818448*^9, 
            250.44}}, {{3.849984*^9, 236.28}}}]}, "Charting`Private`Tag#30"], 
         Annotation[{
           Directive[
            PointSize[0.007333333333333334], 
            RGBColor[0.368417, 0.506779, 0.709798], 
            AbsoluteThickness[2]], 
           GeometricTransformation[
            Inset[
             Style[
              Graphics[{
                EdgeForm[], 
                Disk[{0, 0}]}, PlotRangePadding -> Scaled[0.15]], 
              GraphicsBoxOptions -> {DefaultBaseStyle -> Directive[
                  PointSize[0.007333333333333334], 
                  RGBColor[0.368417, 0.506779, 0.709798], 
                  AbsoluteThickness[2]]}], {0., 0.}, Automatic, 
             Offset[10.976]], {{{3.5659872*^9, 1332.23}}, {{3.5975232*^9, 
            1337.62}}, {{3.6290592*^9, 1312.25}}, {{3.6605952*^9, 
            1301.69}}, {{3.6922176*^9, 1248.95}}, {{3.7237536*^9, 
            1251.57}}, {{3.7552896*^9, 1137.22}}, {{3.7868256*^9, 
            1129.09}}, {{3.818448*^9, 1140.81}}, {{3.849984*^9, 1166.05}}}]}, 
          "Charting`Private`Tag#31"], 
         Annotation[{
           Directive[
            PointSize[0.007333333333333334], 
            RGBColor[0.880722, 0.611041, 0.142051], 
            AbsoluteThickness[2]], 
           GeometricTransformation[
            Inset[
             Style[
              Graphics[{
                EdgeForm[], 
                Polygon[{{-1, -1}, {1, -1}, {1, 1}, {-1, 1}}]}, 
               PlotRangePadding -> Scaled[0.15]], 
              GraphicsBoxOptions -> {DefaultBaseStyle -> Directive[
                  PointSize[0.007333333333333334], 
                  RGBColor[0.880722, 0.611041, 0.142051], 
                  AbsoluteThickness[2]]}], {0., 0.}, Automatic, 
             Offset[10.5]], {{{3.5659872*^9, 2066.57}}, {{3.5975232*^9, 
            2118.27}}, {{3.6290592*^9, 2152.9}}, {{3.6605952*^9, 2118.8}}}]}, 
          "Charting`Private`Tag#32"], 
         Annotation[{
           Directive[
            PointSize[0.007333333333333334], 
            RGBColor[0.560181, 0.691569, 0.194885], 
            AbsoluteThickness[2]], 
           GeometricTransformation[
            Inset[
             Style[
              Graphics[{
                EdgeForm[], 
                Polygon[{{0, 1}, {1, 0}, {0, -1}, {-1, 0}}]}], 
              GraphicsBoxOptions -> {DefaultBaseStyle -> Directive[
                  PointSize[0.007333333333333334], 
                  RGBColor[0.560181, 0.691569, 0.194885], 
                  AbsoluteThickness[2]]}], {0., 0.}, Automatic, 
             Offset[10.2]], {{{3.5659872*^9, 858.23}}, {{3.6922176*^9, 
            1527.61}}}]}, "Charting`Private`Tag#33"], 
         Annotation[{
           Directive[
            PointSize[0.007333333333333334], 
            RGBColor[0.922526, 0.385626, 0.209179], 
            AbsoluteThickness[2]], 
           GeometricTransformation[
            Inset[
             Style[
              Graphics[{
                EdgeForm[], 
                
                Polygon[{{0, 1}, {-1, 1 - 3^Rational[1, 2]}, {
                  1, 1 - 3^Rational[1, 2]}}]}], 
              GraphicsBoxOptions -> {DefaultBaseStyle -> Directive[
                  PointSize[0.007333333333333334], 
                  RGBColor[0.922526, 0.385626, 0.209179], 
                  AbsoluteThickness[2]]}], {0., 0.}, Automatic, 
             Offset[11.4]], {{{3.5659872*^9, 1931.18}}, {{3.5975232*^9, 
            1449.74}}, {{3.6290592*^9, 1320.48}}, {{3.6605952*^9, 
            1236.16}}, {{3.6922176*^9, 1265.91}}}]}, 
          "Charting`Private`Tag#34"], {}, 
         Annotation[{
           Directive[
            PointSize[0.007333333333333334], 
            RGBColor[0.772079, 0.431554, 0.102387], 
            AbsoluteThickness[2]], 
           GeometricTransformation[
            Inset[
             Style[
              Graphics[
               Circle[{0, 0}], PlotRangePadding -> Scaled[0.15]], 
              GraphicsBoxOptions -> {DefaultBaseStyle -> Directive[
                  PointSize[0.007333333333333334], 
                  RGBColor[0.772079, 0.431554, 0.102387], 
                  AbsoluteThickness[2]]}], {0., 0.}, Automatic, 
             Offset[10.752]], {{{3.5659872*^9, 521.51}}, {{3.5975232*^9, 
            500.55}}, {{3.6290592*^9, 442.86}}, {{3.6605952*^9, 596.58}}, {{
            3.6922176*^9, 566.85}}, {{3.7237536*^9, 537.31}}, {{3.7552896*^9, 
            580.38}}, {{3.7868256*^9, 595.46}}, {{3.818448*^9, 569.48}}, {{
            3.849984*^9, 486.01}}}]}, "Charting`Private`Tag#36"], 
         Annotation[{
           Directive[
            PointSize[0.007333333333333334], 
            RGBColor[0.363898, 0.618501, 0.782349], 
            AbsoluteThickness[2]], 
           GeometricTransformation[
            Inset[
             Style[
              Graphics[{
                EdgeForm[
                 Thickness[Medium]], 
                FaceForm[], 
                Line[{{-1, -1}, {1, -1}, {1, 1}, {-1, 1}, {-1, -1}}]}, 
               PlotRangePadding -> Scaled[0.15]], 
              GraphicsBoxOptions -> {DefaultBaseStyle -> Directive[
                  PointSize[0.007333333333333334], 
                  RGBColor[0.363898, 0.618501, 0.782349], 
                  AbsoluteThickness[2]]}], {0., 0.}, Automatic, 
             Offset[10.752]], {{{3.5659872*^9, 485.48}}, {{3.5975232*^9, 
            587.87}}, {{3.6922176*^9, 133.53}}, {{3.7552896*^9, 241.49}}, {{
            3.7868256*^9, 322.74}}, {{3.818448*^9, 387.47}}, {{3.849984*^9, 
            437.15}}}]}, "Charting`Private`Tag#37"], 
         Annotation[{
           Directive[
            PointSize[0.007333333333333334], 
            RGBColor[1, 0.75, 0], 
            AbsoluteThickness[2]], 
           GeometricTransformation[
            Inset[
             Style[
              Graphics[{
                EdgeForm[
                 Thickness[Medium]], 
                FaceForm[], 
                Line[{{0, 1}, {1, 0}, {0, -1}, {-1, 0}, {0, 1}}]}, 
               PlotRangePadding -> Scaled[0.15]], 
              GraphicsBoxOptions -> {DefaultBaseStyle -> Directive[
                  PointSize[0.007333333333333334], 
                  RGBColor[1, 0.75, 0], 
                  AbsoluteThickness[2]]}], {0., 0.}, Automatic, 
             Offset[13.056]], {{{3.6290592*^9, 559.33}}, {{3.6605952*^9, 
            508.21}}, {{3.6922176*^9, 379.3}}, {{3.7237536*^9, 404.62}}, {{
            3.7552896*^9, 386.11}}, {{3.7868256*^9, 346.21}}, {{3.818448*^9, 
            445.38}}}]}, "Charting`Private`Tag#38"], 
         Annotation[{
           Directive[
            PointSize[0.007333333333333334], 
            RGBColor[0.647624, 0.37816, 0.614037], 
            AbsoluteThickness[2]], 
           GeometricTransformation[
            Inset[
             Style[
              Graphics[{
                EdgeForm[
                 Thickness[Medium]], 
                FaceForm[], 
                
                Line[{{0, 1}, {-1, 1 - 3^Rational[1, 2]}, {
                  1, 1 - 3^Rational[1, 2]}, {0, 1}}]}, PlotRangePadding -> 
               Scaled[0.15]], 
              GraphicsBoxOptions -> {DefaultBaseStyle -> Directive[
                  PointSize[0.007333333333333334], 
                  RGBColor[0.647624, 0.37816, 0.614037], 
                  AbsoluteThickness[2]]}], {0., 0.}, Automatic, 
             Offset[12.288]], {{{3.5659872*^9, 485.82}}, {{3.5975232*^9, 
            523.45}}, {{3.6290592*^9, 493.58}}, {{3.6605952*^9, 488.34}}, {{
            3.6922176*^9, 474.3}}, {{3.7237536*^9, 447.02}}, {{3.7552896*^9, 
            427.76}}, {{3.7868256*^9, 385.84}}, {{3.818448*^9, 420.44}}, {{
            3.849984*^9, 403.3}}}]}, "Charting`Private`Tag#39"], 
         Annotation[{
           Directive[
            PointSize[0.007333333333333334], 
            RGBColor[0.571589, 0.586483, 0.], 
            AbsoluteThickness[2]], 
           GeometricTransformation[
            Inset[
             Style[
              Graphics[{
                EdgeForm[
                 Thickness[Medium]], 
                FaceForm[], 
                
                Line[{{0, -1}, {-1, -1 + 3^Rational[1, 2]}, {
                  1, -1 + 3^Rational[1, 2]}, {0, -1}}]}, PlotRangePadding -> 
               Scaled[0.15]], 
              GraphicsBoxOptions -> {DefaultBaseStyle -> Directive[
                  PointSize[0.007333333333333334], 
                  RGBColor[0.571589, 0.586483, 0.], 
                  AbsoluteThickness[2]]}], {0., 0.}, Automatic, 
             Offset[12.288]], {{{3.5659872*^9, 661.94}}, {{3.5975232*^9, 
            642.86}}, {{3.6290592*^9, 670.84}}, {{3.6605952*^9, 583.17}}, {{
            3.6922176*^9, 558.09}}, {{3.7237536*^9, 687.25}}, {{3.7552896*^9, 
            722.4}}, {{3.7868256*^9, 592.05}}, {{3.818448*^9, 827.95}}, {{
            3.849984*^9, 805.83}}}]}, "Charting`Private`Tag#40"], 
         Annotation[{
           Directive[
            PointSize[0.007333333333333334], 
            RGBColor[0.915, 0.3325, 0.2125], 
            AbsoluteThickness[2]], 
           GeometricTransformation[
            Inset[
             Style[
              Graphics[{
                EdgeForm[], 
                Disk[{0, 0}]}, PlotRangePadding -> Scaled[0.15]], 
              GraphicsBoxOptions -> {DefaultBaseStyle -> Directive[
                  PointSize[0.007333333333333334], 
                  RGBColor[0.915, 0.3325, 0.2125], 
                  AbsoluteThickness[2]]}], {0., 0.}, Automatic, 
             Offset[10.976]], {{{3.6605952*^9, 1047.13}}, {{3.6922176*^9, 
            1094.4}}, {{3.7237536*^9, 1136.17}}, {{3.7552896*^9, 1002.47}}}]},
           "Charting`Private`Tag#41"]}}, <|
       "HighlightElements" -> <|
         "Label" -> {"XYLabel"}, "Ball" -> {"InterpolatedBall"}|>, 
        "LayoutOptions" -> <|
         "PanelPlotLayout" -> <||>, 
          "PlotRange" -> {{3.5659872*^9, 3.849984`16.*^9}, {0., 10000.}}, 
          "Frame" -> {{True, True}, {True, True}}, 
          "AxesOrigin" -> {3.5659872*^9, 0}, 
          "ImageSize" -> {360, 360/GoldenRatio}, "Axes" -> {False, False}, 
          "LabelStyle" -> {}, "AspectRatio" -> GoldenRatio^(-1), 
          "DefaultStyle" -> {
            Directive[
             PointSize[0.007333333333333334], 
             RGBColor[0.915, 0.3325, 0.2125], 
             AbsoluteThickness[2]], 
            Directive[
             PointSize[0.007333333333333334], 
             RGBColor[0.571589, 0.586483, 0.], 
             AbsoluteThickness[2]], 
            Directive[
             PointSize[0.007333333333333334], 
             RGBColor[0.647624, 0.37816, 0.614037], 
             AbsoluteThickness[2]], 
            Directive[
             PointSize[0.007333333333333334], 
             RGBColor[1, 0.75, 0], 
             AbsoluteThickness[2]], 
            Directive[
             PointSize[0.007333333333333334], 
             RGBColor[0.363898, 0.618501, 0.782349], 
             AbsoluteThickness[2]], 
            Directive[
             PointSize[0.007333333333333334], 
             RGBColor[0.772079, 0.431554, 0.102387], 
             AbsoluteThickness[2]], 
            Directive[
             PointSize[0.007333333333333334], 
             RGBColor[0.922526, 0.385626, 0.209179], 
             AbsoluteThickness[2]], 
            Directive[
             PointSize[0.007333333333333334], 
             RGBColor[0.560181, 0.691569, 0.194885], 
             AbsoluteThickness[2]], 
            Directive[
             PointSize[0.007333333333333334], 
             RGBColor[0.880722, 0.611041, 0.142051], 
             AbsoluteThickness[2]], 
            Directive[
             PointSize[0.007333333333333334], 
             RGBColor[0.368417, 0.506779, 0.709798], 
             AbsoluteThickness[2]], 
            Directive[
             PointSize[0.007333333333333334], 
             RGBColor[0.28026441037696703`, 0.715, 0.4292089322474965], 
             AbsoluteThickness[2]], 
            Directive[
             PointSize[0.007333333333333334], 
             RGBColor[0.736782672705901, 0.358, 0.5030266573755369], 
             AbsoluteThickness[2]], 
            Directive[
             PointSize[0.007333333333333334], 
             RGBColor[
             0.9728288904374106, 0.621644452187053, 0.07336199581899142], 
             AbsoluteThickness[2]], 
            Directive[
             PointSize[0.007333333333333334], 
             RGBColor[0.40082222609352647`, 0.5220066643438841, 0.85], 
             AbsoluteThickness[2]], 
            Directive[
             PointSize[0.007333333333333334], 
             RGBColor[0.915, 0.3325, 0.2125], 
             AbsoluteThickness[2]], 
            Directive[
             PointSize[0.007333333333333334], 
             RGBColor[0.571589, 0.586483, 0.], 
             AbsoluteThickness[2]], 
            Directive[
             PointSize[0.007333333333333334], 
             RGBColor[0.647624, 0.37816, 0.614037], 
             AbsoluteThickness[2]], 
            Directive[
             PointSize[0.007333333333333334], 
             RGBColor[1, 0.75, 0], 
             AbsoluteThickness[2]], 
            Directive[
             PointSize[0.007333333333333334], 
             RGBColor[0.363898, 0.618501, 0.782349], 
             AbsoluteThickness[2]], 
            Directive[
             PointSize[0.007333333333333334], 
             RGBColor[0.772079, 0.431554, 0.102387], 
             AbsoluteThickness[2]], 
            Directive[
             PointSize[0.007333333333333334], 
             RGBColor[0.528488, 0.470624, 0.701351], 
             AbsoluteThickness[2]], 
            Directive[
             PointSize[0.007333333333333334], 
             RGBColor[0.922526, 0.385626, 0.209179], 
             AbsoluteThickness[2]], 
            Directive[
             PointSize[0.007333333333333334], 
             RGBColor[0.560181, 0.691569, 0.194885], 
             AbsoluteThickness[2]], 
            Directive[
             PointSize[0.007333333333333334], 
             RGBColor[0.880722, 0.611041, 0.142051], 
             AbsoluteThickness[2]], 
            Directive[
             PointSize[0.007333333333333334], 
             RGBColor[0.368417, 0.506779, 0.709798], 
             AbsoluteThickness[2]], 
            Directive[
             PointSize[0.007333333333333334], 
             RGBColor[0.28026441037696703`, 0.715, 0.4292089322474965], 
             AbsoluteThickness[2]], 
            Directive[
             PointSize[0.007333333333333334], 
             RGBColor[0.736782672705901, 0.358, 0.5030266573755369], 
             AbsoluteThickness[2]], 
            Directive[
             PointSize[0.007333333333333334], 
             RGBColor[
             0.9728288904374106, 0.621644452187053, 0.07336199581899142], 
             AbsoluteThickness[2]], 
            Directive[
             PointSize[0.007333333333333334], 
             RGBColor[0.40082222609352647`, 0.5220066643438841, 0.85], 
             AbsoluteThickness[2]], 
            Directive[
             PointSize[0.007333333333333334], 
             RGBColor[0.915, 0.3325, 0.2125], 
             AbsoluteThickness[2]], 
            Directive[
             PointSize[0.007333333333333334], 
             RGBColor[0.571589, 0.586483, 0.], 
             AbsoluteThickness[2]], 
            Directive[
             PointSize[0.007333333333333334], 
             RGBColor[0.647624, 0.37816, 0.614037], 
             AbsoluteThickness[2]], 
            Directive[
             PointSize[0.007333333333333334], 
             RGBColor[1, 0.75, 0], 
             AbsoluteThickness[2]], 
            Directive[
             PointSize[0.007333333333333334], 
             RGBColor[0.772079, 0.431554, 0.102387], 
             AbsoluteThickness[2]], 
            Directive[
             PointSize[0.007333333333333334], 
             RGBColor[0.528488, 0.470624, 0.701351], 
             AbsoluteThickness[2]], 
            Directive[
             PointSize[0.007333333333333334], 
             RGBColor[0.922526, 0.385626, 0.209179], 
             AbsoluteThickness[2]], 
            Directive[
             PointSize[0.007333333333333334], 
             RGBColor[0.560181, 0.691569, 0.194885], 
             AbsoluteThickness[2]], 
            Directive[
             PointSize[0.007333333333333334], 
             RGBColor[0.880722, 0.611041, 0.142051], 
             AbsoluteThickness[2]], 
            Directive[
             PointSize[0.007333333333333334], 
             RGBColor[0.368417, 0.506779, 0.709798], 
             AbsoluteThickness[2]]}, 
          "HighlightLabelingFunctions" -> <|"CoordinatesToolOptions" -> (({
              DateString[
               Part[#, 1], "DateShort"], 
              Part[#, 2]}& )[{
               Identity[
                Part[#, 1]], 
               Identity[
                Part[#, 2]]}]& ), 
            "ScalingFunctions" -> {{Identity, Identity}, {
              Identity, Identity}}|>, "Primitives" -> {}, "GCFlag" -> False|>,
         "Meta" -> <|
         "DefaultHighlight" -> {"Dynamic", None}, "Index" -> {}, "Function" -> 
          DateListPlot, "GroupHighlight" -> False|>|>, 
       "DynamicHighlight"]], {{}, {}}}, AspectRatio -> 
    NCache[GoldenRatio^(-1), 0.6180339887498948], Axes -> {False, False}, 
    AxesLabel -> {None, None}, AxesOrigin -> {3.5659872*^9, 0}, 
    DisplayFunction -> Identity, Frame -> {{True, True}, {True, True}}, 
    FrameLabel -> {{
       FormBox[
        TagBox["\"st obsojenih na 100 000 prebivalcev\"", HoldForm], 
        TraditionalForm], None}, {
       FormBox[
        TagBox["\"Leto\"", HoldForm], TraditionalForm], None}}, FrameTicks -> 
    FrontEndValueCache[{{Automatic, Automatic}, {
        Charting`DateTicksFunction[Automatic, DateTicksFormat -> {Automatic}], 
        Charting`DateTicksFunction[
        Automatic, DateTicksFormat -> {Automatic}, "TickLabels" -> None]}}, {{
       Automatic, Automatic}, {{{3.5343648*^9, 
          FormBox[
           StyleBox["\"2012\"", 
            Directive[], {}, StripOnInput -> False], TraditionalForm], {
           Rational[1, 72], 0}, 
          Directive[]}, {3.5975232*^9, 
          FormBox[
           StyleBox["\"2014\"", 
            Directive[], {}, StripOnInput -> False], TraditionalForm], {
           Rational[1, 72], 0}, 
          Directive[]}, {3.6605952*^9, 
          FormBox[
           StyleBox["\"2016\"", 
            Directive[], {}, StripOnInput -> False], TraditionalForm], {
           Rational[1, 72], 0}, 
          Directive[]}, {3.7237536*^9, 
          FormBox[
           StyleBox["\"2018\"", 
            Directive[], {}, StripOnInput -> False], TraditionalForm], {
           Rational[1, 72], 0}, 
          Directive[]}, {3.7868256*^9, 
          FormBox[
           StyleBox["\"2020\"", 
            Directive[], {}, StripOnInput -> False], TraditionalForm], {
           Rational[1, 72], 0}, 
          Directive[]}, {3.849984*^9, 
          FormBox[
           StyleBox["\"2022\"", 
            Directive[], {}, StripOnInput -> False], TraditionalForm], {
           Rational[1, 72], 0}, 
          Directive[]}, {3.913056*^9, 
          FormBox[
           StyleBox["\"2024\"", 
            Directive[], {}, StripOnInput -> False], TraditionalForm], {
           Rational[1, 72], 0}, 
          Directive[]}, {3.5343648*^9, 
          FormBox[
           TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {
          0.009722222222222222, 0.}, 
          Directive[]}, {3.5659872*^9, 
          FormBox[
           TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {
          0.009722222222222222, 0.}, 
          Directive[]}, {3.5975232*^9, 
          FormBox[
           TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {
          0.009722222222222222, 0.}, 
          Directive[]}, {3.5975232*^9, 
          FormBox[
           TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {
          0.009722222222222222, 0.}, 
          Directive[]}, {3.6290592*^9, 
          FormBox[
           TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {
          0.009722222222222222, 0.}, 
          Directive[]}, {3.6605952*^9, 
          FormBox[
           TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {
          0.009722222222222222, 0.}, 
          Directive[]}, {3.6605952*^9, 
          FormBox[
           TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {
          0.009722222222222222, 0.}, 
          Directive[]}, {3.6922176*^9, 
          FormBox[
           TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {
          0.009722222222222222, 0.}, 
          Directive[]}, {3.7237536*^9, 
          FormBox[
           TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {
          0.009722222222222222, 0.}, 
          Directive[]}, {3.7237536*^9, 
          FormBox[
           TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {
          0.009722222222222222, 0.}, 
          Directive[]}, {3.7552896*^9, 
          FormBox[
           TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {
          0.009722222222222222, 0.}, 
          Directive[]}, {3.7868256*^9, 
          FormBox[
           TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {
          0.009722222222222222, 0.}, 
          Directive[]}, {3.7868256*^9, 
          FormBox[
           TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {
          0.009722222222222222, 0.}, 
          Directive[]}, {3.818448*^9, 
          FormBox[
           TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {
          0.009722222222222222, 0.}, 
          Directive[]}, {3.849984*^9, 
          FormBox[
           TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {
          0.009722222222222222, 0.}, 
          Directive[]}, {3.849984*^9, 
          FormBox[
           TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {
          0.009722222222222222, 0.}, 
          Directive[]}, {3.88152*^9, 
          FormBox[
           TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {
          0.009722222222222222, 0.}, 
          Directive[]}, {3.913056*^9, 
          FormBox[
           TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {
          0.009722222222222222, 0.}, 
          Directive[]}}, {{3.5343648*^9, 
          FormBox[
           TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {
           Rational[1, 72], 0}, 
          Directive[]}, {3.5975232*^9, 
          FormBox[
           TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {
           Rational[1, 72], 0}, 
          Directive[]}, {3.6605952*^9, 
          FormBox[
           TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {
           Rational[1, 72], 0}, 
          Directive[]}, {3.7237536*^9, 
          FormBox[
           TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {
           Rational[1, 72], 0}, 
          Directive[]}, {3.7868256*^9, 
          FormBox[
           TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {
           Rational[1, 72], 0}, 
          Directive[]}, {3.849984*^9, 
          FormBox[
           TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {
           Rational[1, 72], 0}, 
          Directive[]}, {3.913056*^9, 
          FormBox[
           TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {
           Rational[1, 72], 0}, 
          Directive[]}, {3.5343648*^9, 
          FormBox[
           TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {
          0.009722222222222222, 0.}, 
          Directive[]}, {3.5659872*^9, 
          FormBox[
           TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {
          0.009722222222222222, 0.}, 
          Directive[]}, {3.5975232*^9, 
          FormBox[
           TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {
          0.009722222222222222, 0.}, 
          Directive[]}, {3.5975232*^9, 
          FormBox[
           TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {
          0.009722222222222222, 0.}, 
          Directive[]}, {3.6290592*^9, 
          FormBox[
           TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {
          0.009722222222222222, 0.}, 
          Directive[]}, {3.6605952*^9, 
          FormBox[
           TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {
          0.009722222222222222, 0.}, 
          Directive[]}, {3.6605952*^9, 
          FormBox[
           TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {
          0.009722222222222222, 0.}, 
          Directive[]}, {3.6922176*^9, 
          FormBox[
           TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {
          0.009722222222222222, 0.}, 
          Directive[]}, {3.7237536*^9, 
          FormBox[
           TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {
          0.009722222222222222, 0.}, 
          Directive[]}, {3.7237536*^9, 
          FormBox[
           TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {
          0.009722222222222222, 0.}, 
          Directive[]}, {3.7552896*^9, 
          FormBox[
           TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {
          0.009722222222222222, 0.}, 
          Directive[]}, {3.7868256*^9, 
          FormBox[
           TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {
          0.009722222222222222, 0.}, 
          Directive[]}, {3.7868256*^9, 
          FormBox[
           TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {
          0.009722222222222222, 0.}, 
          Directive[]}, {3.818448*^9, 
          FormBox[
           TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {
          0.009722222222222222, 0.}, 
          Directive[]}, {3.849984*^9, 
          FormBox[
           TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {
          0.009722222222222222, 0.}, 
          Directive[]}, {3.849984*^9, 
          FormBox[
           TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {
          0.009722222222222222, 0.}, 
          Directive[]}, {3.88152*^9, 
          FormBox[
           TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {
          0.009722222222222222, 0.}, 
          Directive[]}, {3.913056*^9, 
          FormBox[
           TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {
          0.009722222222222222, 0.}, 
          Directive[]}}}}], GridLines -> 
    FrontEndValueCache[{Charting`ScaledTickValues[
        ((Transpose[{#, 
          Table[
           Directive[
            GrayLevel[0.5, 0.4]], {
            Length[#]}]}]& )[
         Part[
          Select[
           Charting`DateTicksFunction[
           Automatic, DateTicksFormat -> {Automatic}][
            SlotSequence[1]], And[
            FreeQ[#, 
             Alternatives["", 
              Spacer[{0, 0}]]], Head[#] === List, Length[#] > 0]& ], All, 
          1]]& )[
         SlotSequence[1]], {Identity, Identity}]& , 
       Automatic}, {{{3.5343648*^9, 
         Directive[
          GrayLevel[0.5], 
          Opacity[0.4]]}, {3.5975232*^9, 
         Directive[
          GrayLevel[0.5], 
          Opacity[0.4]]}, {3.6605952*^9, 
         Directive[
          GrayLevel[0.5], 
          Opacity[0.4]]}, {3.7237536*^9, 
         Directive[
          GrayLevel[0.5], 
          Opacity[0.4]]}, {3.7868256*^9, 
         Directive[
          GrayLevel[0.5], 
          Opacity[0.4]]}, {3.849984*^9, 
         Directive[
          GrayLevel[0.5], 
          Opacity[0.4]]}, {3.913056*^9, 
         Directive[
          GrayLevel[0.5], 
          Opacity[0.4]]}}, Automatic}], GridLinesStyle -> Directive[
      GrayLevel[0.5, 0.4]], 
    Method -> {
     "NoShowPlotTheme" -> Automatic, "AxisPadding" -> Scaled[0.02], 
      "DefaultBoundaryStyle" -> Automatic, 
      "DefaultGraphicsInteraction" -> {
       "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
        "Effects" -> {
         "Highlight" -> {"ratio" -> 2}, "HighlightPoint" -> {"ratio" -> 2}, 
          "Droplines" -> {
           "freeformCursorMode" -> True, 
            "placement" -> {"x" -> "All", "y" -> "None"}}}}, 
      "DefaultMeshStyle" -> AbsolutePointSize[6], "DefaultPlotStyle" -> {
        Directive[
         RGBColor[0.368417, 0.506779, 0.709798], 
         AbsoluteThickness[2]], 
        Directive[
         RGBColor[0.880722, 0.611041, 0.142051], 
         AbsoluteThickness[2]], 
        Directive[
         RGBColor[0.560181, 0.691569, 0.194885], 
         AbsoluteThickness[2]], 
        Directive[
         RGBColor[0.922526, 0.385626, 0.209179], 
         AbsoluteThickness[2]], 
        Directive[
         RGBColor[0.528488, 0.470624, 0.701351], 
         AbsoluteThickness[2]], 
        Directive[
         RGBColor[0.772079, 0.431554, 0.102387], 
         AbsoluteThickness[2]], 
        Directive[
         RGBColor[0.363898, 0.618501, 0.782349], 
         AbsoluteThickness[2]], 
        Directive[
         RGBColor[1, 0.75, 0], 
         AbsoluteThickness[2]], 
        Directive[
         RGBColor[0.647624, 0.37816, 0.614037], 
         AbsoluteThickness[2]], 
        Directive[
         RGBColor[0.571589, 0.586483, 0.], 
         AbsoluteThickness[2]], 
        Directive[
         RGBColor[0.915, 0.3325, 0.2125], 
         AbsoluteThickness[2]], 
        Directive[
         RGBColor[0.40082222609352647`, 0.5220066643438841, 0.85], 
         AbsoluteThickness[2]], 
        Directive[
         RGBColor[0.9728288904374106, 0.621644452187053, 0.07336199581899142], 
         AbsoluteThickness[2]], 
        Directive[
         RGBColor[0.736782672705901, 0.358, 0.5030266573755369], 
         AbsoluteThickness[2]], 
        Directive[
         RGBColor[0.28026441037696703`, 0.715, 0.4292089322474965], 
         AbsoluteThickness[2]]}, "DomainPadding" -> Scaled[0.02], 
      "PointSizeFunction" -> "SmallPointSize", "RangePadding" -> Scaled[0.05],
       "AllowMicroRanges" -> {True, False}, "OptimizePlotMarkers" -> True, 
      "IncludeHighlighting" -> "CurrentSet", "HighlightStyle" -> Automatic, 
      "OptimizePlotMarkers" -> True, 
      "CoordinatesToolOptions" -> {"DisplayFunction" -> (({
          DateString[
           Part[#, 1], "DateShort"], 
          Part[#, 2]}& )[{
           Identity[
            Part[#, 1]], 
           Identity[
            Part[#, 2]]}]& ), "CopiedValueFunction" -> (({
          DateString[
           Part[#, 1], "DateShort"], 
          Part[#, 2]}& )[{
           Identity[
            Part[#, 1]], 
           Identity[
            Part[#, 2]]}]& )}}, 
    PlotRange -> {{3.5659872*^9, 3.849984*^9}, {0., 10000.}}, 
    PlotRangeClipping -> True, PlotRangePadding -> {{
       Scaled[0.02], 
       Scaled[0.02]}, {0, 0}}, Ticks -> {{}, Automatic}], 
   FormBox[
    FormBox[
     TemplateBox[{
      "\"Belgium\"", "\"Bulgaria\"", "\"Czechia\"", "\"Denmark\"", 
       "\"Germany\"", "\"Estonia\"", "\"Ireland\"", "\"Greece\"", "\"Spain\"",
        "\"France\"", "\"Croatia\"", "\"Italy\"", "\"Cyprus\"", "\"Latvia\"", 
       "\"Lithuania\"", "\"Luxembourg\"", "\"Hungary\"", "\"Malta\"", 
       "\"Netherlands\"", "\"Austria\"", "\"Poland\"", "\"Portugal\"", 
       "\"Romania\"", "\"Slovenia\"", "\"Slovakia\"", "\"Finland\"", 
       "\"Sweden\"", "\"Iceland\"", "\"Liechtenstein\"", "\"Norway\"", 
       "\"Switzerland\"", "\"England and Wales\"", "\"Scotland (NUTS 2021)\"",
        "\"Northern Ireland (UK) (NUTS 2021)\"", "\"Bosnia and Herzegovina\"",
        "\"Montenegro\"", "\"North Macedonia\"", "\"Albania\"", "\"Serbia\"", 
       "\"T\[UDoubleDot]rkiye\"", "\"Kosovo*\""}, "LineLegend", 
      DisplayFunction -> (FormBox[
        StyleBox[
         StyleBox[
          PaneBox[
           TagBox[
            GridBox[{{
               TagBox[
                GridBox[{{
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[2]], {
                    LineBox[{{0, 12.5}, {20, 12.5}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[2]], {
                    InsetBox[
                    GraphicsBox[{
                    EdgeForm[], 
                    DiskBox[{0, 0}]}, {DefaultBaseStyle -> {"Graphics", {
                    AbsolutePointSize[6]}, 
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[2]]}, PlotRangePadding -> 
                    Scaled[0.15]}], 
                    NCache[
                    Scaled[{
                    Rational[1, 2], 
                    Rational[1, 2]}], 
                    Scaled[{0.5, 0.5}]], Automatic, 
                    Scaled[1]]}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 12.5}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.18000000000000002`] -> 
                    Baseline)], #}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[2]], {
                    LineBox[{{0, 12.5}, {20, 12.5}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[2]], {
                    InsetBox[
                    GraphicsBox[{
                    EdgeForm[], 
                    PolygonBox[{{-1, -1}, {1, -1}, {1, 1}, {-1, 1}}]}, {
                    DefaultBaseStyle -> {"Graphics", {
                    AbsolutePointSize[6]}, 
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[2]]}, PlotRangePadding -> 
                    Scaled[0.15]}], 
                    NCache[
                    Scaled[{
                    Rational[1, 2], 
                    Rational[1, 2]}], 
                    Scaled[{0.5, 0.5}]], Automatic, 
                    Scaled[1]]}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 12.5}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.18000000000000002`] -> 
                    Baseline)], #2}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    AbsoluteThickness[2]], {
                    LineBox[{{0, 12.5}, {20, 12.5}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    AbsoluteThickness[2]], {
                    InsetBox[
                    GraphicsBox[{
                    EdgeForm[], 
                    PolygonBox[{{0, 1}, {1, 0}, {0, -1}, {-1, 0}}]}, {
                    DefaultBaseStyle -> {"Graphics", {
                    AbsolutePointSize[6]}, 
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    AbsoluteThickness[2]]}}], 
                    NCache[
                    Scaled[{
                    Rational[1, 2], 
                    Rational[1, 2]}], 
                    Scaled[{0.5, 0.5}]], Automatic, 
                    Scaled[1]]}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 12.5}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.18000000000000002`] -> 
                    Baseline)], #3}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    RGBColor[0.922526, 0.385626, 0.209179], 
                    AbsoluteThickness[2]], {
                    LineBox[{{0, 12.5}, {20, 12.5}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    RGBColor[0.922526, 0.385626, 0.209179], 
                    AbsoluteThickness[2]], {
                    InsetBox[
                    GraphicsBox[{
                    EdgeForm[], 
                    PolygonBox[
                    
                    NCache[{{0, 1}, {-1, 1 - 3^Rational[1, 2]}, {
                    1, 1 - 3^Rational[1, 2]}}, {{0, 
                    1}, {-1, -0.7320508075688772}, {
                    1, -0.7320508075688772}}]]}, {
                    DefaultBaseStyle -> {"Graphics", {
                    AbsolutePointSize[6]}, 
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    RGBColor[0.922526, 0.385626, 0.209179], 
                    AbsoluteThickness[2]]}}], 
                    NCache[
                    Scaled[{
                    Rational[1, 2], 
                    Rational[1, 2]}], 
                    Scaled[{0.5, 0.5}]], Automatic, 
                    Scaled[1]]}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 12.5}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.18000000000000002`] -> 
                    Baseline)], #4}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    RGBColor[0.528488, 0.470624, 0.701351], 
                    AbsoluteThickness[2]], {
                    LineBox[{{0, 12.5}, {20, 12.5}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    RGBColor[0.528488, 0.470624, 0.701351], 
                    AbsoluteThickness[2]], {
                    InsetBox[
                    GraphicsBox[{
                    EdgeForm[], 
                    PolygonBox[
                    
                    NCache[{{0, -1}, {-1, -1 + 3^Rational[1, 2]}, {
                    1, -1 + 3^Rational[1, 2]}}, {{
                    0, -1}, {-1, 0.7320508075688772}, {
                    1, 0.7320508075688772}}]]}, {
                    DefaultBaseStyle -> {"Graphics", {
                    AbsolutePointSize[6]}, 
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    RGBColor[0.528488, 0.470624, 0.701351], 
                    AbsoluteThickness[2]]}}], 
                    NCache[
                    Scaled[{
                    Rational[1, 2], 
                    Rational[1, 2]}], 
                    Scaled[{0.5, 0.5}]], Automatic, 
                    Scaled[1]]}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 12.5}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.18000000000000002`] -> 
                    Baseline)], #5}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    RGBColor[0.772079, 0.431554, 0.102387], 
                    AbsoluteThickness[2]], {
                    LineBox[{{0, 12.5}, {20, 12.5}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    RGBColor[0.772079, 0.431554, 0.102387], 
                    AbsoluteThickness[2]], {
                    InsetBox[
                    GraphicsBox[
                    CircleBox[{0, 0}], {DefaultBaseStyle -> {"Graphics", {
                    AbsolutePointSize[6]}, 
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    RGBColor[0.772079, 0.431554, 0.102387], 
                    AbsoluteThickness[2]]}, PlotRangePadding -> 
                    Scaled[0.15]}], 
                    NCache[
                    Scaled[{
                    Rational[1, 2], 
                    Rational[1, 2]}], 
                    Scaled[{0.5, 0.5}]], Automatic, 
                    Scaled[1]]}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 12.5}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.18000000000000002`] -> 
                    Baseline)], #6}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    RGBColor[0.363898, 0.618501, 0.782349], 
                    AbsoluteThickness[2]], {
                    LineBox[{{0, 12.5}, {20, 12.5}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    RGBColor[0.363898, 0.618501, 0.782349], 
                    AbsoluteThickness[2]], {
                    InsetBox[
                    GraphicsBox[{
                    EdgeForm[
                    Thickness[Medium]], 
                    FaceForm[], 
                    
                    LineBox[{{-1, -1}, {1, -1}, {1, 1}, {-1, 
                    1}, {-1, -1}}]}, {DefaultBaseStyle -> {"Graphics", {
                    AbsolutePointSize[6]}, 
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    RGBColor[0.363898, 0.618501, 0.782349], 
                    AbsoluteThickness[2]]}, PlotRangePadding -> 
                    Scaled[0.15]}], 
                    NCache[
                    Scaled[{
                    Rational[1, 2], 
                    Rational[1, 2]}], 
                    Scaled[{0.5, 0.5}]], Automatic, 
                    Scaled[1]]}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 12.5}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.18000000000000002`] -> 
                    Baseline)], #7}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    RGBColor[1, 0.75, 0], 
                    AbsoluteThickness[2]], {
                    LineBox[{{0, 13.056}, {20, 13.056}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    RGBColor[1, 0.75, 0], 
                    AbsoluteThickness[2]], {
                    InsetBox[
                    GraphicsBox[{
                    EdgeForm[
                    Thickness[Medium]], 
                    FaceForm[], 
                    LineBox[{{0, 1}, {1, 0}, {0, -1}, {-1, 0}, {0, 1}}]}, {
                    DefaultBaseStyle -> {"Graphics", {
                    AbsolutePointSize[6]}, 
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    RGBColor[1, 0.75, 0], 
                    AbsoluteThickness[2]]}, PlotRangePadding -> 
                    Scaled[0.15]}], 
                    NCache[
                    Scaled[{
                    Rational[1, 2], 
                    Rational[1, 2]}], 
                    Scaled[{0.5, 0.5}]], Automatic, 
                    Scaled[1]]}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 13.056}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.19362745098039214`] -> 
                    Baseline)], #8}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    RGBColor[0.647624, 0.37816, 0.614037], 
                    AbsoluteThickness[2]], {
                    LineBox[{{0, 12.5}, {20, 12.5}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    RGBColor[0.647624, 0.37816, 0.614037], 
                    AbsoluteThickness[2]], {
                    InsetBox[
                    GraphicsBox[{
                    EdgeForm[
                    Thickness[Medium]], 
                    FaceForm[], 
                    LineBox[
                    
                    NCache[{{0, 1}, {-1, 1 - 3^Rational[1, 2]}, {
                    1, 1 - 3^Rational[1, 2]}, {0, 1}}, {{0, 
                    1}, {-1, -0.7320508075688772}, {1, -0.7320508075688772}, {
                    0, 1}}]]}, {DefaultBaseStyle -> {"Graphics", {
                    AbsolutePointSize[6]}, 
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    RGBColor[0.647624, 0.37816, 0.614037], 
                    AbsoluteThickness[2]]}, PlotRangePadding -> 
                    Scaled[0.15]}], 
                    NCache[
                    Scaled[{
                    Rational[1, 2], 
                    Rational[1, 2]}], 
                    Scaled[{0.5, 0.5}]], Automatic, 
                    Scaled[1]]}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 12.5}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.18000000000000002`] -> 
                    Baseline)], #9}}, 
                 GridBoxAlignment -> {
                  "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                 AutoDelete -> False, 
                 GridBoxDividers -> {
                  "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                 GridBoxItemSize -> {"Columns" -> {{All}}, "Rows" -> {{All}}},
                  GridBoxSpacings -> {
                  "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"], 
               TagBox[
                GridBox[{{
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    RGBColor[0.571589, 0.586483, 0.], 
                    AbsoluteThickness[2]], {
                    LineBox[{{0, 12.5}, {20, 12.5}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    RGBColor[0.571589, 0.586483, 0.], 
                    AbsoluteThickness[2]], {
                    InsetBox[
                    GraphicsBox[{
                    EdgeForm[
                    Thickness[Medium]], 
                    FaceForm[], 
                    LineBox[
                    
                    NCache[{{0, -1}, {-1, -1 + 3^Rational[1, 2]}, {
                    1, -1 + 3^Rational[1, 2]}, {0, -1}}, {{
                    0, -1}, {-1, 0.7320508075688772}, {
                    1, 0.7320508075688772}, {0, -1}}]]}, {
                    DefaultBaseStyle -> {"Graphics", {
                    AbsolutePointSize[6]}, 
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    RGBColor[0.571589, 0.586483, 0.], 
                    AbsoluteThickness[2]]}, PlotRangePadding -> 
                    Scaled[0.15]}], 
                    NCache[
                    Scaled[{
                    Rational[1, 2], 
                    Rational[1, 2]}], 
                    Scaled[{0.5, 0.5}]], Automatic, 
                    Scaled[1]]}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 12.5}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.18000000000000002`] -> 
                    Baseline)], #10}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    RGBColor[0.915, 0.3325, 0.2125], 
                    AbsoluteThickness[2]], {
                    LineBox[{{0, 12.5}, {20, 12.5}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    RGBColor[0.915, 0.3325, 0.2125], 
                    AbsoluteThickness[2]], {
                    InsetBox[
                    GraphicsBox[{
                    EdgeForm[], 
                    DiskBox[{0, 0}]}, {DefaultBaseStyle -> {"Graphics", {
                    AbsolutePointSize[6]}, 
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    RGBColor[0.915, 0.3325, 0.2125], 
                    AbsoluteThickness[2]]}, PlotRangePadding -> 
                    Scaled[0.15]}], 
                    NCache[
                    Scaled[{
                    Rational[1, 2], 
                    Rational[1, 2]}], 
                    Scaled[{0.5, 0.5}]], Automatic, 
                    Scaled[1]]}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 12.5}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.18000000000000002`] -> 
                    Baseline)], #11}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    RGBColor[0.40082222609352647`, 0.5220066643438841, 0.85], 
                    AbsoluteThickness[2]], {
                    LineBox[{{0, 12.5}, {20, 12.5}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    RGBColor[0.40082222609352647`, 0.5220066643438841, 0.85], 
                    AbsoluteThickness[2]], {
                    InsetBox[
                    GraphicsBox[{
                    EdgeForm[], 
                    PolygonBox[{{-1, -1}, {1, -1}, {1, 1}, {-1, 1}}]}, {
                    DefaultBaseStyle -> {"Graphics", {
                    AbsolutePointSize[6]}, 
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    RGBColor[0.40082222609352647`, 0.5220066643438841, 0.85], 
                    AbsoluteThickness[2]]}, PlotRangePadding -> 
                    Scaled[0.15]}], 
                    NCache[
                    Scaled[{
                    Rational[1, 2], 
                    Rational[1, 2]}], 
                    Scaled[{0.5, 0.5}]], Automatic, 
                    Scaled[1]]}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 12.5}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.18000000000000002`] -> 
                    Baseline)], #12}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    RGBColor[
                    0.9728288904374106, 0.621644452187053, 
                    0.07336199581899142], 
                    AbsoluteThickness[2]], {
                    LineBox[{{0, 12.5}, {20, 12.5}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    RGBColor[
                    0.9728288904374106, 0.621644452187053, 
                    0.07336199581899142], 
                    AbsoluteThickness[2]], {
                    InsetBox[
                    GraphicsBox[{
                    EdgeForm[], 
                    PolygonBox[{{0, 1}, {1, 0}, {0, -1}, {-1, 0}}]}, {
                    DefaultBaseStyle -> {"Graphics", {
                    AbsolutePointSize[6]}, 
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    RGBColor[
                    0.9728288904374106, 0.621644452187053, 
                    0.07336199581899142], 
                    AbsoluteThickness[2]]}}], 
                    NCache[
                    Scaled[{
                    Rational[1, 2], 
                    Rational[1, 2]}], 
                    Scaled[{0.5, 0.5}]], Automatic, 
                    Scaled[1]]}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 12.5}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.18000000000000002`] -> 
                    Baseline)], #13}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    RGBColor[0.736782672705901, 0.358, 0.5030266573755369], 
                    AbsoluteThickness[2]], {
                    LineBox[{{0, 12.5}, {20, 12.5}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    RGBColor[0.736782672705901, 0.358, 0.5030266573755369], 
                    AbsoluteThickness[2]], {
                    InsetBox[
                    GraphicsBox[{
                    EdgeForm[], 
                    PolygonBox[
                    
                    NCache[{{0, 1}, {-1, 1 - 3^Rational[1, 2]}, {
                    1, 1 - 3^Rational[1, 2]}}, {{0, 
                    1}, {-1, -0.7320508075688772}, {
                    1, -0.7320508075688772}}]]}, {
                    DefaultBaseStyle -> {"Graphics", {
                    AbsolutePointSize[6]}, 
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    RGBColor[0.736782672705901, 0.358, 0.5030266573755369], 
                    AbsoluteThickness[2]]}}], 
                    NCache[
                    Scaled[{
                    Rational[1, 2], 
                    Rational[1, 2]}], 
                    Scaled[{0.5, 0.5}]], Automatic, 
                    Scaled[1]]}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 12.5}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.18000000000000002`] -> 
                    Baseline)], #14}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    RGBColor[0.28026441037696703`, 0.715, 0.4292089322474965], 
                    AbsoluteThickness[2]], {
                    LineBox[{{0, 12.5}, {20, 12.5}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    RGBColor[0.28026441037696703`, 0.715, 0.4292089322474965], 
                    AbsoluteThickness[2]], {
                    InsetBox[
                    GraphicsBox[{
                    EdgeForm[], 
                    PolygonBox[
                    
                    NCache[{{0, -1}, {-1, -1 + 3^Rational[1, 2]}, {
                    1, -1 + 3^Rational[1, 2]}}, {{
                    0, -1}, {-1, 0.7320508075688772}, {
                    1, 0.7320508075688772}}]]}, {
                    DefaultBaseStyle -> {"Graphics", {
                    AbsolutePointSize[6]}, 
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    RGBColor[0.28026441037696703`, 0.715, 0.4292089322474965], 
                    AbsoluteThickness[2]]}}], 
                    NCache[
                    Scaled[{
                    Rational[1, 2], 
                    Rational[1, 2]}], 
                    Scaled[{0.5, 0.5}]], Automatic, 
                    Scaled[1]]}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 12.5}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.18000000000000002`] -> 
                    Baseline)], #15}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[2]], {
                    LineBox[{{0, 12.5}, {20, 12.5}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[2]], {
                    InsetBox[
                    GraphicsBox[
                    CircleBox[{0, 0}], {DefaultBaseStyle -> {"Graphics", {
                    AbsolutePointSize[6]}, 
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[2]]}, PlotRangePadding -> 
                    Scaled[0.15]}], 
                    NCache[
                    Scaled[{
                    Rational[1, 2], 
                    Rational[1, 2]}], 
                    Scaled[{0.5, 0.5}]], Automatic, 
                    Scaled[1]]}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 12.5}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.18000000000000002`] -> 
                    Baseline)], #16}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[2]], {
                    LineBox[{{0, 12.5}, {20, 12.5}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[2]], {
                    InsetBox[
                    GraphicsBox[{
                    EdgeForm[
                    Thickness[Medium]], 
                    FaceForm[], 
                    
                    LineBox[{{-1, -1}, {1, -1}, {1, 1}, {-1, 
                    1}, {-1, -1}}]}, {DefaultBaseStyle -> {"Graphics", {
                    AbsolutePointSize[6]}, 
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[2]]}, PlotRangePadding -> 
                    Scaled[0.15]}], 
                    NCache[
                    Scaled[{
                    Rational[1, 2], 
                    Rational[1, 2]}], 
                    Scaled[{0.5, 0.5}]], Automatic, 
                    Scaled[1]]}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 12.5}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.18000000000000002`] -> 
                    Baseline)], #17}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    AbsoluteThickness[2]], {
                    LineBox[{{0, 13.056}, {20, 13.056}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    AbsoluteThickness[2]], {
                    InsetBox[
                    GraphicsBox[{
                    EdgeForm[
                    Thickness[Medium]], 
                    FaceForm[], 
                    LineBox[{{0, 1}, {1, 0}, {0, -1}, {-1, 0}, {0, 1}}]}, {
                    DefaultBaseStyle -> {"Graphics", {
                    AbsolutePointSize[6]}, 
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    AbsoluteThickness[2]]}, PlotRangePadding -> 
                    Scaled[0.15]}], 
                    NCache[
                    Scaled[{
                    Rational[1, 2], 
                    Rational[1, 2]}], 
                    Scaled[{0.5, 0.5}]], Automatic, 
                    Scaled[1]]}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 13.056}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.19362745098039214`] -> 
                    Baseline)], #18}}, 
                 GridBoxAlignment -> {
                  "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                 AutoDelete -> False, 
                 GridBoxDividers -> {
                  "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                 GridBoxItemSize -> {"Columns" -> {{All}}, "Rows" -> {{All}}},
                  GridBoxSpacings -> {
                  "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"], 
               TagBox[
                GridBox[{{
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    RGBColor[0.922526, 0.385626, 0.209179], 
                    AbsoluteThickness[2]], {
                    LineBox[{{0, 12.5}, {20, 12.5}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    RGBColor[0.922526, 0.385626, 0.209179], 
                    AbsoluteThickness[2]], {
                    InsetBox[
                    GraphicsBox[{
                    EdgeForm[
                    Thickness[Medium]], 
                    FaceForm[], 
                    LineBox[
                    
                    NCache[{{0, 1}, {-1, 1 - 3^Rational[1, 2]}, {
                    1, 1 - 3^Rational[1, 2]}, {0, 1}}, {{0, 
                    1}, {-1, -0.7320508075688772}, {1, -0.7320508075688772}, {
                    0, 1}}]]}, {DefaultBaseStyle -> {"Graphics", {
                    AbsolutePointSize[6]}, 
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    RGBColor[0.922526, 0.385626, 0.209179], 
                    AbsoluteThickness[2]]}, PlotRangePadding -> 
                    Scaled[0.15]}], 
                    NCache[
                    Scaled[{
                    Rational[1, 2], 
                    Rational[1, 2]}], 
                    Scaled[{0.5, 0.5}]], Automatic, 
                    Scaled[1]]}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 12.5}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.18000000000000002`] -> 
                    Baseline)], #19}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    RGBColor[0.528488, 0.470624, 0.701351], 
                    AbsoluteThickness[2]], {
                    LineBox[{{0, 12.5}, {20, 12.5}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    RGBColor[0.528488, 0.470624, 0.701351], 
                    AbsoluteThickness[2]], {
                    InsetBox[
                    GraphicsBox[{
                    EdgeForm[
                    Thickness[Medium]], 
                    FaceForm[], 
                    LineBox[
                    
                    NCache[{{0, -1}, {-1, -1 + 3^Rational[1, 2]}, {
                    1, -1 + 3^Rational[1, 2]}, {0, -1}}, {{
                    0, -1}, {-1, 0.7320508075688772}, {
                    1, 0.7320508075688772}, {0, -1}}]]}, {
                    DefaultBaseStyle -> {"Graphics", {
                    AbsolutePointSize[6]}, 
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    RGBColor[0.528488, 0.470624, 0.701351], 
                    AbsoluteThickness[2]]}, PlotRangePadding -> 
                    Scaled[0.15]}], 
                    NCache[
                    Scaled[{
                    Rational[1, 2], 
                    Rational[1, 2]}], 
                    Scaled[{0.5, 0.5}]], Automatic, 
                    Scaled[1]]}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 12.5}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.18000000000000002`] -> 
                    Baseline)], #20}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    RGBColor[0.772079, 0.431554, 0.102387], 
                    AbsoluteThickness[2]], {
                    LineBox[{{0, 12.5}, {20, 12.5}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    RGBColor[0.772079, 0.431554, 0.102387], 
                    AbsoluteThickness[2]], {
                    InsetBox[
                    GraphicsBox[{
                    EdgeForm[], 
                    DiskBox[{0, 0}]}, {DefaultBaseStyle -> {"Graphics", {
                    AbsolutePointSize[6]}, 
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    RGBColor[0.772079, 0.431554, 0.102387], 
                    AbsoluteThickness[2]]}, PlotRangePadding -> 
                    Scaled[0.15]}], 
                    NCache[
                    Scaled[{
                    Rational[1, 2], 
                    Rational[1, 2]}], 
                    Scaled[{0.5, 0.5}]], Automatic, 
                    Scaled[1]]}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 12.5}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.18000000000000002`] -> 
                    Baseline)], #21}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    RGBColor[0.363898, 0.618501, 0.782349], 
                    AbsoluteThickness[2]], {
                    LineBox[{{0, 12.5}, {20, 12.5}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    RGBColor[0.363898, 0.618501, 0.782349], 
                    AbsoluteThickness[2]], {
                    InsetBox[
                    GraphicsBox[{
                    EdgeForm[], 
                    PolygonBox[{{-1, -1}, {1, -1}, {1, 1}, {-1, 1}}]}, {
                    DefaultBaseStyle -> {"Graphics", {
                    AbsolutePointSize[6]}, 
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    RGBColor[0.363898, 0.618501, 0.782349], 
                    AbsoluteThickness[2]]}, PlotRangePadding -> 
                    Scaled[0.15]}], 
                    NCache[
                    Scaled[{
                    Rational[1, 2], 
                    Rational[1, 2]}], 
                    Scaled[{0.5, 0.5}]], Automatic, 
                    Scaled[1]]}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 12.5}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.18000000000000002`] -> 
                    Baseline)], #22}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    RGBColor[1, 0.75, 0], 
                    AbsoluteThickness[2]], {
                    LineBox[{{0, 12.5}, {20, 12.5}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    RGBColor[1, 0.75, 0], 
                    AbsoluteThickness[2]], {
                    InsetBox[
                    GraphicsBox[{
                    EdgeForm[], 
                    PolygonBox[{{0, 1}, {1, 0}, {0, -1}, {-1, 0}}]}, {
                    DefaultBaseStyle -> {"Graphics", {
                    AbsolutePointSize[6]}, 
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    RGBColor[1, 0.75, 0], 
                    AbsoluteThickness[2]]}}], 
                    NCache[
                    Scaled[{
                    Rational[1, 2], 
                    Rational[1, 2]}], 
                    Scaled[{0.5, 0.5}]], Automatic, 
                    Scaled[1]]}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 12.5}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.18000000000000002`] -> 
                    Baseline)], #23}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    RGBColor[0.647624, 0.37816, 0.614037], 
                    AbsoluteThickness[2]], {
                    LineBox[{{0, 12.5}, {20, 12.5}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    RGBColor[0.647624, 0.37816, 0.614037], 
                    AbsoluteThickness[2]], {
                    InsetBox[
                    GraphicsBox[{
                    EdgeForm[], 
                    PolygonBox[
                    
                    NCache[{{0, 1}, {-1, 1 - 3^Rational[1, 2]}, {
                    1, 1 - 3^Rational[1, 2]}}, {{0, 
                    1}, {-1, -0.7320508075688772}, {
                    1, -0.7320508075688772}}]]}, {
                    DefaultBaseStyle -> {"Graphics", {
                    AbsolutePointSize[6]}, 
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    RGBColor[0.647624, 0.37816, 0.614037], 
                    AbsoluteThickness[2]]}}], 
                    NCache[
                    Scaled[{
                    Rational[1, 2], 
                    Rational[1, 2]}], 
                    Scaled[{0.5, 0.5}]], Automatic, 
                    Scaled[1]]}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 12.5}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.18000000000000002`] -> 
                    Baseline)], #24}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    RGBColor[0.571589, 0.586483, 0.], 
                    AbsoluteThickness[2]], {
                    LineBox[{{0, 12.5}, {20, 12.5}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    RGBColor[0.571589, 0.586483, 0.], 
                    AbsoluteThickness[2]], {
                    InsetBox[
                    GraphicsBox[{
                    EdgeForm[], 
                    PolygonBox[
                    
                    NCache[{{0, -1}, {-1, -1 + 3^Rational[1, 2]}, {
                    1, -1 + 3^Rational[1, 2]}}, {{
                    0, -1}, {-1, 0.7320508075688772}, {
                    1, 0.7320508075688772}}]]}, {
                    DefaultBaseStyle -> {"Graphics", {
                    AbsolutePointSize[6]}, 
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    RGBColor[0.571589, 0.586483, 0.], 
                    AbsoluteThickness[2]]}}], 
                    NCache[
                    Scaled[{
                    Rational[1, 2], 
                    Rational[1, 2]}], 
                    Scaled[{0.5, 0.5}]], Automatic, 
                    Scaled[1]]}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 12.5}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.18000000000000002`] -> 
                    Baseline)], #25}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    RGBColor[0.915, 0.3325, 0.2125], 
                    AbsoluteThickness[2]], {
                    LineBox[{{0, 12.5}, {20, 12.5}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    RGBColor[0.915, 0.3325, 0.2125], 
                    AbsoluteThickness[2]], {
                    InsetBox[
                    GraphicsBox[
                    CircleBox[{0, 0}], {DefaultBaseStyle -> {"Graphics", {
                    AbsolutePointSize[6]}, 
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    RGBColor[0.915, 0.3325, 0.2125], 
                    AbsoluteThickness[2]]}, PlotRangePadding -> 
                    Scaled[0.15]}], 
                    NCache[
                    Scaled[{
                    Rational[1, 2], 
                    Rational[1, 2]}], 
                    Scaled[{0.5, 0.5}]], Automatic, 
                    Scaled[1]]}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 12.5}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.18000000000000002`] -> 
                    Baseline)], #26}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    RGBColor[0.40082222609352647`, 0.5220066643438841, 0.85], 
                    AbsoluteThickness[2]], {
                    LineBox[{{0, 12.5}, {20, 12.5}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    RGBColor[0.40082222609352647`, 0.5220066643438841, 0.85], 
                    AbsoluteThickness[2]], {
                    InsetBox[
                    GraphicsBox[{
                    EdgeForm[
                    Thickness[Medium]], 
                    FaceForm[], 
                    
                    LineBox[{{-1, -1}, {1, -1}, {1, 1}, {-1, 
                    1}, {-1, -1}}]}, {DefaultBaseStyle -> {"Graphics", {
                    AbsolutePointSize[6]}, 
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    RGBColor[0.40082222609352647`, 0.5220066643438841, 0.85], 
                    AbsoluteThickness[2]]}, PlotRangePadding -> 
                    Scaled[0.15]}], 
                    NCache[
                    Scaled[{
                    Rational[1, 2], 
                    Rational[1, 2]}], 
                    Scaled[{0.5, 0.5}]], Automatic, 
                    Scaled[1]]}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 12.5}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.18000000000000002`] -> 
                    Baseline)], #27}}, 
                 GridBoxAlignment -> {
                  "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                 AutoDelete -> False, 
                 GridBoxDividers -> {
                  "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                 GridBoxItemSize -> {"Columns" -> {{All}}, "Rows" -> {{All}}},
                  GridBoxSpacings -> {
                  "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"], 
               TagBox[
                GridBox[{{
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    RGBColor[
                    0.9728288904374106, 0.621644452187053, 
                    0.07336199581899142], 
                    AbsoluteThickness[2]], {
                    LineBox[{{0, 13.056}, {20, 13.056}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    RGBColor[
                    0.9728288904374106, 0.621644452187053, 
                    0.07336199581899142], 
                    AbsoluteThickness[2]], {
                    InsetBox[
                    GraphicsBox[{
                    EdgeForm[
                    Thickness[Medium]], 
                    FaceForm[], 
                    LineBox[{{0, 1}, {1, 0}, {0, -1}, {-1, 0}, {0, 1}}]}, {
                    DefaultBaseStyle -> {"Graphics", {
                    AbsolutePointSize[6]}, 
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    RGBColor[
                    0.9728288904374106, 0.621644452187053, 
                    0.07336199581899142], 
                    AbsoluteThickness[2]]}, PlotRangePadding -> 
                    Scaled[0.15]}], 
                    NCache[
                    Scaled[{
                    Rational[1, 2], 
                    Rational[1, 2]}], 
                    Scaled[{0.5, 0.5}]], Automatic, 
                    Scaled[1]]}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 13.056}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.19362745098039214`] -> 
                    Baseline)], #28}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    RGBColor[0.736782672705901, 0.358, 0.5030266573755369], 
                    AbsoluteThickness[2]], {
                    LineBox[{{0, 12.5}, {20, 12.5}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    RGBColor[0.736782672705901, 0.358, 0.5030266573755369], 
                    AbsoluteThickness[2]], {
                    InsetBox[
                    GraphicsBox[{
                    EdgeForm[
                    Thickness[Medium]], 
                    FaceForm[], 
                    LineBox[
                    NCache[{{0, 1}, {-1, 1 - 3^Rational[1, 2]}, {
                    1, 1 - 3^Rational[1, 2]}, {0, 1}}, {{0, 
                    1}, {-1, -0.7320508075688772}, {1, -0.7320508075688772}, {
                    0, 1}}]]}, {DefaultBaseStyle -> {"Graphics", {
                    AbsolutePointSize[6]}, 
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    RGBColor[0.736782672705901, 0.358, 0.5030266573755369], 
                    AbsoluteThickness[2]]}, PlotRangePadding -> 
                    Scaled[0.15]}], 
                    NCache[
                    Scaled[{
                    Rational[1, 2], 
                    Rational[1, 2]}], 
                    Scaled[{0.5, 0.5}]], Automatic, 
                    Scaled[1]]}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 12.5}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.18000000000000002`] -> 
                    Baseline)], #29}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    RGBColor[0.28026441037696703`, 0.715, 0.4292089322474965], 
                    AbsoluteThickness[2]], {
                    LineBox[{{0, 12.5}, {20, 12.5}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    RGBColor[0.28026441037696703`, 0.715, 0.4292089322474965], 
                    AbsoluteThickness[2]], {
                    InsetBox[
                    GraphicsBox[{
                    EdgeForm[
                    Thickness[Medium]], 
                    FaceForm[], 
                    LineBox[
                    
                    NCache[{{0, -1}, {-1, -1 + 3^Rational[1, 2]}, {
                    1, -1 + 3^Rational[1, 2]}, {0, -1}}, {{
                    0, -1}, {-1, 0.7320508075688772}, {
                    1, 0.7320508075688772}, {0, -1}}]]}, {
                    DefaultBaseStyle -> {"Graphics", {
                    AbsolutePointSize[6]}, 
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    RGBColor[0.28026441037696703`, 0.715, 0.4292089322474965], 
                    AbsoluteThickness[2]]}, PlotRangePadding -> 
                    Scaled[0.15]}], 
                    NCache[
                    Scaled[{
                    Rational[1, 2], 
                    Rational[1, 2]}], 
                    Scaled[{0.5, 0.5}]], Automatic, 
                    Scaled[1]]}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 12.5}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.18000000000000002`] -> 
                    Baseline)], #30}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[2]], {
                    LineBox[{{0, 12.5}, {20, 12.5}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[2]], {
                    InsetBox[
                    GraphicsBox[{
                    EdgeForm[], 
                    DiskBox[{0, 0}]}, {DefaultBaseStyle -> {"Graphics", {
                    AbsolutePointSize[6]}, 
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[2]]}, PlotRangePadding -> 
                    Scaled[0.15]}], 
                    NCache[
                    Scaled[{
                    Rational[1, 2], 
                    Rational[1, 2]}], 
                    Scaled[{0.5, 0.5}]], Automatic, 
                    Scaled[1]]}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 12.5}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.18000000000000002`] -> 
                    Baseline)], #31}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[2]], {
                    LineBox[{{0, 12.5}, {20, 12.5}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[2]], {
                    InsetBox[
                    GraphicsBox[{
                    EdgeForm[], 
                    PolygonBox[{{-1, -1}, {1, -1}, {1, 1}, {-1, 1}}]}, {
                    DefaultBaseStyle -> {"Graphics", {
                    AbsolutePointSize[6]}, 
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[2]]}, PlotRangePadding -> 
                    Scaled[0.15]}], 
                    NCache[
                    Scaled[{
                    Rational[1, 2], 
                    Rational[1, 2]}], 
                    Scaled[{0.5, 0.5}]], Automatic, 
                    Scaled[1]]}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 12.5}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.18000000000000002`] -> 
                    Baseline)], #32}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    AbsoluteThickness[2]], {
                    LineBox[{{0, 12.5}, {20, 12.5}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    AbsoluteThickness[2]], {
                    InsetBox[
                    GraphicsBox[{
                    EdgeForm[], 
                    PolygonBox[{{0, 1}, {1, 0}, {0, -1}, {-1, 0}}]}, {
                    DefaultBaseStyle -> {"Graphics", {
                    AbsolutePointSize[6]}, 
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    AbsoluteThickness[2]]}}], 
                    NCache[
                    Scaled[{
                    Rational[1, 2], 
                    Rational[1, 2]}], 
                    Scaled[{0.5, 0.5}]], Automatic, 
                    Scaled[1]]}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 12.5}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.18000000000000002`] -> 
                    Baseline)], #33}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    RGBColor[0.922526, 0.385626, 0.209179], 
                    AbsoluteThickness[2]], {
                    LineBox[{{0, 12.5}, {20, 12.5}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    RGBColor[0.922526, 0.385626, 0.209179], 
                    AbsoluteThickness[2]], {
                    InsetBox[
                    GraphicsBox[{
                    EdgeForm[], 
                    PolygonBox[
                    
                    NCache[{{0, 1}, {-1, 1 - 3^Rational[1, 2]}, {
                    1, 1 - 3^Rational[1, 2]}}, {{0, 
                    1}, {-1, -0.7320508075688772}, {
                    1, -0.7320508075688772}}]]}, {
                    DefaultBaseStyle -> {"Graphics", {
                    AbsolutePointSize[6]}, 
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    RGBColor[0.922526, 0.385626, 0.209179], 
                    AbsoluteThickness[2]]}}], 
                    NCache[
                    Scaled[{
                    Rational[1, 2], 
                    Rational[1, 2]}], 
                    Scaled[{0.5, 0.5}]], Automatic, 
                    Scaled[1]]}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 12.5}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.18000000000000002`] -> 
                    Baseline)], #34}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    RGBColor[0.528488, 0.470624, 0.701351], 
                    AbsoluteThickness[2]], {
                    LineBox[{{0, 12.5}, {20, 12.5}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    RGBColor[0.528488, 0.470624, 0.701351], 
                    AbsoluteThickness[2]], {
                    InsetBox[
                    GraphicsBox[{
                    EdgeForm[], 
                    PolygonBox[
                    
                    NCache[{{0, -1}, {-1, -1 + 3^Rational[1, 2]}, {
                    1, -1 + 3^Rational[1, 2]}}, {{
                    0, -1}, {-1, 0.7320508075688772}, {
                    1, 0.7320508075688772}}]]}, {
                    DefaultBaseStyle -> {"Graphics", {
                    AbsolutePointSize[6]}, 
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    RGBColor[0.528488, 0.470624, 0.701351], 
                    AbsoluteThickness[2]]}}], 
                    NCache[
                    Scaled[{
                    Rational[1, 2], 
                    Rational[1, 2]}], 
                    Scaled[{0.5, 0.5}]], Automatic, 
                    Scaled[1]]}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 12.5}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.18000000000000002`] -> 
                    Baseline)], #35}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    RGBColor[0.772079, 0.431554, 0.102387], 
                    AbsoluteThickness[2]], {
                    LineBox[{{0, 12.5}, {20, 12.5}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    RGBColor[0.772079, 0.431554, 0.102387], 
                    AbsoluteThickness[2]], {
                    InsetBox[
                    GraphicsBox[
                    CircleBox[{0, 0}], {DefaultBaseStyle -> {"Graphics", {
                    AbsolutePointSize[6]}, 
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    RGBColor[0.772079, 0.431554, 0.102387], 
                    AbsoluteThickness[2]]}, PlotRangePadding -> 
                    Scaled[0.15]}], 
                    NCache[
                    Scaled[{
                    Rational[1, 2], 
                    Rational[1, 2]}], 
                    Scaled[{0.5, 0.5}]], Automatic, 
                    Scaled[1]]}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 12.5}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.18000000000000002`] -> 
                    Baseline)], #36}}, 
                 GridBoxAlignment -> {
                  "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                 AutoDelete -> False, 
                 GridBoxDividers -> {
                  "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                 GridBoxItemSize -> {"Columns" -> {{All}}, "Rows" -> {{All}}},
                  GridBoxSpacings -> {
                  "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"], 
               TagBox[
                GridBox[{{
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    RGBColor[0.363898, 0.618501, 0.782349], 
                    AbsoluteThickness[2]], {
                    LineBox[{{0, 12.5}, {20, 12.5}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    RGBColor[0.363898, 0.618501, 0.782349], 
                    AbsoluteThickness[2]], {
                    InsetBox[
                    GraphicsBox[{
                    EdgeForm[
                    Thickness[Medium]], 
                    FaceForm[], 
                    
                    LineBox[{{-1, -1}, {1, -1}, {1, 1}, {-1, 
                    1}, {-1, -1}}]}, {DefaultBaseStyle -> {"Graphics", {
                    AbsolutePointSize[6]}, 
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    RGBColor[0.363898, 0.618501, 0.782349], 
                    AbsoluteThickness[2]]}, PlotRangePadding -> 
                    Scaled[0.15]}], 
                    NCache[
                    Scaled[{
                    Rational[1, 2], 
                    Rational[1, 2]}], 
                    Scaled[{0.5, 0.5}]], Automatic, 
                    Scaled[1]]}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 12.5}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.18000000000000002`] -> 
                    Baseline)], #37}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    RGBColor[1, 0.75, 0], 
                    AbsoluteThickness[2]], {
                    LineBox[{{0, 13.056}, {20, 13.056}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    RGBColor[1, 0.75, 0], 
                    AbsoluteThickness[2]], {
                    InsetBox[
                    GraphicsBox[{
                    EdgeForm[
                    Thickness[Medium]], 
                    FaceForm[], 
                    LineBox[{{0, 1}, {1, 0}, {0, -1}, {-1, 0}, {0, 1}}]}, {
                    DefaultBaseStyle -> {"Graphics", {
                    AbsolutePointSize[6]}, 
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    RGBColor[1, 0.75, 0], 
                    AbsoluteThickness[2]]}, PlotRangePadding -> 
                    Scaled[0.15]}], 
                    NCache[
                    Scaled[{
                    Rational[1, 2], 
                    Rational[1, 2]}], 
                    Scaled[{0.5, 0.5}]], Automatic, 
                    Scaled[1]]}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 13.056}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.19362745098039214`] -> 
                    Baseline)], #38}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    RGBColor[0.647624, 0.37816, 0.614037], 
                    AbsoluteThickness[2]], {
                    LineBox[{{0, 12.5}, {20, 12.5}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    RGBColor[0.647624, 0.37816, 0.614037], 
                    AbsoluteThickness[2]], {
                    InsetBox[
                    GraphicsBox[{
                    EdgeForm[
                    Thickness[Medium]], 
                    FaceForm[], 
                    LineBox[
                    
                    NCache[{{0, 1}, {-1, 1 - 3^Rational[1, 2]}, {
                    1, 1 - 3^Rational[1, 2]}, {0, 1}}, {{0, 
                    1}, {-1, -0.7320508075688772}, {1, -0.7320508075688772}, {
                    0, 1}}]]}, {DefaultBaseStyle -> {"Graphics", {
                    AbsolutePointSize[6]}, 
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    RGBColor[0.647624, 0.37816, 0.614037], 
                    AbsoluteThickness[2]]}, PlotRangePadding -> 
                    Scaled[0.15]}], 
                    NCache[
                    Scaled[{
                    Rational[1, 2], 
                    Rational[1, 2]}], 
                    Scaled[{0.5, 0.5}]], Automatic, 
                    Scaled[1]]}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 12.5}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.18000000000000002`] -> 
                    Baseline)], #39}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    RGBColor[0.571589, 0.586483, 0.], 
                    AbsoluteThickness[2]], {
                    LineBox[{{0, 12.5}, {20, 12.5}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    RGBColor[0.571589, 0.586483, 0.], 
                    AbsoluteThickness[2]], {
                    InsetBox[
                    GraphicsBox[{
                    EdgeForm[
                    Thickness[Medium]], 
                    FaceForm[], 
                    LineBox[
                    
                    NCache[{{0, -1}, {-1, -1 + 3^Rational[1, 2]}, {
                    1, -1 + 3^Rational[1, 2]}, {0, -1}}, {{
                    0, -1}, {-1, 0.7320508075688772}, {
                    1, 0.7320508075688772}, {0, -1}}]]}, {
                    DefaultBaseStyle -> {"Graphics", {
                    AbsolutePointSize[6]}, 
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    RGBColor[0.571589, 0.586483, 0.], 
                    AbsoluteThickness[2]]}, PlotRangePadding -> 
                    Scaled[0.15]}], 
                    NCache[
                    Scaled[{
                    Rational[1, 2], 
                    Rational[1, 2]}], 
                    Scaled[{0.5, 0.5}]], Automatic, 
                    Scaled[1]]}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 12.5}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.18000000000000002`] -> 
                    Baseline)], #40}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    RGBColor[0.915, 0.3325, 0.2125], 
                    AbsoluteThickness[2]], {
                    LineBox[{{0, 12.5}, {20, 12.5}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    RGBColor[0.915, 0.3325, 0.2125], 
                    AbsoluteThickness[2]], {
                    InsetBox[
                    GraphicsBox[{
                    EdgeForm[], 
                    DiskBox[{0, 0}]}, {DefaultBaseStyle -> {"Graphics", {
                    AbsolutePointSize[6]}, 
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    RGBColor[0.915, 0.3325, 0.2125], 
                    AbsoluteThickness[2]]}, PlotRangePadding -> 
                    Scaled[0.15]}], 
                    NCache[
                    Scaled[{
                    Rational[1, 2], 
                    Rational[1, 2]}], 
                    Scaled[{0.5, 0.5}]], Automatic, 
                    Scaled[1]]}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 12.5}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.18000000000000002`] -> 
                    Baseline)], #41}}, 
                 GridBoxAlignment -> {
                  "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                 AutoDelete -> False, 
                 GridBoxDividers -> {
                  "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                 GridBoxItemSize -> {"Columns" -> {{All}}, "Rows" -> {{All}}},
                  GridBoxSpacings -> {
                  "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
             GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
             AutoDelete -> False, 
             GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
            "Grid"], Alignment -> Left, AppearanceElements -> None, 
           ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
           "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
         FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
         False], TraditionalForm]& ), 
      InterpretationFunction :> (RowBox[{"LineLegend", "[", 
         RowBox[{
           RowBox[{"{", 
             RowBox[{
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"PointSize", "[", "0.007333333333333334`", "]"}], 
                   ",", 
                   
                   TemplateBox[<|
                    "color" -> RGBColor[0.368417, 0.506779, 0.709798]|>, 
                    "RGBColorSwatchTemplate"], ",", 
                   RowBox[{"AbsoluteThickness", "[", "2", "]"}]}], "]"}], ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"PointSize", "[", "0.007333333333333334`", "]"}], 
                   ",", 
                   
                   TemplateBox[<|
                    "color" -> RGBColor[0.880722, 0.611041, 0.142051]|>, 
                    "RGBColorSwatchTemplate"], ",", 
                   RowBox[{"AbsoluteThickness", "[", "2", "]"}]}], "]"}], ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"PointSize", "[", "0.007333333333333334`", "]"}], 
                   ",", 
                   
                   TemplateBox[<|
                    "color" -> RGBColor[0.560181, 0.691569, 0.194885]|>, 
                    "RGBColorSwatchTemplate"], ",", 
                   RowBox[{"AbsoluteThickness", "[", "2", "]"}]}], "]"}], ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"PointSize", "[", "0.007333333333333334`", "]"}], 
                   ",", 
                   
                   TemplateBox[<|
                    "color" -> RGBColor[0.922526, 0.385626, 0.209179]|>, 
                    "RGBColorSwatchTemplate"], ",", 
                   RowBox[{"AbsoluteThickness", "[", "2", "]"}]}], "]"}], ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"PointSize", "[", "0.007333333333333334`", "]"}], 
                   ",", 
                   
                   TemplateBox[<|
                    "color" -> RGBColor[0.528488, 0.470624, 0.701351]|>, 
                    "RGBColorSwatchTemplate"], ",", 
                   RowBox[{"AbsoluteThickness", "[", "2", "]"}]}], "]"}], ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"PointSize", "[", "0.007333333333333334`", "]"}], 
                   ",", 
                   
                   TemplateBox[<|
                    "color" -> RGBColor[0.772079, 0.431554, 0.102387]|>, 
                    "RGBColorSwatchTemplate"], ",", 
                   RowBox[{"AbsoluteThickness", "[", "2", "]"}]}], "]"}], ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"PointSize", "[", "0.007333333333333334`", "]"}], 
                   ",", 
                   
                   TemplateBox[<|
                    "color" -> RGBColor[0.363898, 0.618501, 0.782349]|>, 
                    "RGBColorSwatchTemplate"], ",", 
                   RowBox[{"AbsoluteThickness", "[", "2", "]"}]}], "]"}], ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"PointSize", "[", "0.007333333333333334`", "]"}], 
                   ",", 
                   
                   TemplateBox[<|"color" -> RGBColor[1, 0.75, 0]|>, 
                    "RGBColorSwatchTemplate"], ",", 
                   RowBox[{"AbsoluteThickness", "[", "2", "]"}]}], "]"}], ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"PointSize", "[", "0.007333333333333334`", "]"}], 
                   ",", 
                   
                   TemplateBox[<|
                    "color" -> RGBColor[0.647624, 0.37816, 0.614037]|>, 
                    "RGBColorSwatchTemplate"], ",", 
                   RowBox[{"AbsoluteThickness", "[", "2", "]"}]}], "]"}], ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"PointSize", "[", "0.007333333333333334`", "]"}], 
                   ",", 
                   
                   TemplateBox[<|
                    "color" -> RGBColor[0.571589, 0.586483, 0.]|>, 
                    "RGBColorSwatchTemplate"], ",", 
                   RowBox[{"AbsoluteThickness", "[", "2", "]"}]}], "]"}], ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"PointSize", "[", "0.007333333333333334`", "]"}], 
                   ",", 
                   
                   TemplateBox[<|"color" -> RGBColor[0.915, 0.3325, 0.2125]|>,
                     "RGBColorSwatchTemplate"], ",", 
                   RowBox[{"AbsoluteThickness", "[", "2", "]"}]}], "]"}], ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"PointSize", "[", "0.007333333333333334`", "]"}], 
                   ",", 
                   
                   TemplateBox[<|
                    "color" -> 
                    RGBColor[
                    0.40082222609352647`, 0.5220066643438841, 0.85]|>, 
                    "RGBColorSwatchTemplate"], ",", 
                   RowBox[{"AbsoluteThickness", "[", "2", "]"}]}], "]"}], ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"PointSize", "[", "0.007333333333333334`", "]"}], 
                   ",", 
                   
                   TemplateBox[<|
                    "color" -> 
                    RGBColor[
                    0.9728288904374106, 0.621644452187053, 
                    0.07336199581899142]|>, "RGBColorSwatchTemplate"], ",", 
                   RowBox[{"AbsoluteThickness", "[", "2", "]"}]}], "]"}], ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"PointSize", "[", "0.007333333333333334`", "]"}], 
                   ",", 
                   
                   TemplateBox[<|
                    "color" -> 
                    RGBColor[0.736782672705901, 0.358, 0.5030266573755369]|>, 
                    "RGBColorSwatchTemplate"], ",", 
                   RowBox[{"AbsoluteThickness", "[", "2", "]"}]}], "]"}], ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"PointSize", "[", "0.007333333333333334`", "]"}], 
                   ",", 
                   
                   TemplateBox[<|
                    "color" -> 
                    RGBColor[
                    0.28026441037696703`, 0.715, 0.4292089322474965]|>, 
                    "RGBColorSwatchTemplate"], ",", 
                   RowBox[{"AbsoluteThickness", "[", "2", "]"}]}], "]"}], ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"PointSize", "[", "0.007333333333333334`", "]"}], 
                   ",", 
                   
                   TemplateBox[<|
                    "color" -> RGBColor[0.368417, 0.506779, 0.709798]|>, 
                    "RGBColorSwatchTemplate"], ",", 
                   RowBox[{"AbsoluteThickness", "[", "2", "]"}]}], "]"}], ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"PointSize", "[", "0.007333333333333334`", "]"}], 
                   ",", 
                   
                   TemplateBox[<|
                    "color" -> RGBColor[0.880722, 0.611041, 0.142051]|>, 
                    "RGBColorSwatchTemplate"], ",", 
                   RowBox[{"AbsoluteThickness", "[", "2", "]"}]}], "]"}], ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"PointSize", "[", "0.007333333333333334`", "]"}], 
                   ",", 
                   
                   TemplateBox[<|
                    "color" -> RGBColor[0.560181, 0.691569, 0.194885]|>, 
                    "RGBColorSwatchTemplate"], ",", 
                   RowBox[{"AbsoluteThickness", "[", "2", "]"}]}], "]"}], ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"PointSize", "[", "0.007333333333333334`", "]"}], 
                   ",", 
                   
                   TemplateBox[<|
                    "color" -> RGBColor[0.922526, 0.385626, 0.209179]|>, 
                    "RGBColorSwatchTemplate"], ",", 
                   RowBox[{"AbsoluteThickness", "[", "2", "]"}]}], "]"}], ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"PointSize", "[", "0.007333333333333334`", "]"}], 
                   ",", 
                   
                   TemplateBox[<|
                    "color" -> RGBColor[0.528488, 0.470624, 0.701351]|>, 
                    "RGBColorSwatchTemplate"], ",", 
                   RowBox[{"AbsoluteThickness", "[", "2", "]"}]}], "]"}], ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"PointSize", "[", "0.007333333333333334`", "]"}], 
                   ",", 
                   
                   TemplateBox[<|
                    "color" -> RGBColor[0.772079, 0.431554, 0.102387]|>, 
                    "RGBColorSwatchTemplate"], ",", 
                   RowBox[{"AbsoluteThickness", "[", "2", "]"}]}], "]"}], ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"PointSize", "[", "0.007333333333333334`", "]"}], 
                   ",", 
                   
                   TemplateBox[<|
                    "color" -> RGBColor[0.363898, 0.618501, 0.782349]|>, 
                    "RGBColorSwatchTemplate"], ",", 
                   RowBox[{"AbsoluteThickness", "[", "2", "]"}]}], "]"}], ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"PointSize", "[", "0.007333333333333334`", "]"}], 
                   ",", 
                   
                   TemplateBox[<|"color" -> RGBColor[1, 0.75, 0]|>, 
                    "RGBColorSwatchTemplate"], ",", 
                   RowBox[{"AbsoluteThickness", "[", "2", "]"}]}], "]"}], ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"PointSize", "[", "0.007333333333333334`", "]"}], 
                   ",", 
                   
                   TemplateBox[<|
                    "color" -> RGBColor[0.647624, 0.37816, 0.614037]|>, 
                    "RGBColorSwatchTemplate"], ",", 
                   RowBox[{"AbsoluteThickness", "[", "2", "]"}]}], "]"}], ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"PointSize", "[", "0.007333333333333334`", "]"}], 
                   ",", 
                   
                   TemplateBox[<|
                    "color" -> RGBColor[0.571589, 0.586483, 0.]|>, 
                    "RGBColorSwatchTemplate"], ",", 
                   RowBox[{"AbsoluteThickness", "[", "2", "]"}]}], "]"}], ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"PointSize", "[", "0.007333333333333334`", "]"}], 
                   ",", 
                   
                   TemplateBox[<|"color" -> RGBColor[0.915, 0.3325, 0.2125]|>,
                     "RGBColorSwatchTemplate"], ",", 
                   RowBox[{"AbsoluteThickness", "[", "2", "]"}]}], "]"}], ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"PointSize", "[", "0.007333333333333334`", "]"}], 
                   ",", 
                   
                   TemplateBox[<|
                    "color" -> 
                    RGBColor[
                    0.40082222609352647`, 0.5220066643438841, 0.85]|>, 
                    "RGBColorSwatchTemplate"], ",", 
                   RowBox[{"AbsoluteThickness", "[", "2", "]"}]}], "]"}], ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"PointSize", "[", "0.007333333333333334`", "]"}], 
                   ",", 
                   
                   TemplateBox[<|
                    "color" -> 
                    RGBColor[
                    0.9728288904374106, 0.621644452187053, 
                    0.07336199581899142]|>, "RGBColorSwatchTemplate"], ",", 
                   RowBox[{"AbsoluteThickness", "[", "2", "]"}]}], "]"}], ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"PointSize", "[", "0.007333333333333334`", "]"}], 
                   ",", 
                   
                   TemplateBox[<|
                    "color" -> 
                    RGBColor[0.736782672705901, 0.358, 0.5030266573755369]|>, 
                    "RGBColorSwatchTemplate"], ",", 
                   RowBox[{"AbsoluteThickness", "[", "2", "]"}]}], "]"}], ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"PointSize", "[", "0.007333333333333334`", "]"}], 
                   ",", 
                   
                   TemplateBox[<|
                    "color" -> 
                    RGBColor[
                    0.28026441037696703`, 0.715, 0.4292089322474965]|>, 
                    "RGBColorSwatchTemplate"], ",", 
                   RowBox[{"AbsoluteThickness", "[", "2", "]"}]}], "]"}], ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"PointSize", "[", "0.007333333333333334`", "]"}], 
                   ",", 
                   TemplateBox[<|
                    "color" -> RGBColor[0.368417, 0.506779, 0.709798]|>, 
                    "RGBColorSwatchTemplate"], ",", 
                   RowBox[{"AbsoluteThickness", "[", "2", "]"}]}], "]"}], ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"PointSize", "[", "0.007333333333333334`", "]"}], 
                   ",", 
                   
                   TemplateBox[<|
                    "color" -> RGBColor[0.880722, 0.611041, 0.142051]|>, 
                    "RGBColorSwatchTemplate"], ",", 
                   RowBox[{"AbsoluteThickness", "[", "2", "]"}]}], "]"}], ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"PointSize", "[", "0.007333333333333334`", "]"}], 
                   ",", 
                   
                   TemplateBox[<|
                    "color" -> RGBColor[0.560181, 0.691569, 0.194885]|>, 
                    "RGBColorSwatchTemplate"], ",", 
                   RowBox[{"AbsoluteThickness", "[", "2", "]"}]}], "]"}], ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"PointSize", "[", "0.007333333333333334`", "]"}], 
                   ",", 
                   
                   TemplateBox[<|
                    "color" -> RGBColor[0.922526, 0.385626, 0.209179]|>, 
                    "RGBColorSwatchTemplate"], ",", 
                   RowBox[{"AbsoluteThickness", "[", "2", "]"}]}], "]"}], ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"PointSize", "[", "0.007333333333333334`", "]"}], 
                   ",", 
                   
                   TemplateBox[<|
                    "color" -> RGBColor[0.528488, 0.470624, 0.701351]|>, 
                    "RGBColorSwatchTemplate"], ",", 
                   RowBox[{"AbsoluteThickness", "[", "2", "]"}]}], "]"}], ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"PointSize", "[", "0.007333333333333334`", "]"}], 
                   ",", 
                   
                   TemplateBox[<|
                    "color" -> RGBColor[0.772079, 0.431554, 0.102387]|>, 
                    "RGBColorSwatchTemplate"], ",", 
                   RowBox[{"AbsoluteThickness", "[", "2", "]"}]}], "]"}], ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"PointSize", "[", "0.007333333333333334`", "]"}], 
                   ",", 
                   
                   TemplateBox[<|
                    "color" -> RGBColor[0.363898, 0.618501, 0.782349]|>, 
                    "RGBColorSwatchTemplate"], ",", 
                   RowBox[{"AbsoluteThickness", "[", "2", "]"}]}], "]"}], ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"PointSize", "[", "0.007333333333333334`", "]"}], 
                   ",", 
                   
                   TemplateBox[<|"color" -> RGBColor[1, 0.75, 0]|>, 
                    "RGBColorSwatchTemplate"], ",", 
                   RowBox[{"AbsoluteThickness", "[", "2", "]"}]}], "]"}], ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"PointSize", "[", "0.007333333333333334`", "]"}], 
                   ",", 
                   
                   TemplateBox[<|
                    "color" -> RGBColor[0.647624, 0.37816, 0.614037]|>, 
                    "RGBColorSwatchTemplate"], ",", 
                   RowBox[{"AbsoluteThickness", "[", "2", "]"}]}], "]"}], ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"PointSize", "[", "0.007333333333333334`", "]"}], 
                   ",", 
                   
                   TemplateBox[<|
                    "color" -> RGBColor[0.571589, 0.586483, 0.]|>, 
                    "RGBColorSwatchTemplate"], ",", 
                   RowBox[{"AbsoluteThickness", "[", "2", "]"}]}], "]"}], ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"PointSize", "[", "0.007333333333333334`", "]"}], 
                   ",", 
                   
                   TemplateBox[<|"color" -> RGBColor[0.915, 0.3325, 0.2125]|>,
                     "RGBColorSwatchTemplate"], ",", 
                   RowBox[{"AbsoluteThickness", "[", "2", "]"}]}], "]"}]}], 
             "}"}], ",", 
           RowBox[{"{", 
             
             RowBox[{#, ",", #2, ",", #3, ",", #4, ",", #5, ",", #6, ",", #7, 
               ",", #8, ",", #9, ",", #10, ",", #11, ",", #12, ",", #13, 
               ",", #14, ",", #15, ",", #16, ",", #17, ",", #18, ",", #19, 
               ",", #20, ",", #21, ",", #22, ",", #23, ",", #24, ",", #25, 
               ",", #26, ",", #27, ",", #28, ",", #29, ",", #30, ",", #31, 
               ",", #32, ",", #33, ",", #34, ",", #35, ",", #36, ",", #37, 
               ",", #38, ",", #39, ",", #40, ",", #41}], "}"}], ",", 
           RowBox[{"LegendMarkers", "\[Rule]", 
             RowBox[{"{", 
               RowBox[{
                 RowBox[{"{", 
                   RowBox[{
                    GraphicsBox[{
                    EdgeForm[], 
                    DiskBox[{0, 0}]}, PlotRangePadding -> Scaled[0.15]], ",", 
                    RowBox[{"Offset", "[", "10.976`", "]"}]}], "}"}], ",", 
                 RowBox[{"{", 
                   RowBox[{
                    GraphicsBox[{
                    EdgeForm[], 
                    PolygonBox[{{-1, -1}, {1, -1}, {1, 1}, {-1, 1}}]}, 
                    PlotRangePadding -> Scaled[0.15]], ",", 
                    RowBox[{"Offset", "[", "10.5`", "]"}]}], "}"}], ",", 
                 RowBox[{"{", 
                   RowBox[{
                    GraphicsBox[{
                    EdgeForm[], 
                    PolygonBox[{{0, 1}, {1, 0}, {0, -1}, {-1, 0}}]}], ",", 
                    RowBox[{"Offset", "[", "10.2`", "]"}]}], "}"}], ",", 
                 RowBox[{"{", 
                   RowBox[{
                    GraphicsBox[{
                    EdgeForm[], 
                    PolygonBox[
                    
                    NCache[{{0, 1}, {-1, 1 - 3^Rational[1, 2]}, {
                    1, 1 - 3^Rational[1, 2]}}, {{0, 
                    1}, {-1, -0.7320508075688772}, {
                    1, -0.7320508075688772}}]]}], ",", 
                    RowBox[{"Offset", "[", "11.4`", "]"}]}], "}"}], ",", 
                 RowBox[{"{", 
                   RowBox[{
                    GraphicsBox[{
                    EdgeForm[], 
                    PolygonBox[
                    
                    NCache[{{0, -1}, {-1, -1 + 3^Rational[1, 2]}, {
                    1, -1 + 3^Rational[1, 2]}}, {{
                    0, -1}, {-1, 0.7320508075688772}, {
                    1, 0.7320508075688772}}]]}], ",", 
                    RowBox[{"Offset", "[", "11.52`", "]"}]}], "}"}], ",", 
                 RowBox[{"{", 
                   RowBox[{
                    GraphicsBox[
                    CircleBox[{0, 0}], PlotRangePadding -> Scaled[0.15]], ",", 
                    RowBox[{"Offset", "[", "10.752`", "]"}]}], "}"}], ",", 
                 RowBox[{"{", 
                   RowBox[{
                    GraphicsBox[{
                    EdgeForm[
                    Thickness[Medium]], 
                    FaceForm[], 
                    LineBox[{{-1, -1}, {1, -1}, {1, 1}, {-1, 1}, {-1, -1}}]}, 
                    PlotRangePadding -> Scaled[0.15]], ",", 
                    RowBox[{"Offset", "[", "10.752`", "]"}]}], "}"}], ",", 
                 RowBox[{"{", 
                   RowBox[{
                    GraphicsBox[{
                    EdgeForm[
                    Thickness[Medium]], 
                    FaceForm[], 
                    LineBox[{{0, 1}, {1, 0}, {0, -1}, {-1, 0}, {0, 1}}]}, 
                    PlotRangePadding -> Scaled[0.15]], ",", 
                    RowBox[{"Offset", "[", "13.056`", "]"}]}], "}"}], ",", 
                 RowBox[{"{", 
                   RowBox[{
                    GraphicsBox[{
                    EdgeForm[
                    Thickness[Medium]], 
                    FaceForm[], 
                    LineBox[
                    
                    NCache[{{0, 1}, {-1, 1 - 3^Rational[1, 2]}, {
                    1, 1 - 3^Rational[1, 2]}, {0, 1}}, {{0, 
                    1}, {-1, -0.7320508075688772}, {1, -0.7320508075688772}, {
                    0, 1}}]]}, PlotRangePadding -> Scaled[0.15]], ",", 
                    RowBox[{"Offset", "[", "12.288`", "]"}]}], "}"}], ",", 
                 RowBox[{"{", 
                   RowBox[{
                    GraphicsBox[{
                    EdgeForm[
                    Thickness[Medium]], 
                    FaceForm[], 
                    LineBox[
                    
                    NCache[{{0, -1}, {-1, -1 + 3^Rational[1, 2]}, {
                    1, -1 + 3^Rational[1, 2]}, {0, -1}}, {{
                    0, -1}, {-1, 0.7320508075688772}, {
                    1, 0.7320508075688772}, {0, -1}}]]}, PlotRangePadding -> 
                    Scaled[0.15]], ",", 
                    RowBox[{"Offset", "[", "12.288`", "]"}]}], "}"}], ",", 
                 RowBox[{"{", 
                   RowBox[{
                    GraphicsBox[{
                    EdgeForm[], 
                    DiskBox[{0, 0}]}, PlotRangePadding -> Scaled[0.15]], ",", 
                    RowBox[{"Offset", "[", "10.976`", "]"}]}], "}"}], ",", 
                 RowBox[{"{", 
                   RowBox[{
                    GraphicsBox[{
                    EdgeForm[], 
                    PolygonBox[{{-1, -1}, {1, -1}, {1, 1}, {-1, 1}}]}, 
                    PlotRangePadding -> Scaled[0.15]], ",", 
                    RowBox[{"Offset", "[", "10.5`", "]"}]}], "}"}], ",", 
                 RowBox[{"{", 
                   RowBox[{
                    GraphicsBox[{
                    EdgeForm[], 
                    PolygonBox[{{0, 1}, {1, 0}, {0, -1}, {-1, 0}}]}], ",", 
                    RowBox[{"Offset", "[", "10.2`", "]"}]}], "}"}], ",", 
                 RowBox[{"{", 
                   RowBox[{
                    GraphicsBox[{
                    EdgeForm[], 
                    PolygonBox[
                    
                    NCache[{{0, 1}, {-1, 1 - 3^Rational[1, 2]}, {
                    1, 1 - 3^Rational[1, 2]}}, {{0, 
                    1}, {-1, -0.7320508075688772}, {
                    1, -0.7320508075688772}}]]}], ",", 
                    RowBox[{"Offset", "[", "11.4`", "]"}]}], "}"}], ",", 
                 RowBox[{"{", 
                   RowBox[{
                    GraphicsBox[{
                    EdgeForm[], 
                    PolygonBox[
                    
                    NCache[{{0, -1}, {-1, -1 + 3^Rational[1, 2]}, {
                    1, -1 + 3^Rational[1, 2]}}, {{
                    0, -1}, {-1, 0.7320508075688772}, {
                    1, 0.7320508075688772}}]]}], ",", 
                    RowBox[{"Offset", "[", "11.52`", "]"}]}], "}"}], ",", 
                 RowBox[{"{", 
                   RowBox[{
                    GraphicsBox[
                    CircleBox[{0, 0}], PlotRangePadding -> Scaled[0.15]], ",", 
                    RowBox[{"Offset", "[", "10.752`", "]"}]}], "}"}], ",", 
                 RowBox[{"{", 
                   RowBox[{
                    GraphicsBox[{
                    EdgeForm[
                    Thickness[Medium]], 
                    FaceForm[], 
                    LineBox[{{-1, -1}, {1, -1}, {1, 1}, {-1, 1}, {-1, -1}}]}, 
                    PlotRangePadding -> Scaled[0.15]], ",", 
                    RowBox[{"Offset", "[", "10.752`", "]"}]}], "}"}], ",", 
                 RowBox[{"{", 
                   RowBox[{
                    GraphicsBox[{
                    EdgeForm[
                    Thickness[Medium]], 
                    FaceForm[], 
                    LineBox[{{0, 1}, {1, 0}, {0, -1}, {-1, 0}, {0, 1}}]}, 
                    PlotRangePadding -> Scaled[0.15]], ",", 
                    RowBox[{"Offset", "[", "13.056`", "]"}]}], "}"}], ",", 
                 RowBox[{"{", 
                   RowBox[{
                    GraphicsBox[{
                    EdgeForm[
                    Thickness[Medium]], 
                    FaceForm[], 
                    LineBox[
                    
                    NCache[{{0, 1}, {-1, 1 - 3^Rational[1, 2]}, {
                    1, 1 - 3^Rational[1, 2]}, {0, 1}}, {{0, 
                    1}, {-1, -0.7320508075688772}, {1, -0.7320508075688772}, {
                    0, 1}}]]}, PlotRangePadding -> Scaled[0.15]], ",", 
                    RowBox[{"Offset", "[", "12.288`", "]"}]}], "}"}], ",", 
                 RowBox[{"{", 
                   RowBox[{
                    GraphicsBox[{
                    EdgeForm[
                    Thickness[Medium]], 
                    FaceForm[], 
                    LineBox[
                    
                    NCache[{{0, -1}, {-1, -1 + 3^Rational[1, 2]}, {
                    1, -1 + 3^Rational[1, 2]}, {0, -1}}, {{
                    0, -1}, {-1, 0.7320508075688772}, {
                    1, 0.7320508075688772}, {0, -1}}]]}, PlotRangePadding -> 
                    Scaled[0.15]], ",", 
                    RowBox[{"Offset", "[", "12.288`", "]"}]}], "}"}], ",", 
                 RowBox[{"{", 
                   RowBox[{
                    GraphicsBox[{
                    EdgeForm[], 
                    DiskBox[{0, 0}]}, PlotRangePadding -> Scaled[0.15]], ",", 
                    RowBox[{"Offset", "[", "10.976`", "]"}]}], "}"}], ",", 
                 RowBox[{"{", 
                   RowBox[{
                    GraphicsBox[{
                    EdgeForm[], 
                    PolygonBox[{{-1, -1}, {1, -1}, {1, 1}, {-1, 1}}]}, 
                    PlotRangePadding -> Scaled[0.15]], ",", 
                    RowBox[{"Offset", "[", "10.5`", "]"}]}], "}"}], ",", 
                 RowBox[{"{", 
                   RowBox[{
                    GraphicsBox[{
                    EdgeForm[], 
                    PolygonBox[{{0, 1}, {1, 0}, {0, -1}, {-1, 0}}]}], ",", 
                    RowBox[{"Offset", "[", "10.2`", "]"}]}], "}"}], ",", 
                 RowBox[{"{", 
                   RowBox[{
                    GraphicsBox[{
                    EdgeForm[], 
                    PolygonBox[
                    
                    NCache[{{0, 1}, {-1, 1 - 3^Rational[1, 2]}, {
                    1, 1 - 3^Rational[1, 2]}}, {{0, 
                    1}, {-1, -0.7320508075688772}, {
                    1, -0.7320508075688772}}]]}], ",", 
                    RowBox[{"Offset", "[", "11.4`", "]"}]}], "}"}], ",", 
                 RowBox[{"{", 
                   RowBox[{
                    GraphicsBox[{
                    EdgeForm[], 
                    PolygonBox[
                    
                    NCache[{{0, -1}, {-1, -1 + 3^Rational[1, 2]}, {
                    1, -1 + 3^Rational[1, 2]}}, {{
                    0, -1}, {-1, 0.7320508075688772}, {
                    1, 0.7320508075688772}}]]}], ",", 
                    RowBox[{"Offset", "[", "11.52`", "]"}]}], "}"}], ",", 
                 RowBox[{"{", 
                   RowBox[{
                    GraphicsBox[
                    CircleBox[{0, 0}], PlotRangePadding -> Scaled[0.15]], ",", 
                    RowBox[{"Offset", "[", "10.752`", "]"}]}], "}"}], ",", 
                 RowBox[{"{", 
                   RowBox[{
                    GraphicsBox[{
                    EdgeForm[
                    Thickness[Medium]], 
                    FaceForm[], 
                    LineBox[{{-1, -1}, {1, -1}, {1, 1}, {-1, 1}, {-1, -1}}]}, 
                    PlotRangePadding -> Scaled[0.15]], ",", 
                    RowBox[{"Offset", "[", "10.752`", "]"}]}], "}"}], ",", 
                 RowBox[{"{", 
                   RowBox[{
                    GraphicsBox[{
                    EdgeForm[
                    Thickness[Medium]], 
                    FaceForm[], 
                    LineBox[{{0, 1}, {1, 0}, {0, -1}, {-1, 0}, {0, 1}}]}, 
                    PlotRangePadding -> Scaled[0.15]], ",", 
                    RowBox[{"Offset", "[", "13.056`", "]"}]}], "}"}], ",", 
                 RowBox[{"{", 
                   RowBox[{
                    GraphicsBox[{
                    EdgeForm[
                    Thickness[Medium]], 
                    FaceForm[], 
                    LineBox[
                    
                    NCache[{{0, 1}, {-1, 1 - 3^Rational[1, 2]}, {
                    1, 1 - 3^Rational[1, 2]}, {0, 1}}, {{0, 
                    1}, {-1, -0.7320508075688772}, {1, -0.7320508075688772}, {
                    0, 1}}]]}, PlotRangePadding -> Scaled[0.15]], ",", 
                    RowBox[{"Offset", "[", "12.288`", "]"}]}], "}"}], ",", 
                 RowBox[{"{", 
                   RowBox[{
                    GraphicsBox[{
                    EdgeForm[
                    Thickness[Medium]], 
                    FaceForm[], 
                    LineBox[
                    NCache[{{0, -1}, {-1, -1 + 3^Rational[1, 2]}, {
                    1, -1 + 3^Rational[1, 2]}, {0, -1}}, {{
                    0, -1}, {-1, 0.7320508075688772}, {
                    1, 0.7320508075688772}, {0, -1}}]]}, PlotRangePadding -> 
                    Scaled[0.15]], ",", 
                    RowBox[{"Offset", "[", "12.288`", "]"}]}], "}"}]}], 
               "}"}]}], ",", 
           RowBox[{"Joined", "\[Rule]", 
             RowBox[{"{", 
               
               RowBox[{
                "True", ",", "True", ",", "True", ",", "True", ",", "True", 
                 ",", "True", ",", "True", ",", "True", ",", "True", ",", 
                 "True", ",", "True", ",", "True", ",", "True", ",", "True", 
                 ",", "True", ",", "True", ",", "True", ",", "True", ",", 
                 "True", ",", "True", ",", "True", ",", "True", ",", "True", 
                 ",", "True", ",", "True", ",", "True", ",", "True", ",", 
                 "True", ",", "True", ",", "True", ",", "True", ",", "True", 
                 ",", "True", ",", "True", ",", "True", ",", "True", ",", 
                 "True", ",", "True", ",", "True", ",", "True", ",", "True"}],
                "}"}]}], ",", 
           RowBox[{"LabelStyle", "\[Rule]", 
             RowBox[{"{", "}"}]}], ",", 
           RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& ), 
      Editable -> True], TraditionalForm], TraditionalForm]},
  "Legended",
  DisplayFunction->(GridBox[{{
      TagBox[
       ItemBox[
        PaneBox[
         TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
         BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
       "SkipImageSizeLevel"], 
      ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
    GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
    AutoDelete -> False, GridBoxItemSize -> Automatic, 
    BaselinePosition -> {1, 1}]& ),
  Editable->True,
  InterpretationFunction->(RowBox[{"Legended", "[", 
     RowBox[{#, ",", 
       RowBox[{"Placed", "[", 
         RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& )]], "Output",
 CellChangeTimes->{3.933645498744726*^9, 3.9336460456124516`*^9, 
  3.9336460765396023`*^9, 3.933648747772517*^9, 3.933721583520304*^9, 
  3.933733421986805*^9, 3.933733482974938*^9, 3.9337379238601*^9, 
  3.933738807259308*^9, 3.933800574632397*^9, 3.9338013839420185`*^9, 
  3.933819862857252*^9, 3.933903899087141*^9},
 CellLabel->"Out[23]=",ExpressionUUID->"179b2f22-9c0d-4343-9d2b-7de976586c8d"]
}, Open  ]],

Cell["\<\
Iz zgornjega grafa vidimo, da je \[SHacek]tevilo obsojenih na 100.000 \
prebivalcev vsako leto relativno enako za ve\[CHacek]ino dr\[ZHacek]av. Najve\
\[CHacek]ja izjema je Ciper, kjer vidimo, da je \[SHacek]tevilo obsojenih \
veliko ve\[CHacek]je.\
\>", "Text",
 CellChangeTimes->{{3.933644865507414*^9, 3.933644977275429*^9}, {
   3.9336460910709743`*^9, 3.933646094729839*^9}, 3.933648611024496*^9, {
   3.9337216335241966`*^9, 3.933721638624588*^9}, {3.9337216689017572`*^9, 
   3.933721684327399*^9}, {3.9338197906740646`*^9, 
   3.9338198083119926`*^9}},ExpressionUUID->"e00ff3d5-2cfd-b147-b614-\
7194de205d6f"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"vsiObsojeni", " ", "@", " ", 
  RowBox[{"{", 
   RowBox[{"\"\<Cyprus\>\"", ",", " ", "\"\<Slovenia\>\""}], "}"}]}]], "Input",
 CellChangeTimes->{{3.933377571325939*^9, 3.933377571932856*^9}, 
   3.933564088286375*^9, {3.933564303148609*^9, 3.9335644908267155`*^9}, {
   3.933564577755871*^9, 3.93356463954821*^9}, {3.933564682212427*^9, 
   3.9335646964040794`*^9}, {3.933637068099678*^9, 3.933637068108681*^9}, 
   3.933640194843355*^9, {3.9336435827627544`*^9, 3.933643587890049*^9}, {
   3.933643638918785*^9, 3.9336436545274887`*^9}, {3.9336437287950706`*^9, 
   3.9336437408734264`*^9}, 3.93364439486858*^9, {3.933646490658014*^9, 
   3.9336465371363506`*^9}, {3.933646587530088*^9, 3.9336466124714966`*^9}, {
   3.93364672806646*^9, 3.933646788170641*^9}, 3.933646889561027*^9, {
   3.933647118261276*^9, 3.933647186320612*^9}, {3.933647722872999*^9, 
   3.933647766477089*^9}, {3.9336478291643143`*^9, 3.93364787580439*^9}, 
   3.933649139893654*^9, {3.93373349523477*^9, 3.933733516213211*^9}},
 CellLabel->"In[24]:=",ExpressionUUID->"5494d1b6-e3fa-7e46-95ae-634906d50cbc"],

Cell[BoxData[
 TagBox[
  TagBox[
   DynamicModuleBox[{TypeSystem`NestedGrid`PackagePrivate`$state$$ = <|
    "InitialData" -> <|
      "Cyprus" -> <|
        "2013" -> 7023.97, "2014" -> 8007.93, "2015" -> 6386.6, "2016" -> 
         5342.8, "2017" -> 5086.21, "2018" -> 4570.74, "2019" -> 4563.88, 
         "2020" -> 4002.34, "2021" -> 3745.84, "2022" -> ":"|>, 
       "Slovenia" -> <|
        "2013" -> 571.1, "2014" -> 472.03, "2015" -> 399.49, "2016" -> 339.41,
          "2017" -> 315.65, "2018" -> 305.97, "2019" -> 300.64, "2020" -> 
         238.9, "2021" -> 283.27, "2022" -> 264.19|>|>, "AllowEmbedding" -> 
     True, "InitialShape" -> TypeSystem`PackageScope`HeaderShape[<|{All, 
          TypeSystem`PackageScope`KeyDummy[1]} -> 1, {All, "2013"} -> 
        1, {All, "2014"} -> 1, {All, "2015"} -> 1, {All, "2016"} -> 
        1, {All, "2017"} -> 1, {All, "2018"} -> 1, {All, "2019"} -> 
        1, {All, "2020"} -> 1, {All, "2021"} -> 1, {All, "2022"} -> 1|>, 
       TypeSystem`PackageScope`Limited[
        TypeSystem`PackageScope`ColumnShape[
         TypeSystem`PackageScope`KeyValueShape[
          TypeSystem`PackageScope`AtomShape[89.60000000000001], 
          TypeSystem`PackageScope`Limited[
           
           TypeSystem`PackageScope`RowShape[<|
            "2013" -> TypeSystem`PackageScope`AtomShape[60], "2014" -> 
             TypeSystem`PackageScope`AtomShape[60], "2015" -> 
             TypeSystem`PackageScope`AtomShape[60], "2016" -> 
             TypeSystem`PackageScope`AtomShape[60], "2017" -> 
             TypeSystem`PackageScope`AtomShape[60], "2018" -> 
             TypeSystem`PackageScope`AtomShape[60], "2019" -> 
             TypeSystem`PackageScope`AtomShape[60], "2020" -> 
             TypeSystem`PackageScope`AtomShape[60], "2021" -> 
             TypeSystem`PackageScope`AtomShape[60], "2022" -> 
             TypeSystem`PackageScope`UnknownShape[False]|>], 
           DirectedInfinity[1], 10, {All}]]], 2, 
        DirectedInfinity[1], {}]], "InitialType" -> TypeSystem`Assoc[
       TypeSystem`Atom[String], 
       TypeSystem`Struct[{
        "2013", "2014", "2015", "2016", "2017", "2018", "2019", "2020", 
         "2021", "2022"}, {
         TypeSystem`Atom[Real], 
         TypeSystem`Atom[Real], 
         TypeSystem`Atom[Real], 
         TypeSystem`Atom[Real], 
         TypeSystem`Atom[Real], 
         TypeSystem`Atom[Real], 
         TypeSystem`Atom[Real], 
         TypeSystem`Atom[Real], 
         TypeSystem`Atom[Real], TypeSystem`AnyType}], 2], "Meta" -> <||>, 
     "RowTarget" -> 20, "ColumnTarget" -> 10, "Shape" -> 
     TypeSystem`PackageScope`HeaderShape[<|{All, 
          TypeSystem`PackageScope`KeyDummy[1]} -> 1, {All, "2013"} -> 
        1, {All, "2014"} -> 1, {All, "2015"} -> 1, {All, "2016"} -> 
        1, {All, "2017"} -> 1, {All, "2018"} -> 1, {All, "2019"} -> 
        1, {All, "2020"} -> 1, {All, "2021"} -> 1, {All, "2022"} -> 1|>, 
       TypeSystem`PackageScope`Limited[
        TypeSystem`PackageScope`ColumnShape[
         TypeSystem`PackageScope`KeyValueShape[
          TypeSystem`PackageScope`AtomShape[89.60000000000001], 
          TypeSystem`PackageScope`Limited[
           
           TypeSystem`PackageScope`RowShape[<|
            "2013" -> TypeSystem`PackageScope`AtomShape[60], "2014" -> 
             TypeSystem`PackageScope`AtomShape[60], "2015" -> 
             TypeSystem`PackageScope`AtomShape[60], "2016" -> 
             TypeSystem`PackageScope`AtomShape[60], "2017" -> 
             TypeSystem`PackageScope`AtomShape[60], "2018" -> 
             TypeSystem`PackageScope`AtomShape[60], "2019" -> 
             TypeSystem`PackageScope`AtomShape[60], "2020" -> 
             TypeSystem`PackageScope`AtomShape[60], "2021" -> 
             TypeSystem`PackageScope`AtomShape[60], "2022" -> 
             TypeSystem`PackageScope`UnknownShape[False]|>], 
           DirectedInfinity[1], 10, {All}]]], 2, 
        DirectedInfinity[1], {}]], "Type" -> TypeSystem`Assoc[
       TypeSystem`Atom[String], 
       TypeSystem`Struct[{
        "2013", "2014", "2015", "2016", "2017", "2018", "2019", "2020", 
         "2021", "2022"}, {
         TypeSystem`Atom[Real], 
         TypeSystem`Atom[Real], 
         TypeSystem`Atom[Real], 
         TypeSystem`Atom[Real], 
         TypeSystem`Atom[Real], 
         TypeSystem`Atom[Real], 
         TypeSystem`Atom[Real], 
         TypeSystem`Atom[Real], 
         TypeSystem`Atom[Real], TypeSystem`AnyType}], 2], "Path" -> {}, 
     "DisplayedRowCount" -> 2, "DisplayedColumnCount" -> 10, "DataRowCount" -> 
     2, "DataColumnCount" -> 10, "SortPaths" -> {}, "SortDirections" -> {}, 
     "HiddenItemsMap" -> Null, "UpdateType" -> 1|>, 
    TypeSystem`NestedGrid`PackagePrivate`$outputID$$, 
    TypeSystem`NestedGrid`PackagePrivate`$path$$ = {}, 
    TypeSystem`NestedGrid`PackagePrivate`$vPos$$ = 1, 
    TypeSystem`NestedGrid`PackagePrivate`$hPos$$ = 1, 
    TypeSystem`NestedGrid`PackagePrivate`$grid$$ = 
    DynamicModule[{TypeSystem`NestedGrid`PackagePrivate`renderedGrid = Deploy[
        Style[
         Grid[{{
            Item[
             Pane[
              Annotation[
               Mouseover[
                
                Graphics[{}, ImageSize -> 6, BaselinePosition -> 
                 Scaled[-0.15]], 
                Graphics[{
                  GrayLevel[0.6], 
                  
                  Polygon[{{2^Rational[-1, 2], -2^Rational[-1, 2]}, {
                    2^Rational[-1, 2], 2^
                    Rational[-1, 2]}, {-2^Rational[-1, 2], 2^
                    Rational[-1, 2]}, {-2^Rational[-1, 2], -2^
                    Rational[-1, 2]}}]}, ImageSize -> 6, BaselinePosition -> 
                 Scaled[-0.15]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                All, Keys}, "KeyDummy", True], "Mouse"], 
              ImageSize -> {{1, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["2013", 
                  Style[
                  "2013", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                   All, "2013"}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                All, "2013"}, "ColumnHeader", True], "Mouse"], 
              ImageSize -> {{1, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["2014", 
                  Style[
                  "2014", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                   All, "2014"}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                All, "2014"}, "ColumnHeader", True], "Mouse"], 
              ImageSize -> {{1, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["2015", 
                  Style[
                  "2015", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                   All, "2015"}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                All, "2015"}, "ColumnHeader", True], "Mouse"], 
              ImageSize -> {{1, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["2016", 
                  Style[
                  "2016", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                   All, "2016"}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                All, "2016"}, "ColumnHeader", True], "Mouse"], 
              ImageSize -> {{1, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["2017", 
                  Style[
                  "2017", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                   All, "2017"}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                All, "2017"}, "ColumnHeader", True], "Mouse"], 
              ImageSize -> {{1, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["2018", 
                  Style[
                  "2018", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                   All, "2018"}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                All, "2018"}, "ColumnHeader", True], "Mouse"], 
              ImageSize -> {{1, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["2019", 
                  Style[
                  "2019", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                   All, "2019"}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                All, "2019"}, "ColumnHeader", True], "Mouse"], 
              ImageSize -> {{1, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["2020", 
                  Style[
                  "2020", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                   All, "2020"}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                All, "2020"}, "ColumnHeader", True], "Mouse"], 
              ImageSize -> {{1, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["2021", 
                  Style[
                  "2021", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                   All, "2021"}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                All, "2021"}, "ColumnHeader", True], "Mouse"], 
              ImageSize -> {{1, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["2022", 
                  Style[
                  "2022", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                   All, "2022"}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                All, "2022"}, "ColumnHeader", True], "Mouse"], 
              ImageSize -> {{1, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}]}, {
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["Cyprus", 
                  Style[
                  "Cyprus", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    Key["Cyprus"]}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["Cyprus"]}, "RowHeader", False], "Mouse"], 
              ImageSize -> {{89.60000000000001, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["7023.97"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["Cyprus"], 
                 Key["2013"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["8007.93"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["Cyprus"], 
                 Key["2014"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["6386.6"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["Cyprus"], 
                 Key["2015"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["5342.8"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["Cyprus"], 
                 Key["2016"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["5086.21"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["Cyprus"], 
                 Key["2017"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["4570.74"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["Cyprus"], 
                 Key["2018"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["4563.88"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["Cyprus"], 
                 Key["2019"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["4002.34"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["Cyprus"], 
                 Key["2020"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["3745.84"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["Cyprus"], 
                 Key["2021"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[":", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["Cyprus"], 
                 Key["2022"]}, "Item", False], "Mouse"], 
              ImageSize -> {{11.200000000000001`, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["Slovenia", 
                  Style[
                  "Slovenia", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    Key["Slovenia"]}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["Slovenia"]}, "RowHeader", False], "Mouse"], 
              ImageSize -> {{89.60000000000001, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["571.1"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["Slovenia"], 
                 Key["2013"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["472.03"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["Slovenia"], 
                 Key["2014"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["399.49"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["Slovenia"], 
                 Key["2015"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["339.41"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["Slovenia"], 
                 Key["2016"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["315.65"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["Slovenia"], 
                 Key["2017"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["305.97"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["Slovenia"], 
                 Key["2018"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["300.64"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["Slovenia"], 
                 Key["2019"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["238.9"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["Slovenia"], 
                 Key["2020"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["283.27"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["Slovenia"], 
                 Key["2021"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["264.19"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["Slovenia"], 
                 Key["2022"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}}, 
          BaseStyle -> {
           ContextMenu -> 
            Dynamic[TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger; 
              Which[TypeSystem`NestedGrid`PackagePrivate`$lastOutputID =!= 
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                 TypeSystem`NestedGrid`PackagePrivate`$outputID$$], {}, 
                TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger === 
                TypeSystem`NestedGrid`PackagePrivate`$lastContextMenuTrigger, 
                TypeSystem`NestedGrid`PackagePrivate`$lastContextMenu, True, 
                TypeSystem`NestedGrid`PackagePrivate`$lastContextMenuTrigger = 
                 TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger; 
                TypeSystem`NestedGrid`PackagePrivate`$lastContextMenu = 
                 Block[{TypeSystem`NestedGrid`PackagePrivate`$globalScrollPos = \
{TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$}}, 
                   
                   With[{TypeSystem`NestedGrid`PackagePrivate`lastPath$ = 
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ = 
                    TypeSystem`NestedGrid`PackagePrivate`$lastPathType, 
                    TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$ = 
                    TypeSystem`NestedGrid`PackagePrivate`$\
lastPathIsLeafHeader, TypeSystem`NestedGrid`PackagePrivate`headerHidden$ = And[
                    MatchQ[TypeSystem`NestedGrid`PackagePrivate`$lastPathType, 
                    Alternatives["RowHeader", "ColumnHeader"]], 
                    TypeSystem`NestedGrid`PackagePrivate`headerHiddenQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$]], 
                    TypeSystem`NestedGrid`PackagePrivate`allHidden$ = 
                    TypeSystem`NestedGrid`PackagePrivate`allHiddenQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`anyHidden$ = 
                    TypeSystem`NestedGrid`PackagePrivate`anyHiddenQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`sortDirection$ = 
                    TypeSystem`NestedGrid`PackagePrivate`columnSortDirection[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$[
                    "SortPaths"], 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$[
                    "SortDirections"]], 
                    TypeSystem`NestedGrid`PackagePrivate`haveData$ = Not[
                    FailureQ[
                    TypeSystem`NestedGrid`PackagePrivate`datasetInitialData[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$]]], 
                    TypeSystem`NestedGrid`PackagePrivate`isKeyDummy$ = Not[
                    FreeQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, Keys]]}, 
                    Join[{
                    If[
                    Or[
                    Not[TypeSystem`NestedGrid`PackagePrivate`haveData$], 
                    Not[TypeSystem`NestedGrid`PackagePrivate`anyHidden$], 
                    TypeSystem`NestedGrid`PackagePrivate`isKeyDummy$], 
                    Nothing, 
                    MenuItem[
                    "Show " <> 
                    Which[TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "Item", "", 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "RowHeader", "Row", 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "ColumnHeader", "Column", True, ""], 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateHiddenItems[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, 
                    "remove"]], MenuEvaluator -> Automatic]], 
                    If[
                    Or[
                    Not[TypeSystem`NestedGrid`PackagePrivate`haveData$], 
                    TypeSystem`NestedGrid`PackagePrivate`pathEmptyQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`isKeyDummy$, 
                    And[
                    TypeSystem`NestedGrid`PackagePrivate`allHidden$, 
                    TypeSystem`NestedGrid`PackagePrivate`headerHidden$]], 
                    Nothing, 
                    MenuItem[
                    "Hide " <> 
                    Which[TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "Item", "", 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "RowHeader", "Row", 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "ColumnHeader", "Column", True, ""], 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateHiddenItems[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, "add"]], 
                    MenuEvaluator -> Automatic]], Delimiter}, 
                    If[
                    And[TypeSystem`NestedGrid`PackagePrivate`haveData$, 
                    MatchQ[TypeSystem`NestedGrid`PackagePrivate`lastPathType$, 
                    Alternatives["ColumnHeader", "KeyDummy"]], 
                    TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$, 
                    Not[TypeSystem`NestedGrid`PackagePrivate`allHidden$]], {
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`sortDirection$ =!= 
                    "Ascending", 
                    MenuItem["Sort", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateSort[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, 
                    "Ascending"]], MenuEvaluator -> Automatic], Nothing], 
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`sortDirection$ =!= 
                    "Descending", 
                    MenuItem["Reverse Sort", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateSort[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, 
                    "Descending"]], MenuEvaluator -> Automatic], Nothing], 
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`sortDirection$ =!= 
                    None, 
                    MenuItem["Unsort", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateSort[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, None]], 
                    MenuEvaluator -> Automatic], Nothing], Delimiter}, {}], {
                    MenuItem["Copy Position to Clipboard", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentPosition[
                    TypeSystem`NestedGrid`PackagePrivate`copyClip]], 
                    MenuEvaluator -> Automatic], 
                    If[TypeSystem`NestedGrid`PackagePrivate`haveData$, 
                    MenuItem["Copy Data to Clipboard", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentData[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`copyClip]], 
                    MenuEvaluator -> Automatic], Nothing], Delimiter, 
                    MenuItem["Paste Position in New Cell", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentPosition[
                    TypeSystem`NestedGrid`PackagePrivate`cellPaste]], 
                    MenuEvaluator -> Automatic], 
                    If[TypeSystem`NestedGrid`PackagePrivate`haveData$, 
                    MenuItem["Paste Data in New Cell", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentData[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`cellPaste]], 
                    MenuEvaluator -> Automatic], Nothing]}]]]]], FontFamily -> 
            "Source Sans Pro", FontSize -> 14, FontWeight -> Plain}, Dividers -> 
          All, FrameStyle -> GrayLevel[0.7490196078431373], 
          Spacings -> {0, 0}, Alignment -> Left, 
          BaseStyle -> {
           FontFamily -> "Source Sans Pro", FontSize -> 14, FontWeight -> 
            Plain}], LineBreakWithin -> False, ContextMenu -> {}, NumberMarks -> 
         False, ShowAutoStyles -> False]], 
      TypeSystem`NestedGrid`PackagePrivate`initialQ = True}, 
     Dynamic[
      TypeSystem`NestedGrid`PackagePrivate`setupViewPath[
      TypeSystem`NestedGrid`PackagePrivate`$path$$, If[
         Not[TypeSystem`NestedGrid`PackagePrivate`initialQ], 
         Module[{
          TypeSystem`NestedGrid`PackagePrivate`tmpGrid$ = $Failed, 
           TypeSystem`NestedGrid`PackagePrivate`tmpData$ = 
           TypeSystem`NestedGrid`PackagePrivate`datasetData[
            TypeSystem`NestedGrid`PackagePrivate`$state$$]}, 
          TypeSystem`NestedGrid`PackagePrivate`tmpGrid$ = If[
             FailureQ[TypeSystem`NestedGrid`PackagePrivate`tmpData$], 
             TypeSystem`NestedGrid`PackagePrivate`renderedGrid, 
             TypeSystem`NestedGrid`PackagePrivate`renderGrid[
             TypeSystem`NestedGrid`PackagePrivate`$state$$, 
              TypeSystem`NestedGrid`PackagePrivate`$path$$, 
              TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
              TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
              TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
              TypeSystem`NestedGrid`PackagePrivate`localHold[
              TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
             TypeSystem`NestedGrid`PackagePrivate`tmpData$]]; If[
            Not[
             FailureQ[TypeSystem`NestedGrid`PackagePrivate`tmpGrid$]], 
            TypeSystem`NestedGrid`PackagePrivate`renderedGrid = 
            TypeSystem`NestedGrid`PackagePrivate`tmpGrid$]; Null]]; 
       TypeSystem`NestedGrid`PackagePrivate`initialQ = False; 
       TypeSystem`NestedGrid`PackagePrivate`$vPos$$; 
       TypeSystem`NestedGrid`PackagePrivate`$hPos$$; If[
         FailureQ[TypeSystem`NestedGrid`PackagePrivate`renderedGrid], 
         TypeSystem`SparseGrid[
          TypeSystem`H["(data no longer present)"]], 
         TypeSystem`NestedGrid`PackagePrivate`renderedGrid]], 
      TrackedSymbols :> {
       TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
        TypeSystem`NestedGrid`PackagePrivate`$hPos$$}], 
     DynamicModuleValues :> {}], 
    TypeSystem`NestedGrid`PackagePrivate`$topBar$$ = Dynamic[
     TypeSystem`NestedGrid`PackagePrivate`makeFramedBar[
      TypeSystem`PackageScope`SubViewPathbar[
      TypeSystem`NestedGrid`PackagePrivate`$path$$, 
       TypeSystem`NestedGrid`PackagePrivate`updateState[
       TypeSystem`NestedGrid`PackagePrivate`$state$$, 
        TypeSystem`NestedGrid`PackagePrivate`$path$$, 
        TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
        TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
        TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
        TypeSystem`NestedGrid`PackagePrivate`localHold[
        TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]]], 
     TrackedSymbols :> {TypeSystem`NestedGrid`PackagePrivate`$path$$}], 
    TypeSystem`NestedGrid`PackagePrivate`$bottomBar$$ = Style[
     Framed[
      Dynamic[
       Replace[
       TypeSystem`NestedGrid`PackagePrivate`mouseAnnotation$$, {
        TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
           TypeSystem`NestedGrid`PackagePrivate`localHold[
           TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][Null, 
           Blank[]] -> "", TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
           TypeSystem`NestedGrid`PackagePrivate`localHold[
           TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
           Pattern[TypeSystem`NestedGrid`PackagePrivate`path$, 
            Blank[]], 
           Pattern[TypeSystem`NestedGrid`PackagePrivate`pathType$, 
            Blank[]], 
           Pattern[TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$, 
            Blank[]]] :> (
          Increment[TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger]; 
          TypeSystem`NestedGrid`PackagePrivate`$lastPath = 
           TypeSystem`NestedGrid`PackagePrivate`path$; 
          TypeSystem`NestedGrid`PackagePrivate`$lastPathType = 
           TypeSystem`NestedGrid`PackagePrivate`pathType$; 
          TypeSystem`NestedGrid`PackagePrivate`$lastPathIsLeafHeader = 
           TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$; 
          TypeSystem`NestedGrid`PackagePrivate`$lastOutputID = 
           TypeSystem`NestedGrid`PackagePrivate`localHold[
            TypeSystem`NestedGrid`PackagePrivate`$outputID$$]; 
          TypeSystem`NestedGrid`PackagePrivate`makePathTrail[
           TypeSystem`NestedGrid`PackagePrivate`path$, 
            TypeSystem`NestedGrid`PackagePrivate`makePathElements]), Null :> 
         Spacer[10], Blank[] :> Spacer[10]}], 
       TrackedSymbols :> {
        TypeSystem`NestedGrid`PackagePrivate`mouseAnnotation$$}], FrameStyle -> 
      None, ImageMargins -> 0, FrameMargins -> 0, Alignment -> Top, 
      ImageSize -> {Automatic, 15}], FontSize -> 1], 
    TypeSystem`NestedGrid`PackagePrivate`mouseAnnotation$$ = Null}, 
    DynamicWrapperBox[
     DynamicBox[ToBoxes[
       Dataset`DatasetContent[
       2, "Path" -> Hold[TypeSystem`NestedGrid`PackagePrivate`$path$$], 
        "Grid" -> Hold[TypeSystem`NestedGrid`PackagePrivate`$grid$$], "State" -> 
        Hold[TypeSystem`NestedGrid`PackagePrivate`$state$$], "VPos" -> 
        Hold[TypeSystem`NestedGrid`PackagePrivate`$vPos$$], "HPos" -> 
        Hold[TypeSystem`NestedGrid`PackagePrivate`$hPos$$], "TopBar" -> 
        Hold[TypeSystem`NestedGrid`PackagePrivate`$topBar$$], "BottomBar" -> 
        Hold[TypeSystem`NestedGrid`PackagePrivate`$bottomBar$$], "OutputID" -> 
        Hold[
          TypeSystem`NestedGrid`PackagePrivate`localHold[
          TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]], StandardForm],
      ImageSizeCache->{787.5, {52.74743637626525, 59.05256362373475}},
      TrackedSymbols:>{
       TypeSystem`NestedGrid`PackagePrivate`$state$$, 
        TypeSystem`NestedGrid`PackagePrivate`$grid$$}], 
     TypeSystem`NestedGrid`PackagePrivate`mouseAnnotation$$ = 
     MouseAnnotation[],
     ImageSizeCache->{787.5, {52.74743637626525, 59.05256362373475}}],
    BaseStyle->{LineBreakWithin -> False},
    DynamicModuleValues:>{},
    Initialization:>(TypeSystem`NestedGrid`PackagePrivate`$outputID$$ = 
     CreateUUID[]),
    UnsavedVariables:>{TypeSystem`NestedGrid`PackagePrivate`$outputID$$}],
   Deploy,
   DefaultBaseStyle->"Deploy"],
  Dataset`InterpretDataset[1],
  Editable->False,
  SelectWithContents->True,
  Selectable->False]], "Output",
 CellChangeTimes->{3.9337335173628902`*^9, 3.933737927157788*^9, 
  3.9337388094850807`*^9, 3.933800575021541*^9, 3.93380138416815*^9, 
  3.9338198633773975`*^9, 3.933903899483265*^9},
 CellLabel->"Out[24]=",ExpressionUUID->"7385eaf5-2816-1643-8339-238fd324557c"]
}, Open  ]],

Cell["\<\
Iz tabele podatkov in grafa je razvidno, da so podatki nekaterih \
dr\[ZHacek]av nepopolni ali pa podatkov ne bele\[ZHacek]ijo. Prav tako je dr\
\[ZHacek]av preve\[CHacek], da bi jih obravnaval podrobneje. Zato sem se odlo\
\[CHacek]il, da bom primerjal le nekatere dr\[ZHacek]ave iz razli\[CHacek]nih \
koncev EU.\
\>", "Text",
 CellChangeTimes->{{3.933910842161381*^9, 
  3.9339108578256493`*^9}},ExpressionUUID->"8319995e-3a5b-4c4a-9d6d-\
168b5642aa5b"]
}, Open  ]],

Cell[CellGroupData[{

Cell["Primerjava \[SHacek]tevila obsojenih med izbranimi dr\[ZHacek]avami.", \
"Subtitle",
 CellChangeTimes->{{3.930185039537737*^9, 3.93018505274099*^9}, {
   3.930185114238104*^9, 3.9301851171983566`*^9}, {3.933561687881439*^9, 
   3.933561708048643*^9}, {3.933640663050586*^9, 3.933640668527851*^9}, 
   3.933648649302044*^9},ExpressionUUID->"0f03558e-1cb7-9a4e-97e3-\
4371c2533db2"],

Cell["\<\
V nadalnjem bom malo bolj podrobno obravnaval Slovenijo, \
\[CapitalSHacek]vedsko, Portugalsko, Latvijo, ter Tur\[CHacek]ijo.\
\>", "Text",
 CellChangeTimes->{{3.930185063322481*^9, 3.930185108368559*^9}, {
  3.933640917344679*^9, 3.933640929546932*^9}, {3.9336480554149837`*^9, 
  3.9336480605126243`*^9}, {3.9336486787455616`*^9, 
  3.9336487055441246`*^9}},ExpressionUUID->"e675154a-620d-db4b-9761-\
85b90dd0a19e"],

Cell[BoxData[
 RowBox[{
  RowBox[{"Drzave", " ", "=", " ", 
   RowBox[{"{", 
    RowBox[{
    "\"\<Slovenia\>\"", ",", "\"\<Latvia\>\"", ",", " ", 
     "\"\<T\[UDoubleDot]rkiye\>\"", ",", "\"\<Sweden\>\"", ",", " ", 
     "\"\<Portugal\>\""}], "}"}]}], ";"}]], "Input",
 CellChangeTimes->{{3.93365085513735*^9, 3.933650880738533*^9}, 
   3.93372171507676*^9},
 CellLabel->"In[26]:=",ExpressionUUID->"f7c49d1b-f632-9b4d-9c6d-cd24daf8c72c"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"NarisiGraf", "[", 
    RowBox[{"dataset_", ",", "sezNizov_", ",", "velikost_"}], "]"}], ":=", 
   "\[IndentingNewLine]", 
   RowBox[{"DateListPlot", "[", 
    RowBox[{
     RowBox[{"Table", "[", 
      RowBox[{
       RowBox[{"Legended", "[", 
        RowBox[{
         RowBox[{"dataset", "[", 
          RowBox[{"[", 
           RowBox[{"sezNizov", "[", 
            RowBox[{"[", "i", "]"}], "]"}], "]"}], "]"}], ",", 
         RowBox[{"sezNizov", "[", 
          RowBox[{"[", "i", "]"}], "]"}]}], "]"}], ",", 
       RowBox[{"{", 
        RowBox[{"i", ",", 
         RowBox[{"Length", "[", "sezNizov", "]"}]}], "}"}]}], "]"}], ",", 
     "\[IndentingNewLine]", 
     RowBox[{"FrameLabel", "->", 
      RowBox[{"{", 
       RowBox[{
       "\"\<Leto\>\"", ",", 
        "\"\<stevilo obsojenih na 100 000 prebivalcev\>\""}], "}"}]}], ",", 
     "\[IndentingNewLine]", 
     RowBox[{"GridLines", "->", "Automatic"}], ",", 
     RowBox[{"PlotMarkers", "->", "Automatic"}], ",", "\[IndentingNewLine]", 
     RowBox[{"PlotRange", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{"Automatic", ",", 
        RowBox[{"{", 
         RowBox[{"0", ",", "velikost"}], "}"}]}], "}"}]}]}], "]"}]}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{"NarisiGraf", "[", 
  RowBox[{"vsiObsojeni", ",", "Drzave", ",", "1000"}], "]"}]}], "Input",
 CellChangeTimes->{{3.933648820397341*^9, 3.933648827793295*^9}, {
  3.933650871408651*^9, 3.933650872800205*^9}, {3.9337253716398087`*^9, 
  3.933725382333353*^9}, {3.9337254215566463`*^9, 3.933725478962616*^9}},
 CellLabel->"In[27]:=",ExpressionUUID->"776ae8fc-497d-304e-80f7-25e3f52db02e"],

Cell[BoxData[
 TemplateBox[{
   GraphicsBox[{{}, {{{}, {}, 
       TagBox[
        TagBox[{
          Hue[0.67, 0.6, 0.6], 
          Directive[
           PointSize[0.011000000000000001`], 
           RGBColor[0.368417, 0.506779, 0.709798], 
           AbsoluteThickness[2]], 
          
          LineBox[{{3.5659872*^9, 571.1}, {3.5975232*^9, 472.03}, {
           3.6290592*^9, 399.49}, {3.6605952*^9, 339.41}, {3.6922176*^9, 
           315.65}, {3.7237536*^9, 305.97}, {3.7552896*^9, 300.64}, {
           3.7868256*^9, 238.9}, {3.818448*^9, 283.27}, {3.849984*^9, 
           264.19}}]}, 
         Annotation[#, {{Legended}, Charting`Private`Tag, {1}}]& ], 
        Annotation[#, "Charting`Private`Tag#1"]& ], 
       TagBox[
        TagBox[{
          Hue[0.9060679774997897, 0.6, 0.6], 
          Directive[
           PointSize[0.011000000000000001`], 
           RGBColor[0.880722, 0.611041, 0.142051], 
           AbsoluteThickness[2]], 
          
          LineBox[{{3.5659872*^9, 426.22}, {3.5975232*^9, 460.31}, {
           3.6290592*^9, 481.25}, {3.6605952*^9, 453.49}, {3.6922176*^9, 
           474.95}, {3.7237536*^9, 443.92}, {3.7552896*^9, 421.83}, {
           3.7868256*^9, 371.81}, {3.818448*^9, 361.76}, {3.849984*^9, 
           263.95}}]}, 
         Annotation[#, {{Legended}, Charting`Private`Tag, {2}}]& ], 
        Annotation[#, "Charting`Private`Tag#2"]& ], 
       TagBox[
        TagBox[{
          Hue[0.1421359549995791, 0.6, 0.6], 
          Directive[
           PointSize[0.011000000000000001`], 
           RGBColor[0.560181, 0.691569, 0.194885], 
           AbsoluteThickness[2]], 
          
          LineBox[{{3.5659872*^9, 661.94}, {3.5975232*^9, 642.86}, {
           3.6290592*^9, 670.84}, {3.6605952*^9, 583.17}, {3.6922176*^9, 
           558.09}, {3.7237536*^9, 687.25}, {3.7552896*^9, 722.4}, {
           3.7868256*^9, 592.05}, {3.818448*^9, 827.95}, {3.849984*^9, 
           805.83}}]}, 
         Annotation[#, {{Legended}, Charting`Private`Tag, {3}}]& ], 
        Annotation[#, "Charting`Private`Tag#3"]& ], 
       TagBox[
        TagBox[{
          Hue[0.37820393249936934`, 0.6, 0.6], 
          Directive[
           PointSize[0.011000000000000001`], 
           RGBColor[0.922526, 0.385626, 0.209179], 
           AbsoluteThickness[2]], 
          
          LineBox[{{3.5659872*^9, 673.84}, {3.5975232*^9, 628.96}, {
           3.6290592*^9, 608.82}, {3.6605952*^9, 575.16}, {3.6922176*^9, 
           574.}, {3.7237536*^9, 598.45}, {3.7552896*^9, 612.97}, {
           3.7868256*^9, 668.07}, {3.818448*^9, 718.56}, {3.849984*^9, 
           733.2}}]}, 
         Annotation[#, {{Legended}, Charting`Private`Tag, {4}}]& ], 
        Annotation[#, "Charting`Private`Tag#4"]& ], 
       TagBox[
        TagBox[{
          Hue[0.6142719099991583, 0.6, 0.6], 
          Directive[
           PointSize[0.011000000000000001`], 
           RGBColor[0.528488, 0.470624, 0.701351], 
           AbsoluteThickness[2]], 
          
          LineBox[{{3.5659872*^9, 678.64}, {3.5975232*^9, 506.95}, {
           3.6290592*^9, 569.9}, {3.6605952*^9, 546.01}, {3.6922176*^9, 
           504.08}, {3.7237536*^9, 453.68}, {3.7552896*^9, 440.92}, {
           3.7868256*^9, 341.72}, {3.818448*^9, 414.4}, {3.849984*^9, 
           441.98}}]}, 
         Annotation[#, {{Legended}, Charting`Private`Tag, {5}}]& ], 
        Annotation[#, "Charting`Private`Tag#5"]& ]}, {
       TagBox[
        TagBox[{
          Directive[
           PointSize[0.011000000000000001`], 
           RGBColor[0.368417, 0.506779, 0.709798], 
           AbsoluteThickness[2]], 
          GeometricTransformationBox[
           InsetBox[
            BoxData[
             FormBox[
              StyleBox[
               GraphicsBox[{
                 EdgeForm[], 
                 DiskBox[{0, 0}]}, PlotRangePadding -> Scaled[0.15]], 
               GraphicsBoxOptions -> {DefaultBaseStyle -> Directive[
                   PointSize[0.011000000000000001`], 
                   RGBColor[0.368417, 0.506779, 0.709798], 
                   AbsoluteThickness[2]]}, StripOnInput -> False], 
              TraditionalForm]], {0., 0.}, Automatic, 
            Offset[10.976]], {{{3.5659872*^9, 571.1}}, {{3.5975232*^9, 
           472.03}}, {{3.6290592*^9, 399.49}}, {{3.6605952*^9, 339.41}}, {{
           3.6922176*^9, 315.65}}, {{3.7237536*^9, 305.97}}, {{3.7552896*^9, 
           300.64}}, {{3.7868256*^9, 238.9}}, {{3.818448*^9, 283.27}}, {{
           3.849984*^9, 264.19}}}]}, 
         Annotation[#, {{Legended}, Charting`Private`Tag, {1}}]& ], 
        Annotation[#, "Charting`Private`Tag#1"]& ], 
       TagBox[
        TagBox[{
          Directive[
           PointSize[0.011000000000000001`], 
           RGBColor[0.880722, 0.611041, 0.142051], 
           AbsoluteThickness[2]], 
          GeometricTransformationBox[
           InsetBox[
            BoxData[
             FormBox[
              StyleBox[
               GraphicsBox[{
                 EdgeForm[], 
                 PolygonBox[{{-1, -1}, {1, -1}, {1, 1}, {-1, 1}}]}, 
                PlotRangePadding -> Scaled[0.15]], 
               GraphicsBoxOptions -> {DefaultBaseStyle -> Directive[
                   PointSize[0.011000000000000001`], 
                   RGBColor[0.880722, 0.611041, 0.142051], 
                   AbsoluteThickness[2]]}, StripOnInput -> False], 
              TraditionalForm]], {0., 0.}, Automatic, 
            Offset[10.5]], {{{3.5659872*^9, 426.22}}, {{3.5975232*^9, 
           460.31}}, {{3.6290592*^9, 481.25}}, {{3.6605952*^9, 453.49}}, {{
           3.6922176*^9, 474.95}}, {{3.7237536*^9, 443.92}}, {{3.7552896*^9, 
           421.83}}, {{3.7868256*^9, 371.81}}, {{3.818448*^9, 361.76}}, {{
           3.849984*^9, 263.95}}}]}, 
         Annotation[#, {{Legended}, Charting`Private`Tag, {2}}]& ], 
        Annotation[#, "Charting`Private`Tag#2"]& ], 
       TagBox[
        TagBox[{
          Directive[
           PointSize[0.011000000000000001`], 
           RGBColor[0.560181, 0.691569, 0.194885], 
           AbsoluteThickness[2]], 
          GeometricTransformationBox[
           InsetBox[
            BoxData[
             FormBox[
              StyleBox[
               GraphicsBox[{
                 EdgeForm[], 
                 PolygonBox[{{0, 1}, {1, 0}, {0, -1}, {-1, 0}}]}], 
               GraphicsBoxOptions -> {DefaultBaseStyle -> Directive[
                   PointSize[0.011000000000000001`], 
                   RGBColor[0.560181, 0.691569, 0.194885], 
                   AbsoluteThickness[2]]}, StripOnInput -> False], 
              TraditionalForm]], {0., 0.}, Automatic, 
            Offset[10.2]], {{{3.5659872*^9, 661.94}}, {{3.5975232*^9, 
           642.86}}, {{3.6290592*^9, 670.84}}, {{3.6605952*^9, 583.17}}, {{
           3.6922176*^9, 558.09}}, {{3.7237536*^9, 687.25}}, {{3.7552896*^9, 
           722.4}}, {{3.7868256*^9, 592.05}}, {{3.818448*^9, 827.95}}, {{
           3.849984*^9, 805.83}}}]}, 
         Annotation[#, {{Legended}, Charting`Private`Tag, {3}}]& ], 
        Annotation[#, "Charting`Private`Tag#3"]& ], 
       TagBox[
        TagBox[{
          Directive[
           PointSize[0.011000000000000001`], 
           RGBColor[0.922526, 0.385626, 0.209179], 
           AbsoluteThickness[2]], 
          GeometricTransformationBox[
           InsetBox[
            BoxData[
             FormBox[
              StyleBox[
               GraphicsBox[{
                 EdgeForm[], 
                 PolygonBox[
                  
                  NCache[{{0, 1}, {-1, 1 - 3^Rational[1, 2]}, {
                    1, 1 - 3^Rational[1, 2]}}, {{0, 
                    1}, {-1, -0.7320508075688772}, {
                    1, -0.7320508075688772}}]]}], 
               GraphicsBoxOptions -> {DefaultBaseStyle -> Directive[
                   PointSize[0.011000000000000001`], 
                   RGBColor[0.922526, 0.385626, 0.209179], 
                   AbsoluteThickness[2]]}, StripOnInput -> False], 
              TraditionalForm]], {0., 0.}, Automatic, 
            Offset[11.4]], {{{3.5659872*^9, 673.84}}, {{3.5975232*^9, 
           628.96}}, {{3.6290592*^9, 608.82}}, {{3.6605952*^9, 575.16}}, {{
           3.6922176*^9, 574.}}, {{3.7237536*^9, 598.45}}, {{3.7552896*^9, 
           612.97}}, {{3.7868256*^9, 668.07}}, {{3.818448*^9, 718.56}}, {{
           3.849984*^9, 733.2}}}]}, 
         Annotation[#, {{Legended}, Charting`Private`Tag, {4}}]& ], 
        Annotation[#, "Charting`Private`Tag#4"]& ], 
       TagBox[
        TagBox[{
          Directive[
           PointSize[0.011000000000000001`], 
           RGBColor[0.528488, 0.470624, 0.701351], 
           AbsoluteThickness[2]], 
          GeometricTransformationBox[
           InsetBox[
            BoxData[
             FormBox[
              StyleBox[
               GraphicsBox[{
                 EdgeForm[], 
                 PolygonBox[
                  
                  NCache[{{0, -1}, {-1, -1 + 3^Rational[1, 2]}, {
                    1, -1 + 3^Rational[1, 2]}}, {{
                    0, -1}, {-1, 0.7320508075688772}, {
                    1, 0.7320508075688772}}]]}], 
               GraphicsBoxOptions -> {DefaultBaseStyle -> Directive[
                   PointSize[0.011000000000000001`], 
                   RGBColor[0.528488, 0.470624, 0.701351], 
                   AbsoluteThickness[2]]}, StripOnInput -> False], 
              TraditionalForm]], {0., 0.}, Automatic, 
            Offset[11.52]], {{{3.5659872*^9, 678.64}}, {{3.5975232*^9, 
           506.95}}, {{3.6290592*^9, 569.9}}, {{3.6605952*^9, 546.01}}, {{
           3.6922176*^9, 504.08}}, {{3.7237536*^9, 453.68}}, {{3.7552896*^9, 
           440.92}}, {{3.7868256*^9, 341.72}}, {{3.818448*^9, 414.4}}, {{
           3.849984*^9, 441.98}}}]}, 
         Annotation[#, {{Legended}, Charting`Private`Tag, {5}}]& ], 
        Annotation[#, "Charting`Private`Tag#5"]& ]}}, {{}, {}}}, {
    DisplayFunction -> Identity, DisplayFunction -> Identity, DisplayFunction -> 
     Identity, DisplayFunction -> Identity, AspectRatio -> 
     NCache[GoldenRatio^(-1), 0.6180339887498948], Axes -> {False, False}, 
     AxesLabel -> {None, None}, AxesOrigin -> {3.5659872*^9, 0}, 
     DisplayFunction :> Identity, Frame -> {{True, True}, {True, True}}, 
     FrameLabel -> {{
        FormBox[
         TagBox["\"stevilo obsojenih na 100 000 prebivalcev\"", HoldForm], 
         TraditionalForm], None}, {
        FormBox[
         TagBox["\"Leto\"", HoldForm], TraditionalForm], None}}, 
     FrameTicks -> {{Automatic, Automatic}, {
        Charting`DateTicksFunction[Automatic, DateTicksFormat -> {Automatic}], 
        Charting`DateTicksFunction[
        Automatic, DateTicksFormat -> {Automatic}, "TickLabels" -> None]}}, 
     GridLines -> {Charting`ScaledTickValues[
        ((Transpose[{#, 
          Table[
           Directive[
            GrayLevel[0.5, 0.4]], {
            Length[#]}]}]& )[
         Part[
          Select[
           Charting`DateTicksFunction[
           Automatic, DateTicksFormat -> {Automatic}][
            SlotSequence[1]], And[
            FreeQ[#, 
             Alternatives["", 
              Spacer[{0, 0}]]], Head[#] === List, Length[#] > 0]& ], All, 
          1]]& )[
         SlotSequence[1]], {Identity, Identity}]& , Automatic}, 
     GridLinesStyle -> Directive[
       GrayLevel[0.5, 0.4]], 
     Method -> {
      "NoShowPlotTheme" -> Automatic, "AxisPadding" -> Scaled[0.02], 
       "DefaultBoundaryStyle" -> Automatic, 
       "DefaultGraphicsInteraction" -> {
        "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
         "Effects" -> {
          "Highlight" -> {"ratio" -> 2}, "HighlightPoint" -> {"ratio" -> 2}, 
           "Droplines" -> {
            "freeformCursorMode" -> True, 
             "placement" -> {"x" -> "All", "y" -> "None"}}}}, 
       "DefaultMeshStyle" -> AbsolutePointSize[6], "DefaultPlotStyle" -> {
         Directive[
          RGBColor[0.368417, 0.506779, 0.709798], 
          AbsoluteThickness[2]], 
         Directive[
          RGBColor[0.880722, 0.611041, 0.142051], 
          AbsoluteThickness[2]], 
         Directive[
          RGBColor[0.560181, 0.691569, 0.194885], 
          AbsoluteThickness[2]], 
         Directive[
          RGBColor[0.922526, 0.385626, 0.209179], 
          AbsoluteThickness[2]], 
         Directive[
          RGBColor[0.528488, 0.470624, 0.701351], 
          AbsoluteThickness[2]], 
         Directive[
          RGBColor[0.772079, 0.431554, 0.102387], 
          AbsoluteThickness[2]], 
         Directive[
          RGBColor[0.363898, 0.618501, 0.782349], 
          AbsoluteThickness[2]], 
         Directive[
          RGBColor[1, 0.75, 0], 
          AbsoluteThickness[2]], 
         Directive[
          RGBColor[0.647624, 0.37816, 0.614037], 
          AbsoluteThickness[2]], 
         Directive[
          RGBColor[0.571589, 0.586483, 0.], 
          AbsoluteThickness[2]], 
         Directive[
          RGBColor[0.915, 0.3325, 0.2125], 
          AbsoluteThickness[2]], 
         Directive[
          RGBColor[0.40082222609352647`, 0.5220066643438841, 0.85], 
          AbsoluteThickness[2]], 
         Directive[
          RGBColor[
          0.9728288904374106, 0.621644452187053, 0.07336199581899142], 
          AbsoluteThickness[2]], 
         Directive[
          RGBColor[0.736782672705901, 0.358, 0.5030266573755369], 
          AbsoluteThickness[2]], 
         Directive[
          RGBColor[0.28026441037696703`, 0.715, 0.4292089322474965], 
          AbsoluteThickness[2]]}, "DomainPadding" -> Scaled[0.02], 
       "PointSizeFunction" -> "SmallPointSize", "RangePadding" -> 
       Scaled[0.05], "AllowMicroRanges" -> {True, False}, 
       "OptimizePlotMarkers" -> True, "IncludeHighlighting" -> "CurrentSet", 
       "HighlightStyle" -> Automatic, "OptimizePlotMarkers" -> True, 
       "CoordinatesToolOptions" -> {"DisplayFunction" -> (({
           DateString[
            Part[#, 1], "DateShort"], 
           Part[#, 2]}& )[{
            Identity[
             Part[#, 1]], 
            Identity[
             Part[#, 2]]}]& ), "CopiedValueFunction" -> (({
           DateString[
            Part[#, 1], "DateShort"], 
           Part[#, 2]}& )[{
            Identity[
             Part[#, 1]], 
            Identity[
             Part[#, 2]]}]& )}}, 
     PlotRange -> {{3.5659872*^9, 3.849984*^9}, {0., 1000.}}, 
     PlotRangeClipping -> True, PlotRangePadding -> {{
        Scaled[0.02], 
        Scaled[0.02]}, {0, 0}}, Ticks -> {{}, Automatic}}], 
   FormBox[
    FormBox[
     TemplateBox[{
      "\"Slovenia\"", "\"Latvia\"", "\"T\[UDoubleDot]rkiye\"", "\"Sweden\"", 
       "\"Portugal\"", "None", "None", "None", "None", "None"}, "LineLegend", 
      DisplayFunction -> (FormBox[
        StyleBox[
         StyleBox[
          PaneBox[
           TagBox[
            GridBox[{{
               TagBox[
                GridBox[{{
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[2]], {
                    LineBox[{{0, 12.5}, {20, 12.5}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[2]], {
                    InsetBox[
                    GraphicsBox[{
                    EdgeForm[], 
                    DiskBox[{0, 0}]}, {DefaultBaseStyle -> {"Graphics", {
                    AbsolutePointSize[6]}, 
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[2]]}, PlotRangePadding -> 
                    Scaled[0.15]}], 
                    NCache[
                    Scaled[{
                    Rational[1, 2], 
                    Rational[1, 2]}], 
                    Scaled[{0.5, 0.5}]], Automatic, 
                    Scaled[1]]}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 12.5}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.18000000000000002`] -> 
                    Baseline)], #}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[2]], {
                    LineBox[{{0, 12.5}, {20, 12.5}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[2]], {
                    InsetBox[
                    GraphicsBox[{
                    EdgeForm[], 
                    PolygonBox[{{-1, -1}, {1, -1}, {1, 1}, {-1, 1}}]}, {
                    DefaultBaseStyle -> {"Graphics", {
                    AbsolutePointSize[6]}, 
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[2]]}, PlotRangePadding -> 
                    Scaled[0.15]}], 
                    NCache[
                    Scaled[{
                    Rational[1, 2], 
                    Rational[1, 2]}], 
                    Scaled[{0.5, 0.5}]], Automatic, 
                    Scaled[1]]}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 12.5}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.18000000000000002`] -> 
                    Baseline)], #2}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    AbsoluteThickness[2]], {
                    LineBox[{{0, 12.5}, {20, 12.5}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    AbsoluteThickness[2]], {
                    InsetBox[
                    GraphicsBox[{
                    EdgeForm[], 
                    PolygonBox[{{0, 1}, {1, 0}, {0, -1}, {-1, 0}}]}, {
                    DefaultBaseStyle -> {"Graphics", {
                    AbsolutePointSize[6]}, 
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    AbsoluteThickness[2]]}}], 
                    NCache[
                    Scaled[{
                    Rational[1, 2], 
                    Rational[1, 2]}], 
                    Scaled[{0.5, 0.5}]], Automatic, 
                    Scaled[1]]}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 12.5}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.18000000000000002`] -> 
                    Baseline)], #3}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    RGBColor[0.922526, 0.385626, 0.209179], 
                    AbsoluteThickness[2]], {
                    LineBox[{{0, 12.5}, {20, 12.5}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    RGBColor[0.922526, 0.385626, 0.209179], 
                    AbsoluteThickness[2]], {
                    InsetBox[
                    GraphicsBox[{
                    EdgeForm[], 
                    PolygonBox[
                    
                    NCache[{{0, 1}, {-1, 1 - 3^Rational[1, 2]}, {
                    1, 1 - 3^Rational[1, 2]}}, {{0, 
                    1}, {-1, -0.7320508075688772}, {
                    1, -0.7320508075688772}}]]}, {
                    DefaultBaseStyle -> {"Graphics", {
                    AbsolutePointSize[6]}, 
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    RGBColor[0.922526, 0.385626, 0.209179], 
                    AbsoluteThickness[2]]}}], 
                    NCache[
                    Scaled[{
                    Rational[1, 2], 
                    Rational[1, 2]}], 
                    Scaled[{0.5, 0.5}]], Automatic, 
                    Scaled[1]]}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 12.5}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.18000000000000002`] -> 
                    Baseline)], #4}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    RGBColor[0.528488, 0.470624, 0.701351], 
                    AbsoluteThickness[2]], {
                    LineBox[{{0, 12.5}, {20, 12.5}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    RGBColor[0.528488, 0.470624, 0.701351], 
                    AbsoluteThickness[2]], {
                    InsetBox[
                    GraphicsBox[{
                    EdgeForm[], 
                    PolygonBox[
                    
                    NCache[{{0, -1}, {-1, -1 + 3^Rational[1, 2]}, {
                    1, -1 + 3^Rational[1, 2]}}, {{
                    0, -1}, {-1, 0.7320508075688772}, {
                    1, 0.7320508075688772}}]]}, {
                    DefaultBaseStyle -> {"Graphics", {
                    AbsolutePointSize[6]}, 
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    RGBColor[0.528488, 0.470624, 0.701351], 
                    AbsoluteThickness[2]]}}], 
                    NCache[
                    Scaled[{
                    Rational[1, 2], 
                    Rational[1, 2]}], 
                    Scaled[{0.5, 0.5}]], Automatic, 
                    Scaled[1]]}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 12.5}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.18000000000000002`] -> 
                    Baseline)], #5}}, 
                 GridBoxAlignment -> {
                  "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                 AutoDelete -> False, 
                 GridBoxDividers -> {
                  "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                 GridBoxItemSize -> {"Columns" -> {{All}}, "Rows" -> {{All}}},
                  GridBoxSpacings -> {
                  "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
             GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
             AutoDelete -> False, 
             GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
            "Grid"], Alignment -> Left, AppearanceElements -> None, 
           ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
           "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
         FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
         False], TraditionalForm]& ), 
      InterpretationFunction :> (RowBox[{"LineLegend", "[", 
         RowBox[{
           RowBox[{"{", 
             RowBox[{
               RowBox[{"{", 
                 RowBox[{
                   RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"PointSize", "[", "0.011000000000000001`", "]"}], 
                    ",", 
                    
                    TemplateBox[<|
                    "color" -> RGBColor[0.368417, 0.506779, 0.709798]|>, 
                    "RGBColorSwatchTemplate"], ",", 
                    RowBox[{"AbsoluteThickness", "[", "2", "]"}]}], "]"}], 
                   ",", 
                   RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"PointSize", "[", "0.011000000000000001`", "]"}], 
                    ",", 
                    
                    TemplateBox[<|
                    "color" -> RGBColor[0.880722, 0.611041, 0.142051]|>, 
                    "RGBColorSwatchTemplate"], ",", 
                    RowBox[{"AbsoluteThickness", "[", "2", "]"}]}], "]"}], 
                   ",", 
                   RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"PointSize", "[", "0.011000000000000001`", "]"}], 
                    ",", 
                    
                    TemplateBox[<|
                    "color" -> RGBColor[0.560181, 0.691569, 0.194885]|>, 
                    "RGBColorSwatchTemplate"], ",", 
                    RowBox[{"AbsoluteThickness", "[", "2", "]"}]}], "]"}], 
                   ",", 
                   RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"PointSize", "[", "0.011000000000000001`", "]"}], 
                    ",", 
                    
                    TemplateBox[<|
                    "color" -> RGBColor[0.922526, 0.385626, 0.209179]|>, 
                    "RGBColorSwatchTemplate"], ",", 
                    RowBox[{"AbsoluteThickness", "[", "2", "]"}]}], "]"}], 
                   ",", 
                   RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"PointSize", "[", "0.011000000000000001`", "]"}], 
                    ",", 
                    
                    TemplateBox[<|
                    "color" -> RGBColor[0.528488, 0.470624, 0.701351]|>, 
                    "RGBColorSwatchTemplate"], ",", 
                    RowBox[{"AbsoluteThickness", "[", "2", "]"}]}], "]"}]}], 
                 "}"}], ",", 
               RowBox[{"{", 
                 RowBox[{
                   RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"PointSize", "[", "0.011000000000000001`", "]"}], 
                    ",", 
                    
                    TemplateBox[<|
                    "color" -> RGBColor[0.368417, 0.506779, 0.709798]|>, 
                    "RGBColorSwatchTemplate"], ",", 
                    RowBox[{"AbsoluteThickness", "[", "2", "]"}]}], "]"}], 
                   ",", 
                   RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"PointSize", "[", "0.011000000000000001`", "]"}], 
                    ",", 
                    
                    TemplateBox[<|
                    "color" -> RGBColor[0.880722, 0.611041, 0.142051]|>, 
                    "RGBColorSwatchTemplate"], ",", 
                    RowBox[{"AbsoluteThickness", "[", "2", "]"}]}], "]"}], 
                   ",", 
                   RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"PointSize", "[", "0.011000000000000001`", "]"}], 
                    ",", 
                    
                    TemplateBox[<|
                    "color" -> RGBColor[0.560181, 0.691569, 0.194885]|>, 
                    "RGBColorSwatchTemplate"], ",", 
                    RowBox[{"AbsoluteThickness", "[", "2", "]"}]}], "]"}], 
                   ",", 
                   RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"PointSize", "[", "0.011000000000000001`", "]"}], 
                    ",", 
                    
                    TemplateBox[<|
                    "color" -> RGBColor[0.922526, 0.385626, 0.209179]|>, 
                    "RGBColorSwatchTemplate"], ",", 
                    RowBox[{"AbsoluteThickness", "[", "2", "]"}]}], "]"}], 
                   ",", 
                   RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"PointSize", "[", "0.011000000000000001`", "]"}], 
                    ",", 
                    
                    TemplateBox[<|
                    "color" -> RGBColor[0.528488, 0.470624, 0.701351]|>, 
                    "RGBColorSwatchTemplate"], ",", 
                    RowBox[{"AbsoluteThickness", "[", "2", "]"}]}], "]"}]}], 
                 "}"}]}], "}"}], ",", 
           RowBox[{"{", 
             RowBox[{
               RowBox[{"{", 
                 RowBox[{#, ",", #2, ",", #3, ",", #4, ",", #5}], "}"}], ",", 
               RowBox[{"{", 
                 RowBox[{#6, ",", #7, ",", #8, ",", #9, ",", #10}], "}"}]}], 
             "}"}], ",", 
           RowBox[{"LegendMarkers", "\[Rule]", 
             RowBox[{"{", 
               RowBox[{
                 RowBox[{"{", 
                   RowBox[{
                    RowBox[{"{", 
                    RowBox[{
                    GraphicsBox[{
                    EdgeForm[], 
                    DiskBox[{0, 0}]}, PlotRangePadding -> Scaled[0.15]], ",", 
                    RowBox[{"Offset", "[", "10.976`", "]"}]}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{
                    GraphicsBox[{
                    EdgeForm[], 
                    PolygonBox[{{-1, -1}, {1, -1}, {1, 1}, {-1, 1}}]}, 
                    PlotRangePadding -> Scaled[0.15]], ",", 
                    RowBox[{"Offset", "[", "10.5`", "]"}]}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{
                    GraphicsBox[{
                    EdgeForm[], 
                    PolygonBox[{{0, 1}, {1, 0}, {0, -1}, {-1, 0}}]}], ",", 
                    RowBox[{"Offset", "[", "10.2`", "]"}]}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{
                    GraphicsBox[{
                    EdgeForm[], 
                    PolygonBox[
                    
                    NCache[{{0, 1}, {-1, 1 - 3^Rational[1, 2]}, {
                    1, 1 - 3^Rational[1, 2]}}, {{0, 
                    1}, {-1, -0.7320508075688772}, {
                    1, -0.7320508075688772}}]]}], ",", 
                    RowBox[{"Offset", "[", "11.4`", "]"}]}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{
                    GraphicsBox[{
                    EdgeForm[], 
                    PolygonBox[
                    
                    NCache[{{0, -1}, {-1, -1 + 3^Rational[1, 2]}, {
                    1, -1 + 3^Rational[1, 2]}}, {{
                    0, -1}, {-1, 0.7320508075688772}, {
                    1, 0.7320508075688772}}]]}], ",", 
                    RowBox[{"Offset", "[", "11.52`", "]"}]}], "}"}]}], "}"}], 
                 ",", 
                 RowBox[{"{", 
                   RowBox[{
                    RowBox[{"{", 
                    RowBox[{
                    GraphicsBox[{
                    EdgeForm[], 
                    DiskBox[{0, 0}]}, PlotRangePadding -> Scaled[0.15]], ",", 
                    RowBox[{"Offset", "[", "10.976`", "]"}]}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{
                    GraphicsBox[{
                    EdgeForm[], 
                    PolygonBox[{{-1, -1}, {1, -1}, {1, 1}, {-1, 1}}]}, 
                    PlotRangePadding -> Scaled[0.15]], ",", 
                    RowBox[{"Offset", "[", "10.5`", "]"}]}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{
                    GraphicsBox[{
                    EdgeForm[], 
                    PolygonBox[{{0, 1}, {1, 0}, {0, -1}, {-1, 0}}]}], ",", 
                    RowBox[{"Offset", "[", "10.2`", "]"}]}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{
                    GraphicsBox[{
                    EdgeForm[], 
                    PolygonBox[
                    
                    NCache[{{0, 1}, {-1, 1 - 3^Rational[1, 2]}, {
                    1, 1 - 3^Rational[1, 2]}}, {{0, 
                    1}, {-1, -0.7320508075688772}, {
                    1, -0.7320508075688772}}]]}], ",", 
                    RowBox[{"Offset", "[", "11.4`", "]"}]}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{
                    GraphicsBox[{
                    EdgeForm[], 
                    PolygonBox[
                    NCache[{{0, -1}, {-1, -1 + 3^Rational[1, 2]}, {
                    1, -1 + 3^Rational[1, 2]}}, {{
                    0, -1}, {-1, 0.7320508075688772}, {
                    1, 0.7320508075688772}}]]}], ",", 
                    RowBox[{"Offset", "[", "11.52`", "]"}]}], "}"}]}], 
                   "}"}]}], "}"}]}], ",", 
           RowBox[{"Joined", "\[Rule]", 
             RowBox[{"{", 
               RowBox[{
                 RowBox[{"{", 
                   
                   RowBox[{
                    "True", ",", "True", ",", "True", ",", "True", ",", 
                    "True"}], "}"}], ",", 
                 RowBox[{"{", 
                   
                   RowBox[{
                    "True", ",", "True", ",", "True", ",", "True", ",", 
                    "True"}], "}"}]}], "}"}]}], ",", 
           RowBox[{"LabelStyle", "\[Rule]", 
             RowBox[{"{", "}"}]}], ",", 
           RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& ), 
      Editable -> True], TraditionalForm], TraditionalForm]},
  "Legended",
  DisplayFunction->(GridBox[{{
      TagBox[
       ItemBox[
        PaneBox[
         TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
         BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
       "SkipImageSizeLevel"], 
      ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
    GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
    AutoDelete -> False, GridBoxItemSize -> Automatic, 
    BaselinePosition -> {1, 1}]& ),
  Editable->True,
  InterpretationFunction->(RowBox[{"Legended", "[", 
     RowBox[{#, ",", 
       RowBox[{"Placed", "[", 
         RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& )]], "Output",
 CellChangeTimes->{{3.933648728250849*^9, 3.933648756088634*^9}, 
   3.933648831598057*^9, 3.933650884212532*^9, {3.93372192914007*^9, 
   3.933721933791233*^9}, 3.933737932967441*^9, 3.933738811706135*^9, 
   3.933800575234773*^9, 3.9338013843503017`*^9, 3.933819863593286*^9, 
   3.933903899684143*^9},
 CellLabel->"Out[28]=",ExpressionUUID->"69868b32-c990-cd48-9e3d-73109018aa9f"]
}, Open  ]],

Cell["\<\
Iz grafa lahko vidimo, da se \[SHacek]tevilo obsojenih za Slovenijo, Latvijo \
in Portugalsko zmanj\[SHacek]uje, medtem ko se za Tur\[CHacek]ijo in \
\[CapitalSHacek]vedsko pove\[CHacek]uje.\
\>", "Text",
 CellChangeTimes->{{3.9336489436202745`*^9, 
  3.933649104765444*^9}},ExpressionUUID->"818a57f5-06bd-a14b-a908-\
5dda925b6ad1"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", 
   RowBox[{"primerjava", " ", "=", 
    RowBox[{"vsiObsojeni", "[", 
     RowBox[{"Query", "[", "Drzave", "]"}], "]"}]}], "*)"}], 
  "\[IndentingNewLine]", 
  RowBox[{"primerjava", " ", "=", 
   RowBox[{
    RowBox[{"Query", "[", "Drzave", "]"}], "@", "vsiObsojeni"}]}]}]], "Input",
 CellChangeTimes->{{3.93364914673773*^9, 3.933649181107294*^9}, {
  3.933650894894529*^9, 3.9336508971575756`*^9}, {3.933722027531822*^9, 
  3.933722085182884*^9}, {3.9337221171894035`*^9, 3.93372216451021*^9}},
 CellLabel->"In[29]:=",ExpressionUUID->"e8368a98-1ca9-4041-be09-fd878572e331"],

Cell[BoxData[
 TagBox[
  TagBox[
   DynamicModuleBox[{TypeSystem`NestedGrid`PackagePrivate`$state$$ = <|
    "InitialData" -> <|
      "Slovenia" -> <|
        "2013" -> 571.1, "2014" -> 472.03, "2015" -> 399.49, "2016" -> 339.41,
          "2017" -> 315.65, "2018" -> 305.97, "2019" -> 300.64, "2020" -> 
         238.9, "2021" -> 283.27, "2022" -> 264.19|>, 
       "Latvia" -> <|
        "2013" -> 426.22, "2014" -> 460.31, "2015" -> 481.25, "2016" -> 
         453.49, "2017" -> 474.95, "2018" -> 443.92, "2019" -> 421.83, "2020" -> 
         371.81, "2021" -> 361.76, "2022" -> 263.95|>, 
       "T\[UDoubleDot]rkiye" -> <|
        "2013" -> 661.94, "2014" -> 642.86, "2015" -> 670.84, "2016" -> 
         583.17, "2017" -> 558.09, "2018" -> 687.25, "2019" -> 722.4, "2020" -> 
         592.05, "2021" -> 827.95, "2022" -> 805.83|>, 
       "Sweden" -> <|
        "2013" -> 673.84, "2014" -> 628.96, "2015" -> 608.82, "2016" -> 
         575.16, "2017" -> 574., "2018" -> 598.45, "2019" -> 612.97, "2020" -> 
         668.07, "2021" -> 718.56, "2022" -> 733.2|>, 
       "Portugal" -> <|
        "2013" -> 678.64, "2014" -> 506.95, "2015" -> 569.9, "2016" -> 546.01,
          "2017" -> 504.08, "2018" -> 453.68, "2019" -> 440.92, "2020" -> 
         341.72, "2021" -> 414.4, "2022" -> 441.98|>|>, "AllowEmbedding" -> 
     True, "InitialShape" -> TypeSystem`PackageScope`HeaderShape[<|{All, 
          TypeSystem`PackageScope`KeyDummy[2]} -> 1, {All, "2013"} -> 
        1, {All, "2014"} -> 1, {All, "2015"} -> 1, {All, "2016"} -> 
        1, {All, "2017"} -> 1, {All, "2018"} -> 1, {All, "2019"} -> 
        1, {All, "2020"} -> 1, {All, "2021"} -> 1, {All, "2022"} -> 1|>, 
       TypeSystem`PackageScope`Limited[
        TypeSystem`PackageScope`ColumnShape[
         TypeSystem`PackageScope`KeyValueShape[
          TypeSystem`PackageScope`AtomShape[89.60000000000001], 
          TypeSystem`PackageScope`Limited[
           
           TypeSystem`PackageScope`RowShape[<|
            "2013" -> TypeSystem`PackageScope`AtomShape[60], "2014" -> 
             TypeSystem`PackageScope`AtomShape[60], "2015" -> 
             TypeSystem`PackageScope`AtomShape[60], "2016" -> 
             TypeSystem`PackageScope`AtomShape[60], "2017" -> 
             TypeSystem`PackageScope`AtomShape[60], "2018" -> 
             TypeSystem`PackageScope`AtomShape[60], "2019" -> 
             TypeSystem`PackageScope`AtomShape[60], "2020" -> 
             TypeSystem`PackageScope`AtomShape[60], "2021" -> 
             TypeSystem`PackageScope`AtomShape[60], "2022" -> 
             TypeSystem`PackageScope`AtomShape[60]|>], 
           DirectedInfinity[1], 10, {All}]]], 5, 
        DirectedInfinity[1], {}]], "InitialType" -> TypeSystem`Assoc[
       TypeSystem`Atom[String], 
       TypeSystem`Struct[{
        "2013", "2014", "2015", "2016", "2017", "2018", "2019", "2020", 
         "2021", "2022"}, {
         TypeSystem`Atom[Real], 
         TypeSystem`Atom[Real], 
         TypeSystem`Atom[Real], 
         TypeSystem`Atom[Real], 
         TypeSystem`Atom[Real], 
         TypeSystem`Atom[Real], 
         TypeSystem`Atom[Real], 
         TypeSystem`Atom[Real], 
         TypeSystem`Atom[Real], 
         TypeSystem`Atom[Real]}], 5], "Meta" -> <||>, "RowTarget" -> 20, 
     "ColumnTarget" -> 10, "Shape" -> 
     TypeSystem`PackageScope`HeaderShape[<|{All, 
          TypeSystem`PackageScope`KeyDummy[2]} -> 1, {All, "2013"} -> 
        1, {All, "2014"} -> 1, {All, "2015"} -> 1, {All, "2016"} -> 
        1, {All, "2017"} -> 1, {All, "2018"} -> 1, {All, "2019"} -> 
        1, {All, "2020"} -> 1, {All, "2021"} -> 1, {All, "2022"} -> 1|>, 
       TypeSystem`PackageScope`Limited[
        TypeSystem`PackageScope`ColumnShape[
         TypeSystem`PackageScope`KeyValueShape[
          TypeSystem`PackageScope`AtomShape[89.60000000000001], 
          TypeSystem`PackageScope`Limited[
           
           TypeSystem`PackageScope`RowShape[<|
            "2013" -> TypeSystem`PackageScope`AtomShape[60], "2014" -> 
             TypeSystem`PackageScope`AtomShape[60], "2015" -> 
             TypeSystem`PackageScope`AtomShape[60], "2016" -> 
             TypeSystem`PackageScope`AtomShape[60], "2017" -> 
             TypeSystem`PackageScope`AtomShape[60], "2018" -> 
             TypeSystem`PackageScope`AtomShape[60], "2019" -> 
             TypeSystem`PackageScope`AtomShape[60], "2020" -> 
             TypeSystem`PackageScope`AtomShape[60], "2021" -> 
             TypeSystem`PackageScope`AtomShape[60], "2022" -> 
             TypeSystem`PackageScope`AtomShape[60]|>], 
           DirectedInfinity[1], 10, {All}]]], 5, 
        DirectedInfinity[1], {}]], "Type" -> TypeSystem`Assoc[
       TypeSystem`Atom[String], 
       TypeSystem`Struct[{
        "2013", "2014", "2015", "2016", "2017", "2018", "2019", "2020", 
         "2021", "2022"}, {
         TypeSystem`Atom[Real], 
         TypeSystem`Atom[Real], 
         TypeSystem`Atom[Real], 
         TypeSystem`Atom[Real], 
         TypeSystem`Atom[Real], 
         TypeSystem`Atom[Real], 
         TypeSystem`Atom[Real], 
         TypeSystem`Atom[Real], 
         TypeSystem`Atom[Real], 
         TypeSystem`Atom[Real]}], 5], "Path" -> {}, "DisplayedRowCount" -> 5, 
     "DisplayedColumnCount" -> 10, "DataRowCount" -> 5, "DataColumnCount" -> 
     10, "SortPaths" -> {}, "SortDirections" -> {}, "HiddenItemsMap" -> Null, 
     "UpdateType" -> 1|>, TypeSystem`NestedGrid`PackagePrivate`$outputID$$, 
    TypeSystem`NestedGrid`PackagePrivate`$path$$ = {}, 
    TypeSystem`NestedGrid`PackagePrivate`$vPos$$ = 1, 
    TypeSystem`NestedGrid`PackagePrivate`$hPos$$ = 1, 
    TypeSystem`NestedGrid`PackagePrivate`$grid$$ = 
    DynamicModule[{TypeSystem`NestedGrid`PackagePrivate`renderedGrid = Deploy[
        Style[
         Grid[{{
            Item[
             Pane[
              Annotation[
               Mouseover[
                
                Graphics[{}, ImageSize -> 6, BaselinePosition -> 
                 Scaled[-0.15]], 
                Graphics[{
                  GrayLevel[0.6], 
                  
                  Polygon[{{2^Rational[-1, 2], -2^Rational[-1, 2]}, {
                    2^Rational[-1, 2], 2^
                    Rational[-1, 2]}, {-2^Rational[-1, 2], 2^
                    Rational[-1, 2]}, {-2^Rational[-1, 2], -2^
                    Rational[-1, 2]}}]}, ImageSize -> 6, BaselinePosition -> 
                 Scaled[-0.15]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                All, Keys}, "KeyDummy", True], "Mouse"], 
              ImageSize -> {{1, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["2013", 
                  Style[
                  "2013", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                   All, "2013"}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                All, "2013"}, "ColumnHeader", True], "Mouse"], 
              ImageSize -> {{1, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["2014", 
                  Style[
                  "2014", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                   All, "2014"}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                All, "2014"}, "ColumnHeader", True], "Mouse"], 
              ImageSize -> {{1, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["2015", 
                  Style[
                  "2015", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                   All, "2015"}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                All, "2015"}, "ColumnHeader", True], "Mouse"], 
              ImageSize -> {{1, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["2016", 
                  Style[
                  "2016", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                   All, "2016"}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                All, "2016"}, "ColumnHeader", True], "Mouse"], 
              ImageSize -> {{1, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["2017", 
                  Style[
                  "2017", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                   All, "2017"}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                All, "2017"}, "ColumnHeader", True], "Mouse"], 
              ImageSize -> {{1, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["2018", 
                  Style[
                  "2018", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                   All, "2018"}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                All, "2018"}, "ColumnHeader", True], "Mouse"], 
              ImageSize -> {{1, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["2019", 
                  Style[
                  "2019", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                   All, "2019"}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                All, "2019"}, "ColumnHeader", True], "Mouse"], 
              ImageSize -> {{1, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["2020", 
                  Style[
                  "2020", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                   All, "2020"}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                All, "2020"}, "ColumnHeader", True], "Mouse"], 
              ImageSize -> {{1, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["2021", 
                  Style[
                  "2021", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                   All, "2021"}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                All, "2021"}, "ColumnHeader", True], "Mouse"], 
              ImageSize -> {{1, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["2022", 
                  Style[
                  "2022", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                   All, "2022"}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                All, "2022"}, "ColumnHeader", True], "Mouse"], 
              ImageSize -> {{1, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}]}, {
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["Slovenia", 
                  Style[
                  "Slovenia", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    Key["Slovenia"]}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["Slovenia"]}, "RowHeader", False], "Mouse"], 
              ImageSize -> {{89.60000000000001, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["571.1"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["Slovenia"], 
                 Key["2013"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["472.03"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["Slovenia"], 
                 Key["2014"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["399.49"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["Slovenia"], 
                 Key["2015"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["339.41"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["Slovenia"], 
                 Key["2016"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["315.65"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["Slovenia"], 
                 Key["2017"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["305.97"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["Slovenia"], 
                 Key["2018"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["300.64"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["Slovenia"], 
                 Key["2019"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["238.9"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["Slovenia"], 
                 Key["2020"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["283.27"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["Slovenia"], 
                 Key["2021"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["264.19"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["Slovenia"], 
                 Key["2022"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["Latvia", 
                  Style[
                  "Latvia", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    Key["Latvia"]}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["Latvia"]}, "RowHeader", False], "Mouse"], 
              ImageSize -> {{89.60000000000001, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["426.22"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["Latvia"], 
                 Key["2013"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["460.31"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["Latvia"], 
                 Key["2014"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["481.25"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["Latvia"], 
                 Key["2015"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["453.49"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["Latvia"], 
                 Key["2016"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["474.95"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["Latvia"], 
                 Key["2017"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["443.92"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["Latvia"], 
                 Key["2018"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["421.83"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["Latvia"], 
                 Key["2019"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["371.81"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["Latvia"], 
                 Key["2020"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["361.76"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["Latvia"], 
                 Key["2021"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["263.95"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["Latvia"], 
                 Key["2022"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["T\[UDoubleDot]rkiye", 
                  Style[
                  "T\[UDoubleDot]rkiye", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    Key["T\[UDoubleDot]rkiye"]}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["T\[UDoubleDot]rkiye"]}, "RowHeader", False], "Mouse"], 
              ImageSize -> {{89.60000000000001, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["661.94"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["T\[UDoubleDot]rkiye"], 
                 Key["2013"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["642.86"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["T\[UDoubleDot]rkiye"], 
                 Key["2014"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["670.84"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["T\[UDoubleDot]rkiye"], 
                 Key["2015"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["583.17"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["T\[UDoubleDot]rkiye"], 
                 Key["2016"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["558.09"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["T\[UDoubleDot]rkiye"], 
                 Key["2017"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["687.25"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["T\[UDoubleDot]rkiye"], 
                 Key["2018"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["722.4"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["T\[UDoubleDot]rkiye"], 
                 Key["2019"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["592.05"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["T\[UDoubleDot]rkiye"], 
                 Key["2020"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["827.95"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["T\[UDoubleDot]rkiye"], 
                 Key["2021"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["805.83"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["T\[UDoubleDot]rkiye"], 
                 Key["2022"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["Sweden", 
                  Style[
                  "Sweden", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    Key["Sweden"]}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["Sweden"]}, "RowHeader", False], "Mouse"], 
              ImageSize -> {{89.60000000000001, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["673.84"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["Sweden"], 
                 Key["2013"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["628.96"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["Sweden"], 
                 Key["2014"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["608.82"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["Sweden"], 
                 Key["2015"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["575.16"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["Sweden"], 
                 Key["2016"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["574.0"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["Sweden"], 
                 Key["2017"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["598.45"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["Sweden"], 
                 Key["2018"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["612.97"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["Sweden"], 
                 Key["2019"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["668.07"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["Sweden"], 
                 Key["2020"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["718.56"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["Sweden"], 
                 Key["2021"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["733.2"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["Sweden"], 
                 Key["2022"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["Portugal", 
                  Style[
                  "Portugal", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    Key["Portugal"]}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["Portugal"]}, "RowHeader", False], "Mouse"], 
              ImageSize -> {{89.60000000000001, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["678.64"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["Portugal"], 
                 Key["2013"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["506.95"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["Portugal"], 
                 Key["2014"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["569.9"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["Portugal"], 
                 Key["2015"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["546.01"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["Portugal"], 
                 Key["2016"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["504.08"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["Portugal"], 
                 Key["2017"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["453.68"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["Portugal"], 
                 Key["2018"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["440.92"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["Portugal"], 
                 Key["2019"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["341.72"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["Portugal"], 
                 Key["2020"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["414.4"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["Portugal"], 
                 Key["2021"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["441.98"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["Portugal"], 
                 Key["2022"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}}, 
          BaseStyle -> {
           ContextMenu -> 
            Dynamic[TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger; 
              Which[TypeSystem`NestedGrid`PackagePrivate`$lastOutputID =!= 
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                 TypeSystem`NestedGrid`PackagePrivate`$outputID$$], {}, 
                TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger === 
                TypeSystem`NestedGrid`PackagePrivate`$lastContextMenuTrigger, 
                TypeSystem`NestedGrid`PackagePrivate`$lastContextMenu, True, 
                TypeSystem`NestedGrid`PackagePrivate`$lastContextMenuTrigger = 
                 TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger; 
                TypeSystem`NestedGrid`PackagePrivate`$lastContextMenu = 
                 Block[{TypeSystem`NestedGrid`PackagePrivate`$globalScrollPos = \
{TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$}}, 
                   
                   With[{TypeSystem`NestedGrid`PackagePrivate`lastPath$ = 
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ = 
                    TypeSystem`NestedGrid`PackagePrivate`$lastPathType, 
                    TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$ = 
                    TypeSystem`NestedGrid`PackagePrivate`$\
lastPathIsLeafHeader, TypeSystem`NestedGrid`PackagePrivate`headerHidden$ = And[
                    MatchQ[TypeSystem`NestedGrid`PackagePrivate`$lastPathType, 
                    Alternatives["RowHeader", "ColumnHeader"]], 
                    TypeSystem`NestedGrid`PackagePrivate`headerHiddenQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$]], 
                    TypeSystem`NestedGrid`PackagePrivate`allHidden$ = 
                    TypeSystem`NestedGrid`PackagePrivate`allHiddenQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`anyHidden$ = 
                    TypeSystem`NestedGrid`PackagePrivate`anyHiddenQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`sortDirection$ = 
                    TypeSystem`NestedGrid`PackagePrivate`columnSortDirection[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$[
                    "SortPaths"], 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$[
                    "SortDirections"]], 
                    TypeSystem`NestedGrid`PackagePrivate`haveData$ = Not[
                    FailureQ[
                    TypeSystem`NestedGrid`PackagePrivate`datasetInitialData[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$]]], 
                    TypeSystem`NestedGrid`PackagePrivate`isKeyDummy$ = Not[
                    FreeQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, Keys]]}, 
                    Join[{
                    If[
                    Or[
                    Not[TypeSystem`NestedGrid`PackagePrivate`haveData$], 
                    Not[TypeSystem`NestedGrid`PackagePrivate`anyHidden$], 
                    TypeSystem`NestedGrid`PackagePrivate`isKeyDummy$], 
                    Nothing, 
                    MenuItem[
                    "Show " <> 
                    Which[TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "Item", "", 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "RowHeader", "Row", 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "ColumnHeader", "Column", True, ""], 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateHiddenItems[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, 
                    "remove"]], MenuEvaluator -> Automatic]], 
                    If[
                    Or[
                    Not[TypeSystem`NestedGrid`PackagePrivate`haveData$], 
                    TypeSystem`NestedGrid`PackagePrivate`pathEmptyQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`isKeyDummy$, 
                    And[
                    TypeSystem`NestedGrid`PackagePrivate`allHidden$, 
                    TypeSystem`NestedGrid`PackagePrivate`headerHidden$]], 
                    Nothing, 
                    MenuItem[
                    "Hide " <> 
                    Which[TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "Item", "", 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "RowHeader", "Row", 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "ColumnHeader", "Column", True, ""], 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateHiddenItems[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, "add"]], 
                    MenuEvaluator -> Automatic]], Delimiter}, 
                    If[
                    And[TypeSystem`NestedGrid`PackagePrivate`haveData$, 
                    MatchQ[TypeSystem`NestedGrid`PackagePrivate`lastPathType$, 
                    Alternatives["ColumnHeader", "KeyDummy"]], 
                    TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$, 
                    Not[TypeSystem`NestedGrid`PackagePrivate`allHidden$]], {
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`sortDirection$ =!= 
                    "Ascending", 
                    MenuItem["Sort", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateSort[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, 
                    "Ascending"]], MenuEvaluator -> Automatic], Nothing], 
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`sortDirection$ =!= 
                    "Descending", 
                    MenuItem["Reverse Sort", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateSort[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, 
                    "Descending"]], MenuEvaluator -> Automatic], Nothing], 
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`sortDirection$ =!= 
                    None, 
                    MenuItem["Unsort", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateSort[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, None]], 
                    MenuEvaluator -> Automatic], Nothing], Delimiter}, {}], {
                    MenuItem["Copy Position to Clipboard", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentPosition[
                    TypeSystem`NestedGrid`PackagePrivate`copyClip]], 
                    MenuEvaluator -> Automatic], 
                    If[TypeSystem`NestedGrid`PackagePrivate`haveData$, 
                    MenuItem["Copy Data to Clipboard", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentData[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`copyClip]], 
                    MenuEvaluator -> Automatic], Nothing], Delimiter, 
                    MenuItem["Paste Position in New Cell", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentPosition[
                    TypeSystem`NestedGrid`PackagePrivate`cellPaste]], 
                    MenuEvaluator -> Automatic], 
                    If[TypeSystem`NestedGrid`PackagePrivate`haveData$, 
                    MenuItem["Paste Data in New Cell", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentData[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`cellPaste]], 
                    MenuEvaluator -> Automatic], Nothing]}]]]]], FontFamily -> 
            "Source Sans Pro", FontSize -> 14, FontWeight -> Plain}, Dividers -> 
          All, FrameStyle -> GrayLevel[0.7490196078431373], 
          Spacings -> {0, 0}, Alignment -> Left, 
          BaseStyle -> {
           FontFamily -> "Source Sans Pro", FontSize -> 14, FontWeight -> 
            Plain}], LineBreakWithin -> False, ContextMenu -> {}, NumberMarks -> 
         False, ShowAutoStyles -> False]], 
      TypeSystem`NestedGrid`PackagePrivate`initialQ = True}, 
     Dynamic[
      TypeSystem`NestedGrid`PackagePrivate`setupViewPath[
      TypeSystem`NestedGrid`PackagePrivate`$path$$, If[
         Not[TypeSystem`NestedGrid`PackagePrivate`initialQ], 
         Module[{
          TypeSystem`NestedGrid`PackagePrivate`tmpGrid$ = $Failed, 
           TypeSystem`NestedGrid`PackagePrivate`tmpData$ = 
           TypeSystem`NestedGrid`PackagePrivate`datasetData[
            TypeSystem`NestedGrid`PackagePrivate`$state$$]}, 
          TypeSystem`NestedGrid`PackagePrivate`tmpGrid$ = If[
             FailureQ[TypeSystem`NestedGrid`PackagePrivate`tmpData$], 
             TypeSystem`NestedGrid`PackagePrivate`renderedGrid, 
             TypeSystem`NestedGrid`PackagePrivate`renderGrid[
             TypeSystem`NestedGrid`PackagePrivate`$state$$, 
              TypeSystem`NestedGrid`PackagePrivate`$path$$, 
              TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
              TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
              TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
              TypeSystem`NestedGrid`PackagePrivate`localHold[
              TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
             TypeSystem`NestedGrid`PackagePrivate`tmpData$]]; If[
            Not[
             FailureQ[TypeSystem`NestedGrid`PackagePrivate`tmpGrid$]], 
            TypeSystem`NestedGrid`PackagePrivate`renderedGrid = 
            TypeSystem`NestedGrid`PackagePrivate`tmpGrid$]; Null]]; 
       TypeSystem`NestedGrid`PackagePrivate`initialQ = False; 
       TypeSystem`NestedGrid`PackagePrivate`$vPos$$; 
       TypeSystem`NestedGrid`PackagePrivate`$hPos$$; If[
         FailureQ[TypeSystem`NestedGrid`PackagePrivate`renderedGrid], 
         TypeSystem`SparseGrid[
          TypeSystem`H["(data no longer present)"]], 
         TypeSystem`NestedGrid`PackagePrivate`renderedGrid]], 
      TrackedSymbols :> {
       TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
        TypeSystem`NestedGrid`PackagePrivate`$hPos$$}], 
     DynamicModuleValues :> {}], 
    TypeSystem`NestedGrid`PackagePrivate`$topBar$$ = Dynamic[
     TypeSystem`NestedGrid`PackagePrivate`makeFramedBar[
      TypeSystem`PackageScope`SubViewPathbar[
      TypeSystem`NestedGrid`PackagePrivate`$path$$, 
       TypeSystem`NestedGrid`PackagePrivate`updateState[
       TypeSystem`NestedGrid`PackagePrivate`$state$$, 
        TypeSystem`NestedGrid`PackagePrivate`$path$$, 
        TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
        TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
        TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
        TypeSystem`NestedGrid`PackagePrivate`localHold[
        TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]]], 
     TrackedSymbols :> {TypeSystem`NestedGrid`PackagePrivate`$path$$}], 
    TypeSystem`NestedGrid`PackagePrivate`$bottomBar$$ = Style[
     Framed[
      Dynamic[
       Replace[
       TypeSystem`NestedGrid`PackagePrivate`mouseAnnotation$$, {
        TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
           TypeSystem`NestedGrid`PackagePrivate`localHold[
           TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][Null, 
           Blank[]] -> "", TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
           TypeSystem`NestedGrid`PackagePrivate`localHold[
           TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
           Pattern[TypeSystem`NestedGrid`PackagePrivate`path$, 
            Blank[]], 
           Pattern[TypeSystem`NestedGrid`PackagePrivate`pathType$, 
            Blank[]], 
           Pattern[TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$, 
            Blank[]]] :> (
          Increment[TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger]; 
          TypeSystem`NestedGrid`PackagePrivate`$lastPath = 
           TypeSystem`NestedGrid`PackagePrivate`path$; 
          TypeSystem`NestedGrid`PackagePrivate`$lastPathType = 
           TypeSystem`NestedGrid`PackagePrivate`pathType$; 
          TypeSystem`NestedGrid`PackagePrivate`$lastPathIsLeafHeader = 
           TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$; 
          TypeSystem`NestedGrid`PackagePrivate`$lastOutputID = 
           TypeSystem`NestedGrid`PackagePrivate`localHold[
            TypeSystem`NestedGrid`PackagePrivate`$outputID$$]; 
          TypeSystem`NestedGrid`PackagePrivate`makePathTrail[
           TypeSystem`NestedGrid`PackagePrivate`path$, 
            TypeSystem`NestedGrid`PackagePrivate`makePathElements]), Null :> 
         Spacer[10], Blank[] :> Spacer[10]}], 
       TrackedSymbols :> {
        TypeSystem`NestedGrid`PackagePrivate`mouseAnnotation$$}], FrameStyle -> 
      None, ImageMargins -> 0, FrameMargins -> 0, Alignment -> Top, 
      ImageSize -> {Automatic, 15}], FontSize -> 1], 
    TypeSystem`NestedGrid`PackagePrivate`mouseAnnotation$$ = Null}, 
    DynamicWrapperBox[
     DynamicBox[ToBoxes[
       Dataset`DatasetContent[
       2, "Path" -> Hold[TypeSystem`NestedGrid`PackagePrivate`$path$$], 
        "Grid" -> Hold[TypeSystem`NestedGrid`PackagePrivate`$grid$$], "State" -> 
        Hold[TypeSystem`NestedGrid`PackagePrivate`$state$$], "VPos" -> 
        Hold[TypeSystem`NestedGrid`PackagePrivate`$vPos$$], "HPos" -> 
        Hold[TypeSystem`NestedGrid`PackagePrivate`$hPos$$], "TopBar" -> 
        Hold[TypeSystem`NestedGrid`PackagePrivate`$topBar$$], "BottomBar" -> 
        Hold[TypeSystem`NestedGrid`PackagePrivate`$bottomBar$$], "OutputID" -> 
        Hold[
          TypeSystem`NestedGrid`PackagePrivate`localHold[
          TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]], StandardForm],
      ImageSizeCache->{787.5, {99.09743637626525, 105.40256362373475`}},
      TrackedSymbols:>{
       TypeSystem`NestedGrid`PackagePrivate`$state$$, 
        TypeSystem`NestedGrid`PackagePrivate`$grid$$}], 
     TypeSystem`NestedGrid`PackagePrivate`mouseAnnotation$$ = 
     MouseAnnotation[],
     ImageSizeCache->{787.5, {99.09743637626525, 105.40256362373475`}}],
    BaseStyle->{LineBreakWithin -> False},
    DynamicModuleValues:>{},
    Initialization:>(TypeSystem`NestedGrid`PackagePrivate`$outputID$$ = 
     CreateUUID[]),
    UnsavedVariables:>{TypeSystem`NestedGrid`PackagePrivate`$outputID$$}],
   Deploy,
   DefaultBaseStyle->"Deploy"],
  Dataset`InterpretDataset[1],
  Editable->False,
  SelectWithContents->True,
  Selectable->False]], "Output",
 CellChangeTimes->{
  3.93364918239933*^9, 3.9336508978412437`*^9, 3.933721950265974*^9, {
   3.9337220368239613`*^9, 3.9337220857730827`*^9}, {3.9337221267427464`*^9, 
   3.933722166994978*^9}, 3.93373534234688*^9, 3.933737936080065*^9, 
   3.933738813990383*^9, 3.9338005753522873`*^9, 3.9338013844568157`*^9, 
   3.9338198639034767`*^9, 3.9339038998051624`*^9},
 CellLabel->"Out[29]=",ExpressionUUID->"415a1d30-4c9e-0845-a068-0648a64cffe5"]
}, Open  ]],

Cell["\<\
Napisal sem funkcijo, ki izra\[CHacek]una za koliko procentov se je pove\
\[CHacek]alo \[SHacek]tevilo obsojenih za vne\[SHacek]eno dr\[ZHacek]avo v \
celotnem \[CHacek]asovnem obdobju (2013 - 2022)\
\>", "Text",
 CellChangeTimes->{{3.933722235894146*^9, 3.933722244201599*^9}, {
  3.9337224425932713`*^9, 
  3.9337225623706055`*^9}},ExpressionUUID->"50b27eed-b1ae-0447-b741-\
d3a13773bfcc"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"SpremembaStObsojenih", "[", "drzava_", "]"}], ":=", 
   RowBox[{"Module", "[", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"zac", ",", " ", "kon", ",", " ", "povecaZa"}], "}"}], ",", 
     "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"zac", " ", "=", " ", 
       RowBox[{"First", "[", 
        RowBox[{"vsiObsojeni", "[", 
         RowBox[{"[", "drzava", "]"}], "]"}], "]"}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"kon", "=", 
       RowBox[{"Last", "[", 
        RowBox[{"vsiObsojeni", "[", 
         RowBox[{"[", "drzava", "]"}], "]"}], "]"}]}], ";", 
      "\[IndentingNewLine]", " ", 
      RowBox[{"povecaZa", " ", "=", " ", 
       RowBox[{
        RowBox[{
         RowBox[{"(", 
          RowBox[{"kon", " ", "-", " ", "zac"}], ")"}], "/", "zac"}], " ", 
        "*", " ", "100"}]}], " ", ";", "\[IndentingNewLine]", 
      RowBox[{"StringJoin", "[", 
       RowBox[{
        RowBox[{"ToString", "[", "povecaZa", "]"}], ",", "\"\<%\>\""}], 
       "]"}]}]}], "\[IndentingNewLine]", "]"}]}], "\[IndentingNewLine]", 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{"spremembe", " ", "=", 
  RowBox[{"Dataset", "[", 
   RowBox[{"AssociationThread", "[", 
    RowBox[{"Drzave", ",", " ", 
     RowBox[{"SpremembaStObsojenih", "/@", "Drzave"}]}], "]"}], 
   "]"}]}]}], "Input",
 CellChangeTimes->{{3.933649301754455*^9, 3.9336493679732*^9}, {
   3.933650203518162*^9, 3.933650321407701*^9}, {3.933650362442793*^9, 
   3.9336505209567757`*^9}, {3.933650552514105*^9, 3.93365056913134*^9}, {
   3.933650606677498*^9, 3.9336507156368237`*^9}, {3.933651483984457*^9, 
   3.933651533392658*^9}, {3.933651976076879*^9, 3.933652007410757*^9}, {
   3.933652089971287*^9, 3.9336520972075176`*^9}, {3.933652144852745*^9, 
   3.933652153814979*^9}, {3.9336522425939293`*^9, 3.933652249094864*^9}, 
   3.933652446892519*^9, {3.93365268281312*^9, 3.933652687693733*^9}, {
   3.933653033591137*^9, 3.9336531204168377`*^9}, {3.9336532495758305`*^9, 
   3.933653281416628*^9}, {3.933653322911316*^9, 3.933653336641899*^9}, {
   3.93365339511248*^9, 3.933653456432445*^9}, {3.933653497490307*^9, 
   3.933653498501356*^9}, {3.9336669439513226`*^9, 3.9336669445669827`*^9}, 
   3.933721988831396*^9, {3.9337223068386383`*^9, 3.933722355859205*^9}, {
   3.933726547740507*^9, 3.933726551256359*^9}, {3.9337335604345512`*^9, 
   3.9337335635352*^9}},
 CellLabel->"In[30]:=",ExpressionUUID->"82876ea1-1ac2-e446-b55c-80b705f927df"],

Cell[BoxData[
 TagBox[
  TagBox[
   DynamicModuleBox[{TypeSystem`NestedGrid`PackagePrivate`$state$$ = <|
    "InitialData" -> <|
      "Slovenia" -> "-53.7402%", "Latvia" -> "-38.0719%", 
       "T\[UDoubleDot]rkiye" -> "21.7376%", "Sweden" -> "8.80921%", 
       "Portugal" -> "-34.8727%"|>, "AllowEmbedding" -> True, "InitialShape" -> 
     TypeSystem`PackageScope`Limited[
       TypeSystem`PackageScope`ColumnShape[
        TypeSystem`PackageScope`KeyValueShape[
         TypeSystem`PackageScope`AtomShape[84.], 
         TypeSystem`PackageScope`AtomShape[100.80000000000001`]]], 5, 
       DirectedInfinity[1], {}], "InitialType" -> TypeSystem`Assoc[
       TypeSystem`Atom[
        TypeSystem`Enumeration[
        "Latvia", "Portugal", "Slovenia", "Sweden", "T\[UDoubleDot]rkiye"]], 
       TypeSystem`Atom[String], 5], "Meta" -> <||>, "RowTarget" -> 20, 
     "ColumnTarget" -> 10, "Shape" -> TypeSystem`PackageScope`Limited[
       TypeSystem`PackageScope`ColumnShape[
        TypeSystem`PackageScope`KeyValueShape[
         TypeSystem`PackageScope`AtomShape[84.], 
         TypeSystem`PackageScope`AtomShape[100.80000000000001`]]], 5, 
       DirectedInfinity[1], {}], "Type" -> TypeSystem`Assoc[
       TypeSystem`Atom[
        TypeSystem`Enumeration[
        "Latvia", "Portugal", "Slovenia", "Sweden", "T\[UDoubleDot]rkiye"]], 
       TypeSystem`Atom[String], 5], "Path" -> {}, "DisplayedRowCount" -> 5, 
     "DisplayedColumnCount" -> 1, "DataRowCount" -> 5, "DataColumnCount" -> 1,
      "SortPaths" -> {}, "SortDirections" -> {}, "HiddenItemsMap" -> Null, 
     "UpdateType" -> 1|>, TypeSystem`NestedGrid`PackagePrivate`$outputID$$, 
    TypeSystem`NestedGrid`PackagePrivate`$path$$ = {}, 
    TypeSystem`NestedGrid`PackagePrivate`$vPos$$ = 1, 
    TypeSystem`NestedGrid`PackagePrivate`$hPos$$ = 1, 
    TypeSystem`NestedGrid`PackagePrivate`$grid$$ = 
    DynamicModule[{TypeSystem`NestedGrid`PackagePrivate`renderedGrid = Deploy[
        Style[
         Grid[{{
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["Slovenia", 
                  Style[
                  "Slovenia", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    Key["Slovenia"]}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["Slovenia"]}, "RowHeader", False], "Mouse"], 
              ImageSize -> {{84., Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation["-53.7402%", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["Slovenia"]}, "Item", False], "Mouse"], 
              ImageSize -> {{100.80000000000001`, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["Latvia", 
                  Style[
                  "Latvia", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    Key["Latvia"]}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["Latvia"]}, "RowHeader", False], "Mouse"], 
              ImageSize -> {{84., Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation["-38.0719%", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["Latvia"]}, "Item", False], "Mouse"], 
              ImageSize -> {{100.80000000000001`, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["T\[UDoubleDot]rkiye", 
                  Style[
                  "T\[UDoubleDot]rkiye", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    Key["T\[UDoubleDot]rkiye"]}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["T\[UDoubleDot]rkiye"]}, "RowHeader", False], "Mouse"], 
              ImageSize -> {{84., Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation["21.7376%", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["T\[UDoubleDot]rkiye"]}, "Item", False], "Mouse"], 
              ImageSize -> {{100.80000000000001`, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["Sweden", 
                  Style[
                  "Sweden", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    Key["Sweden"]}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["Sweden"]}, "RowHeader", False], "Mouse"], 
              ImageSize -> {{84., Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation["8.80921%", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["Sweden"]}, "Item", False], "Mouse"], 
              ImageSize -> {{100.80000000000001`, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["Portugal", 
                  Style[
                  "Portugal", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    Key["Portugal"]}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["Portugal"]}, "RowHeader", False], "Mouse"], 
              ImageSize -> {{84., Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation["-34.8727%", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["Portugal"]}, "Item", False], "Mouse"], 
              ImageSize -> {{100.80000000000001`, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}}, 
          BaseStyle -> {
           ContextMenu -> 
            Dynamic[TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger; 
              Which[TypeSystem`NestedGrid`PackagePrivate`$lastOutputID =!= 
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                 TypeSystem`NestedGrid`PackagePrivate`$outputID$$], {}, 
                TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger === 
                TypeSystem`NestedGrid`PackagePrivate`$lastContextMenuTrigger, 
                TypeSystem`NestedGrid`PackagePrivate`$lastContextMenu, True, 
                TypeSystem`NestedGrid`PackagePrivate`$lastContextMenuTrigger = 
                 TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger; 
                TypeSystem`NestedGrid`PackagePrivate`$lastContextMenu = 
                 Block[{TypeSystem`NestedGrid`PackagePrivate`$globalScrollPos = \
{TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$}}, 
                   
                   With[{TypeSystem`NestedGrid`PackagePrivate`lastPath$ = 
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ = 
                    TypeSystem`NestedGrid`PackagePrivate`$lastPathType, 
                    TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$ = 
                    TypeSystem`NestedGrid`PackagePrivate`$\
lastPathIsLeafHeader, TypeSystem`NestedGrid`PackagePrivate`headerHidden$ = And[
                    MatchQ[TypeSystem`NestedGrid`PackagePrivate`$lastPathType, 
                    Alternatives["RowHeader", "ColumnHeader"]], 
                    TypeSystem`NestedGrid`PackagePrivate`headerHiddenQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$]], 
                    TypeSystem`NestedGrid`PackagePrivate`allHidden$ = 
                    TypeSystem`NestedGrid`PackagePrivate`allHiddenQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`anyHidden$ = 
                    TypeSystem`NestedGrid`PackagePrivate`anyHiddenQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`sortDirection$ = 
                    TypeSystem`NestedGrid`PackagePrivate`columnSortDirection[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$[
                    "SortPaths"], 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$[
                    "SortDirections"]], 
                    TypeSystem`NestedGrid`PackagePrivate`haveData$ = Not[
                    FailureQ[
                    TypeSystem`NestedGrid`PackagePrivate`datasetInitialData[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$]]], 
                    TypeSystem`NestedGrid`PackagePrivate`isKeyDummy$ = Not[
                    FreeQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, Keys]]}, 
                    Join[{
                    If[
                    Or[
                    Not[TypeSystem`NestedGrid`PackagePrivate`haveData$], 
                    Not[TypeSystem`NestedGrid`PackagePrivate`anyHidden$], 
                    TypeSystem`NestedGrid`PackagePrivate`isKeyDummy$], 
                    Nothing, 
                    MenuItem[
                    "Show " <> 
                    Which[TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "Item", "", 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "RowHeader", "Row", 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "ColumnHeader", "Column", True, ""], 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateHiddenItems[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, 
                    "remove"]], MenuEvaluator -> Automatic]], 
                    If[
                    Or[
                    Not[TypeSystem`NestedGrid`PackagePrivate`haveData$], 
                    TypeSystem`NestedGrid`PackagePrivate`pathEmptyQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`isKeyDummy$, 
                    And[
                    TypeSystem`NestedGrid`PackagePrivate`allHidden$, 
                    TypeSystem`NestedGrid`PackagePrivate`headerHidden$]], 
                    Nothing, 
                    MenuItem[
                    "Hide " <> 
                    Which[TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "Item", "", 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "RowHeader", "Row", 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "ColumnHeader", "Column", True, ""], 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateHiddenItems[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, "add"]], 
                    MenuEvaluator -> Automatic]], Delimiter}, 
                    If[
                    And[TypeSystem`NestedGrid`PackagePrivate`haveData$, 
                    MatchQ[TypeSystem`NestedGrid`PackagePrivate`lastPathType$, 
                    Alternatives["ColumnHeader", "KeyDummy"]], 
                    TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$, 
                    Not[TypeSystem`NestedGrid`PackagePrivate`allHidden$]], {
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`sortDirection$ =!= 
                    "Ascending", 
                    MenuItem["Sort", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateSort[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, 
                    "Ascending"]], MenuEvaluator -> Automatic], Nothing], 
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`sortDirection$ =!= 
                    "Descending", 
                    MenuItem["Reverse Sort", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateSort[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, 
                    "Descending"]], MenuEvaluator -> Automatic], Nothing], 
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`sortDirection$ =!= 
                    None, 
                    MenuItem["Unsort", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateSort[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, None]], 
                    MenuEvaluator -> Automatic], Nothing], Delimiter}, {}], {
                    MenuItem["Copy Position to Clipboard", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentPosition[
                    TypeSystem`NestedGrid`PackagePrivate`copyClip]], 
                    MenuEvaluator -> Automatic], 
                    If[TypeSystem`NestedGrid`PackagePrivate`haveData$, 
                    MenuItem["Copy Data to Clipboard", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentData[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`copyClip]], 
                    MenuEvaluator -> Automatic], Nothing], Delimiter, 
                    MenuItem["Paste Position in New Cell", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentPosition[
                    TypeSystem`NestedGrid`PackagePrivate`cellPaste]], 
                    MenuEvaluator -> Automatic], 
                    If[TypeSystem`NestedGrid`PackagePrivate`haveData$, 
                    MenuItem["Paste Data in New Cell", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentData[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`cellPaste]], 
                    MenuEvaluator -> Automatic], Nothing]}]]]]], FontFamily -> 
            "Source Sans Pro", FontSize -> 14, FontWeight -> Plain}, Dividers -> 
          All, FrameStyle -> GrayLevel[0.7490196078431373], 
          Spacings -> {0, 0}, Alignment -> Left, 
          BaseStyle -> {
           FontFamily -> "Source Sans Pro", FontSize -> 14, FontWeight -> 
            Plain}], LineBreakWithin -> False, ContextMenu -> {}, NumberMarks -> 
         False, ShowAutoStyles -> False]], 
      TypeSystem`NestedGrid`PackagePrivate`initialQ = True}, 
     Dynamic[
      TypeSystem`NestedGrid`PackagePrivate`setupViewPath[
      TypeSystem`NestedGrid`PackagePrivate`$path$$, If[
         Not[TypeSystem`NestedGrid`PackagePrivate`initialQ], 
         Module[{
          TypeSystem`NestedGrid`PackagePrivate`tmpGrid$ = $Failed, 
           TypeSystem`NestedGrid`PackagePrivate`tmpData$ = 
           TypeSystem`NestedGrid`PackagePrivate`datasetData[
            TypeSystem`NestedGrid`PackagePrivate`$state$$]}, 
          TypeSystem`NestedGrid`PackagePrivate`tmpGrid$ = If[
             FailureQ[TypeSystem`NestedGrid`PackagePrivate`tmpData$], 
             TypeSystem`NestedGrid`PackagePrivate`renderedGrid, 
             TypeSystem`NestedGrid`PackagePrivate`renderGrid[
             TypeSystem`NestedGrid`PackagePrivate`$state$$, 
              TypeSystem`NestedGrid`PackagePrivate`$path$$, 
              TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
              TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
              TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
              TypeSystem`NestedGrid`PackagePrivate`localHold[
              TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
             TypeSystem`NestedGrid`PackagePrivate`tmpData$]]; If[
            Not[
             FailureQ[TypeSystem`NestedGrid`PackagePrivate`tmpGrid$]], 
            TypeSystem`NestedGrid`PackagePrivate`renderedGrid = 
            TypeSystem`NestedGrid`PackagePrivate`tmpGrid$]; Null]]; 
       TypeSystem`NestedGrid`PackagePrivate`initialQ = False; 
       TypeSystem`NestedGrid`PackagePrivate`$vPos$$; 
       TypeSystem`NestedGrid`PackagePrivate`$hPos$$; If[
         FailureQ[TypeSystem`NestedGrid`PackagePrivate`renderedGrid], 
         TypeSystem`SparseGrid[
          TypeSystem`H["(data no longer present)"]], 
         TypeSystem`NestedGrid`PackagePrivate`renderedGrid]], 
      TrackedSymbols :> {
       TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
        TypeSystem`NestedGrid`PackagePrivate`$hPos$$}], 
     DynamicModuleValues :> {}], 
    TypeSystem`NestedGrid`PackagePrivate`$topBar$$ = Dynamic[
     TypeSystem`NestedGrid`PackagePrivate`makeFramedBar[
      TypeSystem`PackageScope`SubViewPathbar[
      TypeSystem`NestedGrid`PackagePrivate`$path$$, 
       TypeSystem`NestedGrid`PackagePrivate`updateState[
       TypeSystem`NestedGrid`PackagePrivate`$state$$, 
        TypeSystem`NestedGrid`PackagePrivate`$path$$, 
        TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
        TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
        TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
        TypeSystem`NestedGrid`PackagePrivate`localHold[
        TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]]], 
     TrackedSymbols :> {TypeSystem`NestedGrid`PackagePrivate`$path$$}], 
    TypeSystem`NestedGrid`PackagePrivate`$bottomBar$$ = Style[
     Framed[
      Dynamic[
       Replace[
       TypeSystem`NestedGrid`PackagePrivate`mouseAnnotation$$, {
        TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
           TypeSystem`NestedGrid`PackagePrivate`localHold[
           TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][Null, 
           Blank[]] -> "", TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
           TypeSystem`NestedGrid`PackagePrivate`localHold[
           TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
           Pattern[TypeSystem`NestedGrid`PackagePrivate`path$, 
            Blank[]], 
           Pattern[TypeSystem`NestedGrid`PackagePrivate`pathType$, 
            Blank[]], 
           Pattern[TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$, 
            Blank[]]] :> (
          Increment[TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger]; 
          TypeSystem`NestedGrid`PackagePrivate`$lastPath = 
           TypeSystem`NestedGrid`PackagePrivate`path$; 
          TypeSystem`NestedGrid`PackagePrivate`$lastPathType = 
           TypeSystem`NestedGrid`PackagePrivate`pathType$; 
          TypeSystem`NestedGrid`PackagePrivate`$lastPathIsLeafHeader = 
           TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$; 
          TypeSystem`NestedGrid`PackagePrivate`$lastOutputID = 
           TypeSystem`NestedGrid`PackagePrivate`localHold[
            TypeSystem`NestedGrid`PackagePrivate`$outputID$$]; 
          TypeSystem`NestedGrid`PackagePrivate`makePathTrail[
           TypeSystem`NestedGrid`PackagePrivate`path$, 
            TypeSystem`NestedGrid`PackagePrivate`makePathElements]), Null :> 
         Spacer[10], Blank[] :> Spacer[10]}], 
       TrackedSymbols :> {
        TypeSystem`NestedGrid`PackagePrivate`mouseAnnotation$$}], FrameStyle -> 
      None, ImageMargins -> 0, FrameMargins -> 0, Alignment -> Top, 
      ImageSize -> {Automatic, 15}], FontSize -> 1], 
    TypeSystem`NestedGrid`PackagePrivate`mouseAnnotation$$ = Null}, 
    DynamicWrapperBox[
     DynamicBox[ToBoxes[
       Dataset`DatasetContent[
       2, "Path" -> Hold[TypeSystem`NestedGrid`PackagePrivate`$path$$], 
        "Grid" -> Hold[TypeSystem`NestedGrid`PackagePrivate`$grid$$], "State" -> 
        Hold[TypeSystem`NestedGrid`PackagePrivate`$state$$], "VPos" -> 
        Hold[TypeSystem`NestedGrid`PackagePrivate`$vPos$$], "HPos" -> 
        Hold[TypeSystem`NestedGrid`PackagePrivate`$hPos$$], "TopBar" -> 
        Hold[TypeSystem`NestedGrid`PackagePrivate`$topBar$$], "BottomBar" -> 
        Hold[TypeSystem`NestedGrid`PackagePrivate`$bottomBar$$], "OutputID" -> 
        Hold[
          TypeSystem`NestedGrid`PackagePrivate`localHold[
          TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]], StandardForm],
      ImageSizeCache->{203.5, {83.64743637626525, 89.95256362373475}},
      TrackedSymbols:>{
       TypeSystem`NestedGrid`PackagePrivate`$state$$, 
        TypeSystem`NestedGrid`PackagePrivate`$grid$$}], 
     TypeSystem`NestedGrid`PackagePrivate`mouseAnnotation$$ = 
     MouseAnnotation[],
     ImageSizeCache->{203.5, {83.64743637626525, 89.95256362373475}}],
    BaseStyle->{LineBreakWithin -> False},
    DynamicModuleValues:>{},
    Initialization:>(TypeSystem`NestedGrid`PackagePrivate`$outputID$$ = 
     CreateUUID[]),
    UnsavedVariables:>{TypeSystem`NestedGrid`PackagePrivate`$outputID$$}],
   Deploy,
   DefaultBaseStyle->"Deploy"],
  Dataset`InterpretDataset[1],
  Editable->False,
  SelectWithContents->True,
  Selectable->False]], "Output",
 CellChangeTimes->{
  3.933650522611353*^9, 3.9336505595401783`*^9, 3.93365064581921*^9, 
   3.933650679810198*^9, 3.933650717134596*^9, {3.9336515024902*^9, 
   3.93365153484671*^9}, 3.933652100125641*^9, 3.93365218089122*^9, 
   3.933652250797266*^9, 3.933652448451135*^9, {3.933652684121128*^9, 
   3.933652688230276*^9}, 3.933653175762705*^9, 3.933653283101635*^9, {
   3.933653327280102*^9, 3.933653337005424*^9}, {3.9336534243929787`*^9, 
   3.933653456723913*^9}, 3.93365349994784*^9, 3.933722222093193*^9, {
   3.933722331567486*^9, 3.933722356983757*^9}, 3.933726566584715*^9, {
   3.933733564038128*^9, 3.933733567398039*^9}, {3.933735345810663*^9, 
   3.933735348321714*^9}, 3.9337379483798547`*^9, 3.9337388157927036`*^9, 
   3.9338005755285625`*^9, 3.933801384610229*^9, 3.933819864097719*^9, 
   3.933903899967682*^9},
 CellLabel->"Out[31]=",ExpressionUUID->"70479b5f-a9e0-4a49-9068-024dfceb4f48"]
}, Open  ]],

Cell["Povpre\[CHacek]no \[SHacek]tevilo obsojenih na povpre\[CHacek]no leto \
izbranih dr\[ZHacek]av", "Text",
 CellChangeTimes->{{3.9338144009101253`*^9, 3.933814443758356*^9}, 
   3.933912600545046*^9},ExpressionUUID->"96e29aab-6ce2-a546-af6b-\
05015dd20011"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"povprecjnoSteviloObsojenih", "[", "tabela_", "]"}], ":=", 
  RowBox[{"Mean", "[", "tabela", "]"}]}], "\[IndentingNewLine]", 
 RowBox[{"povprecja", "=", 
  RowBox[{"Sort", "[", 
   RowBox[{"primerjava", "[", 
    RowBox[{"Map", "[", 
     RowBox[{
      RowBox[{"povprecjnoSteviloObsojenih", "[", 
       RowBox[{"Apply", "[", 
        RowBox[{"List", ",", "#"}], "]"}], "]"}], "&"}], "]"}], "]"}], 
   "]"}]}]}], "Input",
 CellChangeTimes->{3.933814385716395*^9},
 CellLabel->"In[32]:=",ExpressionUUID->"f9c71d02-ccd6-cf4c-b05a-4ef521f9cf6e"],

Cell[BoxData[
 TagBox[
  TagBox[
   DynamicModuleBox[{TypeSystem`NestedGrid`PackagePrivate`$state$$ = <|
    "InitialData" -> <|
      "Slovenia" -> 349.06500000000005`, "Latvia" -> 415.94899999999996`, 
       "Portugal" -> 489.82799999999986`, "Sweden" -> 639.203, 
       "T\[UDoubleDot]rkiye" -> 675.238|>, "AllowEmbedding" -> True, 
     "InitialShape" -> TypeSystem`PackageScope`Limited[
       TypeSystem`PackageScope`ColumnShape[
        TypeSystem`PackageScope`KeyValueShape[
         TypeSystem`PackageScope`AtomShape[84.], 
         TypeSystem`PackageScope`AtomShape[60]]], 5, 
       DirectedInfinity[1], {}], "InitialType" -> TypeSystem`Assoc[
       TypeSystem`Atom[
        TypeSystem`Enumeration[
        "Latvia", "Portugal", "Slovenia", "Sweden", "T\[UDoubleDot]rkiye"]], 
       TypeSystem`Atom[Real], 5], "Meta" -> <||>, "RowTarget" -> 20, 
     "ColumnTarget" -> 10, "Shape" -> TypeSystem`PackageScope`Limited[
       TypeSystem`PackageScope`ColumnShape[
        TypeSystem`PackageScope`KeyValueShape[
         TypeSystem`PackageScope`AtomShape[84.], 
         TypeSystem`PackageScope`AtomShape[60]]], 5, 
       DirectedInfinity[1], {}], "Type" -> TypeSystem`Assoc[
       TypeSystem`Atom[
        TypeSystem`Enumeration[
        "Latvia", "Portugal", "Slovenia", "Sweden", "T\[UDoubleDot]rkiye"]], 
       TypeSystem`Atom[Real], 5], "Path" -> {}, "DisplayedRowCount" -> 5, 
     "DisplayedColumnCount" -> 1, "DataRowCount" -> 5, "DataColumnCount" -> 1,
      "SortPaths" -> {}, "SortDirections" -> {}, "HiddenItemsMap" -> Null, 
     "UpdateType" -> 1|>, TypeSystem`NestedGrid`PackagePrivate`$outputID$$, 
    TypeSystem`NestedGrid`PackagePrivate`$path$$ = {}, 
    TypeSystem`NestedGrid`PackagePrivate`$vPos$$ = 1, 
    TypeSystem`NestedGrid`PackagePrivate`$hPos$$ = 1, 
    TypeSystem`NestedGrid`PackagePrivate`$grid$$ = 
    DynamicModule[{TypeSystem`NestedGrid`PackagePrivate`renderedGrid = Deploy[
        Style[
         Grid[{{
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["Slovenia", 
                  Style[
                  "Slovenia", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    Key["Slovenia"]}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["Slovenia"]}, "RowHeader", False], "Mouse"], 
              ImageSize -> {{84., Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["349.065"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["Slovenia"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["Latvia", 
                  Style[
                  "Latvia", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    Key["Latvia"]}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["Latvia"]}, "RowHeader", False], "Mouse"], 
              ImageSize -> {{84., Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["415.949"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["Latvia"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["Portugal", 
                  Style[
                  "Portugal", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    Key["Portugal"]}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["Portugal"]}, "RowHeader", False], "Mouse"], 
              ImageSize -> {{84., Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["489.828"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["Portugal"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["Sweden", 
                  Style[
                  "Sweden", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    Key["Sweden"]}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["Sweden"]}, "RowHeader", False], "Mouse"], 
              ImageSize -> {{84., Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["639.203"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["Sweden"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["T\[UDoubleDot]rkiye", 
                  Style[
                  "T\[UDoubleDot]rkiye", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    Key["T\[UDoubleDot]rkiye"]}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["T\[UDoubleDot]rkiye"]}, "RowHeader", False], "Mouse"], 
              ImageSize -> {{84., Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["675.238"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["T\[UDoubleDot]rkiye"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}}, 
          BaseStyle -> {
           ContextMenu -> 
            Dynamic[TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger; 
              Which[TypeSystem`NestedGrid`PackagePrivate`$lastOutputID =!= 
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                 TypeSystem`NestedGrid`PackagePrivate`$outputID$$], {}, 
                TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger === 
                TypeSystem`NestedGrid`PackagePrivate`$lastContextMenuTrigger, 
                TypeSystem`NestedGrid`PackagePrivate`$lastContextMenu, True, 
                TypeSystem`NestedGrid`PackagePrivate`$lastContextMenuTrigger = 
                 TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger; 
                TypeSystem`NestedGrid`PackagePrivate`$lastContextMenu = 
                 Block[{TypeSystem`NestedGrid`PackagePrivate`$globalScrollPos = \
{TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$}}, 
                   
                   With[{TypeSystem`NestedGrid`PackagePrivate`lastPath$ = 
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ = 
                    TypeSystem`NestedGrid`PackagePrivate`$lastPathType, 
                    TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$ = 
                    TypeSystem`NestedGrid`PackagePrivate`$\
lastPathIsLeafHeader, TypeSystem`NestedGrid`PackagePrivate`headerHidden$ = And[
                    MatchQ[TypeSystem`NestedGrid`PackagePrivate`$lastPathType, 
                    Alternatives["RowHeader", "ColumnHeader"]], 
                    TypeSystem`NestedGrid`PackagePrivate`headerHiddenQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$]], 
                    TypeSystem`NestedGrid`PackagePrivate`allHidden$ = 
                    TypeSystem`NestedGrid`PackagePrivate`allHiddenQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`anyHidden$ = 
                    TypeSystem`NestedGrid`PackagePrivate`anyHiddenQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`sortDirection$ = 
                    TypeSystem`NestedGrid`PackagePrivate`columnSortDirection[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$[
                    "SortPaths"], 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$[
                    "SortDirections"]], 
                    TypeSystem`NestedGrid`PackagePrivate`haveData$ = Not[
                    FailureQ[
                    TypeSystem`NestedGrid`PackagePrivate`datasetInitialData[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$]]], 
                    TypeSystem`NestedGrid`PackagePrivate`isKeyDummy$ = Not[
                    FreeQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, Keys]]}, 
                    Join[{
                    If[
                    Or[
                    Not[TypeSystem`NestedGrid`PackagePrivate`haveData$], 
                    Not[TypeSystem`NestedGrid`PackagePrivate`anyHidden$], 
                    TypeSystem`NestedGrid`PackagePrivate`isKeyDummy$], 
                    Nothing, 
                    MenuItem[
                    "Show " <> 
                    Which[TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "Item", "", 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "RowHeader", "Row", 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "ColumnHeader", "Column", True, ""], 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateHiddenItems[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, 
                    "remove"]], MenuEvaluator -> Automatic]], 
                    If[
                    Or[
                    Not[TypeSystem`NestedGrid`PackagePrivate`haveData$], 
                    TypeSystem`NestedGrid`PackagePrivate`pathEmptyQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`isKeyDummy$, 
                    And[
                    TypeSystem`NestedGrid`PackagePrivate`allHidden$, 
                    TypeSystem`NestedGrid`PackagePrivate`headerHidden$]], 
                    Nothing, 
                    MenuItem[
                    "Hide " <> 
                    Which[TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "Item", "", 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "RowHeader", "Row", 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "ColumnHeader", "Column", True, ""], 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateHiddenItems[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, "add"]], 
                    MenuEvaluator -> Automatic]], Delimiter}, 
                    If[
                    And[TypeSystem`NestedGrid`PackagePrivate`haveData$, 
                    MatchQ[TypeSystem`NestedGrid`PackagePrivate`lastPathType$, 
                    Alternatives["ColumnHeader", "KeyDummy"]], 
                    TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$, 
                    Not[TypeSystem`NestedGrid`PackagePrivate`allHidden$]], {
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`sortDirection$ =!= 
                    "Ascending", 
                    MenuItem["Sort", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateSort[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, 
                    "Ascending"]], MenuEvaluator -> Automatic], Nothing], 
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`sortDirection$ =!= 
                    "Descending", 
                    MenuItem["Reverse Sort", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateSort[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, 
                    "Descending"]], MenuEvaluator -> Automatic], Nothing], 
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`sortDirection$ =!= 
                    None, 
                    MenuItem["Unsort", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateSort[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, None]], 
                    MenuEvaluator -> Automatic], Nothing], Delimiter}, {}], {
                    MenuItem["Copy Position to Clipboard", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentPosition[
                    TypeSystem`NestedGrid`PackagePrivate`copyClip]], 
                    MenuEvaluator -> Automatic], 
                    If[TypeSystem`NestedGrid`PackagePrivate`haveData$, 
                    MenuItem["Copy Data to Clipboard", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentData[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`copyClip]], 
                    MenuEvaluator -> Automatic], Nothing], Delimiter, 
                    MenuItem["Paste Position in New Cell", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentPosition[
                    TypeSystem`NestedGrid`PackagePrivate`cellPaste]], 
                    MenuEvaluator -> Automatic], 
                    If[TypeSystem`NestedGrid`PackagePrivate`haveData$, 
                    MenuItem["Paste Data in New Cell", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentData[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`cellPaste]], 
                    MenuEvaluator -> Automatic], Nothing]}]]]]], FontFamily -> 
            "Source Sans Pro", FontSize -> 14, FontWeight -> Plain}, Dividers -> 
          All, FrameStyle -> GrayLevel[0.7490196078431373], 
          Spacings -> {0, 0}, Alignment -> Left, 
          BaseStyle -> {
           FontFamily -> "Source Sans Pro", FontSize -> 14, FontWeight -> 
            Plain}], LineBreakWithin -> False, ContextMenu -> {}, NumberMarks -> 
         False, ShowAutoStyles -> False]], 
      TypeSystem`NestedGrid`PackagePrivate`initialQ = True}, 
     Dynamic[
      TypeSystem`NestedGrid`PackagePrivate`setupViewPath[
      TypeSystem`NestedGrid`PackagePrivate`$path$$, If[
         Not[TypeSystem`NestedGrid`PackagePrivate`initialQ], 
         Module[{
          TypeSystem`NestedGrid`PackagePrivate`tmpGrid$ = $Failed, 
           TypeSystem`NestedGrid`PackagePrivate`tmpData$ = 
           TypeSystem`NestedGrid`PackagePrivate`datasetData[
            TypeSystem`NestedGrid`PackagePrivate`$state$$]}, 
          TypeSystem`NestedGrid`PackagePrivate`tmpGrid$ = If[
             FailureQ[TypeSystem`NestedGrid`PackagePrivate`tmpData$], 
             TypeSystem`NestedGrid`PackagePrivate`renderedGrid, 
             TypeSystem`NestedGrid`PackagePrivate`renderGrid[
             TypeSystem`NestedGrid`PackagePrivate`$state$$, 
              TypeSystem`NestedGrid`PackagePrivate`$path$$, 
              TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
              TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
              TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
              TypeSystem`NestedGrid`PackagePrivate`localHold[
              TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
             TypeSystem`NestedGrid`PackagePrivate`tmpData$]]; If[
            Not[
             FailureQ[TypeSystem`NestedGrid`PackagePrivate`tmpGrid$]], 
            TypeSystem`NestedGrid`PackagePrivate`renderedGrid = 
            TypeSystem`NestedGrid`PackagePrivate`tmpGrid$]; Null]]; 
       TypeSystem`NestedGrid`PackagePrivate`initialQ = False; 
       TypeSystem`NestedGrid`PackagePrivate`$vPos$$; 
       TypeSystem`NestedGrid`PackagePrivate`$hPos$$; If[
         FailureQ[TypeSystem`NestedGrid`PackagePrivate`renderedGrid], 
         TypeSystem`SparseGrid[
          TypeSystem`H["(data no longer present)"]], 
         TypeSystem`NestedGrid`PackagePrivate`renderedGrid]], 
      TrackedSymbols :> {
       TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
        TypeSystem`NestedGrid`PackagePrivate`$hPos$$}], 
     DynamicModuleValues :> {}], 
    TypeSystem`NestedGrid`PackagePrivate`$topBar$$ = Dynamic[
     TypeSystem`NestedGrid`PackagePrivate`makeFramedBar[
      TypeSystem`PackageScope`SubViewPathbar[
      TypeSystem`NestedGrid`PackagePrivate`$path$$, 
       TypeSystem`NestedGrid`PackagePrivate`updateState[
       TypeSystem`NestedGrid`PackagePrivate`$state$$, 
        TypeSystem`NestedGrid`PackagePrivate`$path$$, 
        TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
        TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
        TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
        TypeSystem`NestedGrid`PackagePrivate`localHold[
        TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]]], 
     TrackedSymbols :> {TypeSystem`NestedGrid`PackagePrivate`$path$$}], 
    TypeSystem`NestedGrid`PackagePrivate`$bottomBar$$ = Style[
     Framed[
      Dynamic[
       Replace[
       TypeSystem`NestedGrid`PackagePrivate`mouseAnnotation$$, {
        TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
           TypeSystem`NestedGrid`PackagePrivate`localHold[
           TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][Null, 
           Blank[]] -> "", TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
           TypeSystem`NestedGrid`PackagePrivate`localHold[
           TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
           Pattern[TypeSystem`NestedGrid`PackagePrivate`path$, 
            Blank[]], 
           Pattern[TypeSystem`NestedGrid`PackagePrivate`pathType$, 
            Blank[]], 
           Pattern[TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$, 
            Blank[]]] :> (
          Increment[TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger]; 
          TypeSystem`NestedGrid`PackagePrivate`$lastPath = 
           TypeSystem`NestedGrid`PackagePrivate`path$; 
          TypeSystem`NestedGrid`PackagePrivate`$lastPathType = 
           TypeSystem`NestedGrid`PackagePrivate`pathType$; 
          TypeSystem`NestedGrid`PackagePrivate`$lastPathIsLeafHeader = 
           TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$; 
          TypeSystem`NestedGrid`PackagePrivate`$lastOutputID = 
           TypeSystem`NestedGrid`PackagePrivate`localHold[
            TypeSystem`NestedGrid`PackagePrivate`$outputID$$]; 
          TypeSystem`NestedGrid`PackagePrivate`makePathTrail[
           TypeSystem`NestedGrid`PackagePrivate`path$, 
            TypeSystem`NestedGrid`PackagePrivate`makePathElements]), Null :> 
         Spacer[10], Blank[] :> Spacer[10]}], 
       TrackedSymbols :> {
        TypeSystem`NestedGrid`PackagePrivate`mouseAnnotation$$}], FrameStyle -> 
      None, ImageMargins -> 0, FrameMargins -> 0, Alignment -> Top, 
      ImageSize -> {Automatic, 15}], FontSize -> 1], 
    TypeSystem`NestedGrid`PackagePrivate`mouseAnnotation$$ = Null}, 
    DynamicWrapperBox[
     DynamicBox[ToBoxes[
       Dataset`DatasetContent[
       2, "Path" -> Hold[TypeSystem`NestedGrid`PackagePrivate`$path$$], 
        "Grid" -> Hold[TypeSystem`NestedGrid`PackagePrivate`$grid$$], "State" -> 
        Hold[TypeSystem`NestedGrid`PackagePrivate`$state$$], "VPos" -> 
        Hold[TypeSystem`NestedGrid`PackagePrivate`$vPos$$], "HPos" -> 
        Hold[TypeSystem`NestedGrid`PackagePrivate`$hPos$$], "TopBar" -> 
        Hold[TypeSystem`NestedGrid`PackagePrivate`$topBar$$], "BottomBar" -> 
        Hold[TypeSystem`NestedGrid`PackagePrivate`$bottomBar$$], "OutputID" -> 
        Hold[
          TypeSystem`NestedGrid`PackagePrivate`localHold[
          TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]], StandardForm],
      ImageSizeCache->{162.7, {83.64743637626525, 89.95256362373475}},
      TrackedSymbols:>{
       TypeSystem`NestedGrid`PackagePrivate`$state$$, 
        TypeSystem`NestedGrid`PackagePrivate`$grid$$}], 
     TypeSystem`NestedGrid`PackagePrivate`mouseAnnotation$$ = 
     MouseAnnotation[],
     ImageSizeCache->{162.7, {83.64743637626525, 89.95256362373475}}],
    BaseStyle->{LineBreakWithin -> False},
    DynamicModuleValues:>{},
    Initialization:>(TypeSystem`NestedGrid`PackagePrivate`$outputID$$ = 
     CreateUUID[]),
    UnsavedVariables:>{TypeSystem`NestedGrid`PackagePrivate`$outputID$$}],
   Deploy,
   DefaultBaseStyle->"Deploy"],
  Dataset`InterpretDataset[1],
  Editable->False,
  SelectWithContents->True,
  Selectable->False]], "Output",
 CellChangeTimes->{3.933814390785858*^9, 3.933819864196293*^9, 
  3.933903900062729*^9},
 CellLabel->"Out[33]=",ExpressionUUID->"985c7ad7-efb8-a049-a0c1-26d11b01aac3"]
}, Open  ]],

Cell["\<\
Izra\[CHacek]unal sem povpre\[CHacek]no \[SHacek]tevilo obsojenih na povpre\
\[CHacek]no leto izbranih dr\[ZHacek]av. Nato sem z pomo\[CHacek]jo Select \
stavka izlu\[SHacek]\[CHacek]il vse dr\[ZHacek]ave, ki imajo \
povpre\[CHacek]no na leto manj obsojenih. Obravnaval sem samo dr\[ZHacek]ave, \
katere so podatke bele\[ZHacek]ile vsako leto.\
\>", "Text",
 CellChangeTimes->{{3.933735876998516*^9, 3.933735886526535*^9}, {
   3.933735926142969*^9, 3.933736093631998*^9}, 
   3.933736144631296*^9},ExpressionUUID->"97b2c418-ca59-ac40-9a25-\
67b608a4f86e"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"povprecjePovprecji", " ", "=", 
   RowBox[{"Mean", "[", 
    RowBox[{"Mean", " ", "/@", " ", "primerjava"}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{"StringJoin", "[", 
  RowBox[{
  "\"\<povprecje obsojenih na povprecno leto izbranih drzav je \>\"", ",", 
   " ", 
   RowBox[{"ToString", "[", "povprecjePovprecji", "]"}]}], 
  "]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"kandidati", " ", "=", 
   RowBox[{"Select", "[", 
    RowBox[{"vsiObsojeni", ",", 
     RowBox[{
      RowBox[{"NumericQ", "[", 
       RowBox[{"Mean", "[", "#", "]"}], "]"}], "&"}]}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{"Select", "[", 
  RowBox[{"kandidati", ",", 
   RowBox[{
    RowBox[{
     RowBox[{"Mean", "[", "#", "]"}], "<", "povprecjePovprecji"}], "&"}]}], 
  "]"}], "\[IndentingNewLine]", 
 RowBox[{"Keys", "[", "kandidati", "]"}]}], "Input",
 CellChangeTimes->CompressedData["
1:eJxTTMoPSmViYGAQAWIQvSHXd/9vv7eOJxkfHADRDjM0T4PoFqGHYPrrGt4U
Bv+3jmvyDVJB9IKF6pkg2o7pYQGI7jzPVwGiG3qTK0H0E+OuJSBa4/2VpSA6
5/bZtSA6avnadWD5WqkdIHr38QdHQHTBil2XQbQgw5EHIDqm6dp3EP3S/dNv
sPqvCoKMQJpjraI4iN6ytFgeRBcEPgXTP+bzqIDotdUPVEH0Cx9/fRB9IYfX
EEQ/O6huAaL9F4tbgegp3jLJIHoWt0w2iL7ov2sNiOac1bgVRAdYrN0Fog2a
Mg6D6IhY9TnqQFog5wiY/nF/zUIQvcPp7WIQDQCrlpOe
  "],
 CellLabel->"In[34]:=",ExpressionUUID->"f8218c00-2a22-514b-a05a-d86d2bf181e0"],

Cell[BoxData["\<\"povprecje obsojenih na povprecno leto izbranih drzav je \
513.857\"\>"], "Output",
 CellChangeTimes->{
  3.933734439870201*^9, 3.93373456945253*^9, {3.933734618011833*^9, 
   3.9337346285048885`*^9}, 3.933734662664719*^9, 3.933734850564692*^9, 
   3.933734881882311*^9, {3.933735060175713*^9, 3.9337350986006145`*^9}, 
   3.9337351681688576`*^9, 3.9337352156648827`*^9, 3.9337353054844036`*^9, {
   3.9337353569035683`*^9, 3.9337353772515697`*^9}, {3.933735708741661*^9, 
   3.933735720651291*^9}, {3.933735754140127*^9, 3.9337357707057095`*^9}, 
   3.933736299910599*^9, 3.933736366730013*^9, {3.9337364131849785`*^9, 
   3.933736476742962*^9}, 3.9337379511241245`*^9, 3.933738817946457*^9, 
   3.933800575613077*^9, 3.9338013846902313`*^9, 3.933813991398485*^9, {
   3.933814029754343*^9, 3.933814048609112*^9}, 3.9338198642878017`*^9, 
   3.933903900151243*^9},
 CellLabel->"Out[35]=",ExpressionUUID->"5338fa41-6fdd-e54e-b12f-79ea0ab0ba34"],

Cell[BoxData[
 TagBox[
  TagBox[
   DynamicModuleBox[{TypeSystem`NestedGrid`PackagePrivate`$state$$ = <|
    "InitialData" -> <|
      "Bulgaria" -> <|
        "2013" -> 468.29, "2014" -> 439.56, "2015" -> 385.81, "2016" -> 
         395.61, "2017" -> 363.29, "2018" -> 340.04, "2019" -> 334.13, "2020" -> 
         314.88, "2021" -> 348.74, "2022" -> 351.62|>, 
       "Estonia" -> <|
        "2013" -> 642.11, "2014" -> 582.91, "2015" -> 560.89, "2016" -> 
         578.98, "2017" -> 510.32, "2018" -> 432.25, "2019" -> 430.47, "2020" -> 
         372.39, "2021" -> 343.52, "2022" -> 288.11|>, 
       "Croatia" -> <|
        "2013" -> 402.66, "2014" -> 363.85, "2015" -> 307.01, "2016" -> 
         328.75, "2017" -> 299.07, "2018" -> 296.38, "2019" -> 326.16, "2020" -> 
         293.29, "2021" -> 310.92, "2022" -> 326.98|>, 
       "Latvia" -> <|
        "2013" -> 426.22, "2014" -> 460.31, "2015" -> 481.25, "2016" -> 
         453.49, "2017" -> 474.95, "2018" -> 443.92, "2019" -> 421.83, "2020" -> 
         371.81, "2021" -> 361.76, "2022" -> 263.95|>, 
       "Netherlands" -> <|
        "2013" -> 549.42, "2014" -> 528.12, "2015" -> 541.08, "2016" -> 
         481.76, "2017" -> 480.46, "2018" -> 457.17, "2019" -> 444.55, "2020" -> 
         341.48, "2021" -> 355.37, "2022" -> 355.55|>, 
       "Portugal" -> <|
        "2013" -> 678.64, "2014" -> 506.95, "2015" -> 569.9, "2016" -> 546.01,
          "2017" -> 504.08, "2018" -> 453.68, "2019" -> 440.92, "2020" -> 
         341.72, "2021" -> 414.4, "2022" -> 441.98|>, 
       "Romania" -> <|
        "2013" -> 235.43, "2014" -> 252.37, "2015" -> 212.76, "2016" -> 
         165.58, "2017" -> 180.19, "2018" -> 164.87, "2019" -> 173.49, "2020" -> 
         162.88, "2021" -> 183.93, "2022" -> 172.81|>, 
       "Slovenia" -> <|
        "2013" -> 571.1, "2014" -> 472.03, "2015" -> 399.49, "2016" -> 339.41,
          "2017" -> 315.65, "2018" -> 305.97, "2019" -> 300.64, "2020" -> 
         238.9, "2021" -> 283.27, "2022" -> 264.19|>, 
       "Serbia" -> <|
        "2013" -> 485.82, "2014" -> 523.45, "2015" -> 493.58, "2016" -> 
         488.34, "2017" -> 474.3, "2018" -> 447.02, "2019" -> 427.76, "2020" -> 
         385.84, "2021" -> 420.44, "2022" -> 403.3|>|>, "AllowEmbedding" -> 
     True, "InitialShape" -> TypeSystem`PackageScope`HeaderShape[<|{All, 
          TypeSystem`PackageScope`KeyDummy[3]} -> 1, {All, "2013"} -> 
        1, {All, "2014"} -> 1, {All, "2015"} -> 1, {All, "2016"} -> 
        1, {All, "2017"} -> 1, {All, "2018"} -> 1, {All, "2019"} -> 
        1, {All, "2020"} -> 1, {All, "2021"} -> 1, {All, "2022"} -> 1|>, 
       TypeSystem`PackageScope`Limited[
        TypeSystem`PackageScope`ColumnShape[
         TypeSystem`PackageScope`KeyValueShape[
          TypeSystem`PackageScope`AtomShape[123.20000000000002`], 
          TypeSystem`PackageScope`Limited[
           
           TypeSystem`PackageScope`RowShape[<|
            "2013" -> TypeSystem`PackageScope`AtomShape[60], "2014" -> 
             TypeSystem`PackageScope`AtomShape[60], "2015" -> 
             TypeSystem`PackageScope`AtomShape[60], "2016" -> 
             TypeSystem`PackageScope`AtomShape[60], "2017" -> 
             TypeSystem`PackageScope`AtomShape[60], "2018" -> 
             TypeSystem`PackageScope`AtomShape[60], "2019" -> 
             TypeSystem`PackageScope`AtomShape[60], "2020" -> 
             TypeSystem`PackageScope`AtomShape[60], "2021" -> 
             TypeSystem`PackageScope`AtomShape[60], "2022" -> 
             TypeSystem`PackageScope`AtomShape[60]|>], 
           DirectedInfinity[1], 10, {All}]]], 9, 
        DirectedInfinity[1], {}]], "InitialType" -> TypeSystem`Assoc[
       TypeSystem`Atom[String], 
       TypeSystem`Struct[{
        "2013", "2014", "2015", "2016", "2017", "2018", "2019", "2020", 
         "2021", "2022"}, {
         TypeSystem`Atom[Real], 
         TypeSystem`Atom[Real], 
         TypeSystem`Atom[Real], 
         TypeSystem`Atom[Real], 
         TypeSystem`Atom[Real], 
         TypeSystem`Atom[Real], 
         TypeSystem`Atom[Real], 
         TypeSystem`Atom[Real], 
         TypeSystem`Atom[Real], 
         TypeSystem`Atom[Real]}], 9], "Meta" -> <||>, "RowTarget" -> 20, 
     "ColumnTarget" -> 10, "Shape" -> 
     TypeSystem`PackageScope`HeaderShape[<|{All, 
          TypeSystem`PackageScope`KeyDummy[3]} -> 1, {All, "2013"} -> 
        1, {All, "2014"} -> 1, {All, "2015"} -> 1, {All, "2016"} -> 
        1, {All, "2017"} -> 1, {All, "2018"} -> 1, {All, "2019"} -> 
        1, {All, "2020"} -> 1, {All, "2021"} -> 1, {All, "2022"} -> 1|>, 
       TypeSystem`PackageScope`Limited[
        TypeSystem`PackageScope`ColumnShape[
         TypeSystem`PackageScope`KeyValueShape[
          TypeSystem`PackageScope`AtomShape[123.20000000000002`], 
          TypeSystem`PackageScope`Limited[
           
           TypeSystem`PackageScope`RowShape[<|
            "2013" -> TypeSystem`PackageScope`AtomShape[60], "2014" -> 
             TypeSystem`PackageScope`AtomShape[60], "2015" -> 
             TypeSystem`PackageScope`AtomShape[60], "2016" -> 
             TypeSystem`PackageScope`AtomShape[60], "2017" -> 
             TypeSystem`PackageScope`AtomShape[60], "2018" -> 
             TypeSystem`PackageScope`AtomShape[60], "2019" -> 
             TypeSystem`PackageScope`AtomShape[60], "2020" -> 
             TypeSystem`PackageScope`AtomShape[60], "2021" -> 
             TypeSystem`PackageScope`AtomShape[60], "2022" -> 
             TypeSystem`PackageScope`AtomShape[60]|>], 
           DirectedInfinity[1], 10, {All}]]], 9, 
        DirectedInfinity[1], {}]], "Type" -> TypeSystem`Assoc[
       TypeSystem`Atom[String], 
       TypeSystem`Struct[{
        "2013", "2014", "2015", "2016", "2017", "2018", "2019", "2020", 
         "2021", "2022"}, {
         TypeSystem`Atom[Real], 
         TypeSystem`Atom[Real], 
         TypeSystem`Atom[Real], 
         TypeSystem`Atom[Real], 
         TypeSystem`Atom[Real], 
         TypeSystem`Atom[Real], 
         TypeSystem`Atom[Real], 
         TypeSystem`Atom[Real], 
         TypeSystem`Atom[Real], 
         TypeSystem`Atom[Real]}], 9], "Path" -> {}, "DisplayedRowCount" -> 9, 
     "DisplayedColumnCount" -> 10, "DataRowCount" -> 9, "DataColumnCount" -> 
     10, "SortPaths" -> {}, "SortDirections" -> {}, "HiddenItemsMap" -> Null, 
     "UpdateType" -> 1|>, TypeSystem`NestedGrid`PackagePrivate`$outputID$$, 
    TypeSystem`NestedGrid`PackagePrivate`$path$$ = {}, 
    TypeSystem`NestedGrid`PackagePrivate`$vPos$$ = 1, 
    TypeSystem`NestedGrid`PackagePrivate`$hPos$$ = 1, 
    TypeSystem`NestedGrid`PackagePrivate`$grid$$ = 
    DynamicModule[{TypeSystem`NestedGrid`PackagePrivate`renderedGrid = Deploy[
        Style[
         Grid[{{
            Item[
             Pane[
              Annotation[
               Mouseover[
                
                Graphics[{}, ImageSize -> 6, BaselinePosition -> 
                 Scaled[-0.15]], 
                Graphics[{
                  GrayLevel[0.6], 
                  
                  Polygon[{{2^Rational[-1, 2], -2^Rational[-1, 2]}, {
                    2^Rational[-1, 2], 2^
                    Rational[-1, 2]}, {-2^Rational[-1, 2], 2^
                    Rational[-1, 2]}, {-2^Rational[-1, 2], -2^
                    Rational[-1, 2]}}]}, ImageSize -> 6, BaselinePosition -> 
                 Scaled[-0.15]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                All, Keys}, "KeyDummy", True], "Mouse"], 
              ImageSize -> {{1, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["2013", 
                  Style[
                  "2013", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                   All, "2013"}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                All, "2013"}, "ColumnHeader", True], "Mouse"], 
              ImageSize -> {{1, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["2014", 
                  Style[
                  "2014", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                   All, "2014"}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                All, "2014"}, "ColumnHeader", True], "Mouse"], 
              ImageSize -> {{1, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["2015", 
                  Style[
                  "2015", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                   All, "2015"}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                All, "2015"}, "ColumnHeader", True], "Mouse"], 
              ImageSize -> {{1, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["2016", 
                  Style[
                  "2016", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                   All, "2016"}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                All, "2016"}, "ColumnHeader", True], "Mouse"], 
              ImageSize -> {{1, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["2017", 
                  Style[
                  "2017", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                   All, "2017"}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                All, "2017"}, "ColumnHeader", True], "Mouse"], 
              ImageSize -> {{1, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["2018", 
                  Style[
                  "2018", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                   All, "2018"}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                All, "2018"}, "ColumnHeader", True], "Mouse"], 
              ImageSize -> {{1, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["2019", 
                  Style[
                  "2019", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                   All, "2019"}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                All, "2019"}, "ColumnHeader", True], "Mouse"], 
              ImageSize -> {{1, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["2020", 
                  Style[
                  "2020", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                   All, "2020"}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                All, "2020"}, "ColumnHeader", True], "Mouse"], 
              ImageSize -> {{1, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["2021", 
                  Style[
                  "2021", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                   All, "2021"}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                All, "2021"}, "ColumnHeader", True], "Mouse"], 
              ImageSize -> {{1, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["2022", 
                  Style[
                  "2022", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                   All, "2022"}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                All, "2022"}, "ColumnHeader", True], "Mouse"], 
              ImageSize -> {{1, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}]}, {
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["Bulgaria", 
                  Style[
                  "Bulgaria", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    Key["Bulgaria"]}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["Bulgaria"]}, "RowHeader", False], "Mouse"], 
              ImageSize -> {{123.20000000000002`, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["468.29"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["Bulgaria"], 
                 Key["2013"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["439.56"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["Bulgaria"], 
                 Key["2014"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["385.81"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["Bulgaria"], 
                 Key["2015"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["395.61"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["Bulgaria"], 
                 Key["2016"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["363.29"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["Bulgaria"], 
                 Key["2017"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["340.04"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["Bulgaria"], 
                 Key["2018"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["334.13"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["Bulgaria"], 
                 Key["2019"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["314.88"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["Bulgaria"], 
                 Key["2020"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["348.74"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["Bulgaria"], 
                 Key["2021"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["351.62"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["Bulgaria"], 
                 Key["2022"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["Estonia", 
                  Style[
                  "Estonia", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    Key["Estonia"]}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["Estonia"]}, "RowHeader", False], "Mouse"], 
              ImageSize -> {{123.20000000000002`, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["642.11"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["Estonia"], 
                 Key["2013"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["582.91"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["Estonia"], 
                 Key["2014"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["560.89"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["Estonia"], 
                 Key["2015"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["578.98"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["Estonia"], 
                 Key["2016"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["510.32"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["Estonia"], 
                 Key["2017"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["432.25"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["Estonia"], 
                 Key["2018"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["430.47"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["Estonia"], 
                 Key["2019"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["372.39"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["Estonia"], 
                 Key["2020"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["343.52"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["Estonia"], 
                 Key["2021"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["288.11"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["Estonia"], 
                 Key["2022"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["Croatia", 
                  Style[
                  "Croatia", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    Key["Croatia"]}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["Croatia"]}, "RowHeader", False], "Mouse"], 
              ImageSize -> {{123.20000000000002`, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["402.66"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["Croatia"], 
                 Key["2013"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["363.85"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["Croatia"], 
                 Key["2014"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["307.01"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["Croatia"], 
                 Key["2015"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["328.75"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["Croatia"], 
                 Key["2016"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["299.07"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["Croatia"], 
                 Key["2017"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["296.38"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["Croatia"], 
                 Key["2018"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["326.16"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["Croatia"], 
                 Key["2019"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["293.29"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["Croatia"], 
                 Key["2020"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["310.92"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["Croatia"], 
                 Key["2021"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["326.98"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["Croatia"], 
                 Key["2022"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["Latvia", 
                  Style[
                  "Latvia", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    Key["Latvia"]}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["Latvia"]}, "RowHeader", False], "Mouse"], 
              ImageSize -> {{123.20000000000002`, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["426.22"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["Latvia"], 
                 Key["2013"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["460.31"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["Latvia"], 
                 Key["2014"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["481.25"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["Latvia"], 
                 Key["2015"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["453.49"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["Latvia"], 
                 Key["2016"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["474.95"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["Latvia"], 
                 Key["2017"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["443.92"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["Latvia"], 
                 Key["2018"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["421.83"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["Latvia"], 
                 Key["2019"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["371.81"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["Latvia"], 
                 Key["2020"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["361.76"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["Latvia"], 
                 Key["2021"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["263.95"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["Latvia"], 
                 Key["2022"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["Netherlands", 
                  Style[
                  "Netherlands", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    Key["Netherlands"]}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["Netherlands"]}, "RowHeader", False], "Mouse"], 
              ImageSize -> {{123.20000000000002`, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["549.42"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["Netherlands"], 
                 Key["2013"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["528.12"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["Netherlands"], 
                 Key["2014"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["541.08"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["Netherlands"], 
                 Key["2015"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["481.76"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["Netherlands"], 
                 Key["2016"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["480.46"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["Netherlands"], 
                 Key["2017"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["457.17"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["Netherlands"], 
                 Key["2018"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["444.55"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["Netherlands"], 
                 Key["2019"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["341.48"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["Netherlands"], 
                 Key["2020"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["355.37"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["Netherlands"], 
                 Key["2021"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["355.55"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["Netherlands"], 
                 Key["2022"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["Portugal", 
                  Style[
                  "Portugal", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    Key["Portugal"]}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["Portugal"]}, "RowHeader", False], "Mouse"], 
              ImageSize -> {{123.20000000000002`, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["678.64"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["Portugal"], 
                 Key["2013"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["506.95"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["Portugal"], 
                 Key["2014"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["569.9"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["Portugal"], 
                 Key["2015"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["546.01"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["Portugal"], 
                 Key["2016"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["504.08"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["Portugal"], 
                 Key["2017"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["453.68"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["Portugal"], 
                 Key["2018"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["440.92"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["Portugal"], 
                 Key["2019"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["341.72"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["Portugal"], 
                 Key["2020"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["414.4"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["Portugal"], 
                 Key["2021"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["441.98"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["Portugal"], 
                 Key["2022"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["Romania", 
                  Style[
                  "Romania", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    Key["Romania"]}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["Romania"]}, "RowHeader", False], "Mouse"], 
              ImageSize -> {{123.20000000000002`, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["235.43"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["Romania"], 
                 Key["2013"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["252.37"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["Romania"], 
                 Key["2014"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["212.76"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["Romania"], 
                 Key["2015"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["165.58"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["Romania"], 
                 Key["2016"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["180.19"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["Romania"], 
                 Key["2017"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["164.87"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["Romania"], 
                 Key["2018"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["173.49"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["Romania"], 
                 Key["2019"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["162.88"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["Romania"], 
                 Key["2020"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["183.93"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["Romania"], 
                 Key["2021"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["172.81"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["Romania"], 
                 Key["2022"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["Slovenia", 
                  Style[
                  "Slovenia", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    Key["Slovenia"]}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["Slovenia"]}, "RowHeader", False], "Mouse"], 
              ImageSize -> {{123.20000000000002`, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["571.1"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["Slovenia"], 
                 Key["2013"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["472.03"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["Slovenia"], 
                 Key["2014"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["399.49"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["Slovenia"], 
                 Key["2015"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["339.41"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["Slovenia"], 
                 Key["2016"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["315.65"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["Slovenia"], 
                 Key["2017"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["305.97"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["Slovenia"], 
                 Key["2018"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["300.64"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["Slovenia"], 
                 Key["2019"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["238.9"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["Slovenia"], 
                 Key["2020"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["283.27"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["Slovenia"], 
                 Key["2021"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["264.19"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["Slovenia"], 
                 Key["2022"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["Serbia", 
                  Style[
                  "Serbia", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    Key["Serbia"]}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["Serbia"]}, "RowHeader", False], "Mouse"], 
              ImageSize -> {{123.20000000000002`, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["485.82"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["Serbia"], 
                 Key["2013"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["523.45"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["Serbia"], 
                 Key["2014"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["493.58"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["Serbia"], 
                 Key["2015"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["488.34"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["Serbia"], 
                 Key["2016"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["474.3"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["Serbia"], 
                 Key["2017"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["447.02"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["Serbia"], 
                 Key["2018"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["427.76"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["Serbia"], 
                 Key["2019"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["385.84"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["Serbia"], 
                 Key["2020"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["420.44"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["Serbia"], 
                 Key["2021"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["403.3"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["Serbia"], 
                 Key["2022"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}}, 
          BaseStyle -> {
           ContextMenu -> 
            Dynamic[TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger; 
              Which[TypeSystem`NestedGrid`PackagePrivate`$lastOutputID =!= 
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                 TypeSystem`NestedGrid`PackagePrivate`$outputID$$], {}, 
                TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger === 
                TypeSystem`NestedGrid`PackagePrivate`$lastContextMenuTrigger, 
                TypeSystem`NestedGrid`PackagePrivate`$lastContextMenu, True, 
                TypeSystem`NestedGrid`PackagePrivate`$lastContextMenuTrigger = 
                 TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger; 
                TypeSystem`NestedGrid`PackagePrivate`$lastContextMenu = 
                 Block[{TypeSystem`NestedGrid`PackagePrivate`$globalScrollPos = \
{TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$}}, 
                   With[{
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$ = 
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ = 
                    TypeSystem`NestedGrid`PackagePrivate`$lastPathType, 
                    TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$ = 
                    TypeSystem`NestedGrid`PackagePrivate`$\
lastPathIsLeafHeader, TypeSystem`NestedGrid`PackagePrivate`headerHidden$ = And[
                    MatchQ[TypeSystem`NestedGrid`PackagePrivate`$lastPathType, 
                    Alternatives["RowHeader", "ColumnHeader"]], 
                    TypeSystem`NestedGrid`PackagePrivate`headerHiddenQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$]], 
                    TypeSystem`NestedGrid`PackagePrivate`allHidden$ = 
                    TypeSystem`NestedGrid`PackagePrivate`allHiddenQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`anyHidden$ = 
                    TypeSystem`NestedGrid`PackagePrivate`anyHiddenQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`sortDirection$ = 
                    TypeSystem`NestedGrid`PackagePrivate`columnSortDirection[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$[
                    "SortPaths"], 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$[
                    "SortDirections"]], 
                    TypeSystem`NestedGrid`PackagePrivate`haveData$ = Not[
                    FailureQ[
                    TypeSystem`NestedGrid`PackagePrivate`datasetInitialData[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$]]], 
                    TypeSystem`NestedGrid`PackagePrivate`isKeyDummy$ = Not[
                    FreeQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, Keys]]}, 
                    Join[{
                    If[
                    Or[
                    Not[TypeSystem`NestedGrid`PackagePrivate`haveData$], 
                    Not[TypeSystem`NestedGrid`PackagePrivate`anyHidden$], 
                    TypeSystem`NestedGrid`PackagePrivate`isKeyDummy$], 
                    Nothing, 
                    MenuItem[
                    "Show " <> 
                    Which[TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "Item", "", 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "RowHeader", "Row", 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "ColumnHeader", "Column", True, ""], 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateHiddenItems[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, 
                    "remove"]], MenuEvaluator -> Automatic]], 
                    If[
                    Or[
                    Not[TypeSystem`NestedGrid`PackagePrivate`haveData$], 
                    TypeSystem`NestedGrid`PackagePrivate`pathEmptyQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`isKeyDummy$, 
                    And[
                    TypeSystem`NestedGrid`PackagePrivate`allHidden$, 
                    TypeSystem`NestedGrid`PackagePrivate`headerHidden$]], 
                    Nothing, 
                    MenuItem[
                    "Hide " <> 
                    Which[TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "Item", "", 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "RowHeader", "Row", 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "ColumnHeader", "Column", True, ""], 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateHiddenItems[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, "add"]], 
                    MenuEvaluator -> Automatic]], Delimiter}, 
                    If[
                    And[TypeSystem`NestedGrid`PackagePrivate`haveData$, 
                    MatchQ[TypeSystem`NestedGrid`PackagePrivate`lastPathType$, 
                    Alternatives["ColumnHeader", "KeyDummy"]], 
                    TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$, 
                    Not[TypeSystem`NestedGrid`PackagePrivate`allHidden$]], {
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`sortDirection$ =!= 
                    "Ascending", 
                    MenuItem["Sort", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateSort[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, 
                    "Ascending"]], MenuEvaluator -> Automatic], Nothing], 
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`sortDirection$ =!= 
                    "Descending", 
                    MenuItem["Reverse Sort", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateSort[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, 
                    "Descending"]], MenuEvaluator -> Automatic], Nothing], 
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`sortDirection$ =!= 
                    None, 
                    MenuItem["Unsort", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateSort[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, None]], 
                    MenuEvaluator -> Automatic], Nothing], Delimiter}, {}], {
                    MenuItem["Copy Position to Clipboard", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentPosition[
                    TypeSystem`NestedGrid`PackagePrivate`copyClip]], 
                    MenuEvaluator -> Automatic], 
                    If[TypeSystem`NestedGrid`PackagePrivate`haveData$, 
                    MenuItem["Copy Data to Clipboard", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentData[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`copyClip]], 
                    MenuEvaluator -> Automatic], Nothing], Delimiter, 
                    MenuItem["Paste Position in New Cell", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentPosition[
                    TypeSystem`NestedGrid`PackagePrivate`cellPaste]], 
                    MenuEvaluator -> Automatic], 
                    If[TypeSystem`NestedGrid`PackagePrivate`haveData$, 
                    MenuItem["Paste Data in New Cell", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentData[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`cellPaste]], 
                    MenuEvaluator -> Automatic], Nothing]}]]]]], FontFamily -> 
            "Source Sans Pro", FontSize -> 14, FontWeight -> Plain}, Dividers -> 
          All, FrameStyle -> GrayLevel[0.7490196078431373], 
          Spacings -> {0, 0}, Alignment -> Left, 
          BaseStyle -> {
           FontFamily -> "Source Sans Pro", FontSize -> 14, FontWeight -> 
            Plain}], LineBreakWithin -> False, ContextMenu -> {}, NumberMarks -> 
         False, ShowAutoStyles -> False]], 
      TypeSystem`NestedGrid`PackagePrivate`initialQ = True}, 
     Dynamic[
      TypeSystem`NestedGrid`PackagePrivate`setupViewPath[
      TypeSystem`NestedGrid`PackagePrivate`$path$$, If[
         Not[TypeSystem`NestedGrid`PackagePrivate`initialQ], 
         Module[{
          TypeSystem`NestedGrid`PackagePrivate`tmpGrid$ = $Failed, 
           TypeSystem`NestedGrid`PackagePrivate`tmpData$ = 
           TypeSystem`NestedGrid`PackagePrivate`datasetData[
            TypeSystem`NestedGrid`PackagePrivate`$state$$]}, 
          TypeSystem`NestedGrid`PackagePrivate`tmpGrid$ = If[
             FailureQ[TypeSystem`NestedGrid`PackagePrivate`tmpData$], 
             TypeSystem`NestedGrid`PackagePrivate`renderedGrid, 
             TypeSystem`NestedGrid`PackagePrivate`renderGrid[
             TypeSystem`NestedGrid`PackagePrivate`$state$$, 
              TypeSystem`NestedGrid`PackagePrivate`$path$$, 
              TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
              TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
              TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
              TypeSystem`NestedGrid`PackagePrivate`localHold[
              TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
             TypeSystem`NestedGrid`PackagePrivate`tmpData$]]; If[
            Not[
             FailureQ[TypeSystem`NestedGrid`PackagePrivate`tmpGrid$]], 
            TypeSystem`NestedGrid`PackagePrivate`renderedGrid = 
            TypeSystem`NestedGrid`PackagePrivate`tmpGrid$]; Null]]; 
       TypeSystem`NestedGrid`PackagePrivate`initialQ = False; 
       TypeSystem`NestedGrid`PackagePrivate`$vPos$$; 
       TypeSystem`NestedGrid`PackagePrivate`$hPos$$; If[
         FailureQ[TypeSystem`NestedGrid`PackagePrivate`renderedGrid], 
         TypeSystem`SparseGrid[
          TypeSystem`H["(data no longer present)"]], 
         TypeSystem`NestedGrid`PackagePrivate`renderedGrid]], 
      TrackedSymbols :> {
       TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
        TypeSystem`NestedGrid`PackagePrivate`$hPos$$}], 
     DynamicModuleValues :> {}], 
    TypeSystem`NestedGrid`PackagePrivate`$topBar$$ = Dynamic[
     TypeSystem`NestedGrid`PackagePrivate`makeFramedBar[
      TypeSystem`PackageScope`SubViewPathbar[
      TypeSystem`NestedGrid`PackagePrivate`$path$$, 
       TypeSystem`NestedGrid`PackagePrivate`updateState[
       TypeSystem`NestedGrid`PackagePrivate`$state$$, 
        TypeSystem`NestedGrid`PackagePrivate`$path$$, 
        TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
        TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
        TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
        TypeSystem`NestedGrid`PackagePrivate`localHold[
        TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]]], 
     TrackedSymbols :> {TypeSystem`NestedGrid`PackagePrivate`$path$$}], 
    TypeSystem`NestedGrid`PackagePrivate`$bottomBar$$ = Style[
     Framed[
      Dynamic[
       Replace[
       TypeSystem`NestedGrid`PackagePrivate`mouseAnnotation$$, {
        TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
           TypeSystem`NestedGrid`PackagePrivate`localHold[
           TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][Null, 
           Blank[]] -> "", TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
           TypeSystem`NestedGrid`PackagePrivate`localHold[
           TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
           Pattern[TypeSystem`NestedGrid`PackagePrivate`path$, 
            Blank[]], 
           Pattern[TypeSystem`NestedGrid`PackagePrivate`pathType$, 
            Blank[]], 
           Pattern[TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$, 
            Blank[]]] :> (
          Increment[TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger]; 
          TypeSystem`NestedGrid`PackagePrivate`$lastPath = 
           TypeSystem`NestedGrid`PackagePrivate`path$; 
          TypeSystem`NestedGrid`PackagePrivate`$lastPathType = 
           TypeSystem`NestedGrid`PackagePrivate`pathType$; 
          TypeSystem`NestedGrid`PackagePrivate`$lastPathIsLeafHeader = 
           TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$; 
          TypeSystem`NestedGrid`PackagePrivate`$lastOutputID = 
           TypeSystem`NestedGrid`PackagePrivate`localHold[
            TypeSystem`NestedGrid`PackagePrivate`$outputID$$]; 
          TypeSystem`NestedGrid`PackagePrivate`makePathTrail[
           TypeSystem`NestedGrid`PackagePrivate`path$, 
            TypeSystem`NestedGrid`PackagePrivate`makePathElements]), Null :> 
         Spacer[10], Blank[] :> Spacer[10]}], 
       TrackedSymbols :> {
        TypeSystem`NestedGrid`PackagePrivate`mouseAnnotation$$}], FrameStyle -> 
      None, ImageMargins -> 0, FrameMargins -> 0, Alignment -> Top, 
      ImageSize -> {Automatic, 15}], FontSize -> 1], 
    TypeSystem`NestedGrid`PackagePrivate`mouseAnnotation$$ = Null}, 
    DynamicWrapperBox[
     DynamicBox[ToBoxes[
       Dataset`DatasetContent[
       2, "Path" -> Hold[TypeSystem`NestedGrid`PackagePrivate`$path$$], 
        "Grid" -> Hold[TypeSystem`NestedGrid`PackagePrivate`$grid$$], "State" -> 
        Hold[TypeSystem`NestedGrid`PackagePrivate`$state$$], "VPos" -> 
        Hold[TypeSystem`NestedGrid`PackagePrivate`$vPos$$], "HPos" -> 
        Hold[TypeSystem`NestedGrid`PackagePrivate`$hPos$$], "TopBar" -> 
        Hold[TypeSystem`NestedGrid`PackagePrivate`$topBar$$], "BottomBar" -> 
        Hold[TypeSystem`NestedGrid`PackagePrivate`$bottomBar$$], "OutputID" -> 
        Hold[
          TypeSystem`NestedGrid`PackagePrivate`localHold[
          TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]], StandardForm],
      ImageSizeCache->{
       821.0999999999999, {160.89743637626526`, 167.20256362373476`}},
      TrackedSymbols:>{
       TypeSystem`NestedGrid`PackagePrivate`$state$$, 
        TypeSystem`NestedGrid`PackagePrivate`$grid$$}], 
     TypeSystem`NestedGrid`PackagePrivate`mouseAnnotation$$ = 
     MouseAnnotation[],
     ImageSizeCache->{
      821.0999999999999, {160.89743637626526`, 167.20256362373476`}}],
    BaseStyle->{LineBreakWithin -> False},
    DynamicModuleValues:>{},
    Initialization:>(TypeSystem`NestedGrid`PackagePrivate`$outputID$$ = 
     CreateUUID[]),
    UnsavedVariables:>{TypeSystem`NestedGrid`PackagePrivate`$outputID$$}],
   Deploy,
   DefaultBaseStyle->"Deploy"],
  Dataset`InterpretDataset[1],
  Editable->False,
  SelectWithContents->True,
  Selectable->False]], "Output",
 CellChangeTimes->{
  3.933734439870201*^9, 3.93373456945253*^9, {3.933734618011833*^9, 
   3.9337346285048885`*^9}, 3.933734662664719*^9, 3.933734850564692*^9, 
   3.933734881882311*^9, {3.933735060175713*^9, 3.9337350986006145`*^9}, 
   3.9337351681688576`*^9, 3.9337352156648827`*^9, 3.9337353054844036`*^9, {
   3.9337353569035683`*^9, 3.9337353772515697`*^9}, {3.933735708741661*^9, 
   3.933735720651291*^9}, {3.933735754140127*^9, 3.9337357707057095`*^9}, 
   3.933736299910599*^9, 3.933736366730013*^9, {3.9337364131849785`*^9, 
   3.933736476742962*^9}, 3.9337379511241245`*^9, 3.933738817946457*^9, 
   3.933800575613077*^9, 3.9338013846902313`*^9, 3.933813991398485*^9, {
   3.933814029754343*^9, 3.933814048609112*^9}, 3.9338198642878017`*^9, 
   3.933903900193245*^9},
 CellLabel->"Out[37]=",ExpressionUUID->"7680da85-afbc-1e4e-a597-ba27641ca9fa"],

Cell[BoxData[
 TagBox[
  TagBox[
   DynamicModuleBox[{TypeSystem`NestedGrid`PackagePrivate`$state$$ = <|
    "InitialData" -> {
      "Bulgaria", "Czechia", "Denmark", "Germany", "Estonia", "Spain", 
       "Croatia", "Latvia", "Lithuania", "Hungary", "Netherlands", "Austria", 
       "Portugal", "Romania", "Slovenia", "Slovakia", "Finland", "Sweden", 
       "Norway", "Switzerland", "Montenegro", "Serbia", 
       "T\[UDoubleDot]rkiye"}, "AllowEmbedding" -> True, "InitialShape" -> 
     TypeSystem`PackageScope`Limited[
       TypeSystem`PackageScope`MulticolumnShape[
       4, 6, 23, 123.20000000000002`], 23, 6, {All}], "InitialType" -> 
     TypeSystem`Vector[
       TypeSystem`Atom[String], 23], "Meta" -> <||>, "RowTarget" -> 20, 
     "ColumnTarget" -> 10, "Shape" -> TypeSystem`PackageScope`Limited[
       TypeSystem`PackageScope`MulticolumnShape[
       4, 6, 23, 123.20000000000002`], 23, 6, {All}], "Type" -> 
     TypeSystem`Vector[
       TypeSystem`Atom[String], 23], "Path" -> {}, "DisplayedRowCount" -> 4, 
     "DisplayedColumnCount" -> 6, "DataRowCount" -> 4, "DataColumnCount" -> 6,
      "SortPaths" -> {}, "SortDirections" -> {}, "HiddenItemsMap" -> Null, 
     "UpdateType" -> 1|>, TypeSystem`NestedGrid`PackagePrivate`$outputID$$, 
    TypeSystem`NestedGrid`PackagePrivate`$path$$ = {}, 
    TypeSystem`NestedGrid`PackagePrivate`$vPos$$ = 1, 
    TypeSystem`NestedGrid`PackagePrivate`$hPos$$ = 1, 
    TypeSystem`NestedGrid`PackagePrivate`$grid$$ = 
    DynamicModule[{TypeSystem`NestedGrid`PackagePrivate`renderedGrid = Deploy[
        Style[
         Grid[{{
            Item[
             Pane[
              Annotation["Bulgaria", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{1}, 
                "Item", False], "Mouse"], 
              ImageSize -> {{123.20000000000002`, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}, Frame -> {{
                GrayLevel[0.7490196078431373], 
                GrayLevel[0.7490196078431373]}, Inherited}], 
            Item[
             Pane[
              Annotation["Czechia", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{2}, 
                "Item", False], "Mouse"], 
              ImageSize -> {{123.20000000000002`, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}, Frame -> {{
                Directive[
                 Dashing[{0, Small}], 
                 RGBColor[
                 0.5098039215686274, 0.5098039215686274, 0.5098039215686274]], 
                GrayLevel[0.7490196078431373]}, Inherited}], 
            Item[
             Pane[
              Annotation["Denmark", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{3}, 
                "Item", False], "Mouse"], 
              ImageSize -> {{123.20000000000002`, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}, Frame -> {{
                Directive[
                 Dashing[{0, Small}], 
                 RGBColor[
                 0.5098039215686274, 0.5098039215686274, 0.5098039215686274]], 
                GrayLevel[0.7490196078431373]}, Inherited}], 
            Item[
             Pane[
              Annotation["Germany", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{4}, 
                "Item", False], "Mouse"], 
              ImageSize -> {{123.20000000000002`, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}, Frame -> {{
                Directive[
                 Dashing[{0, Small}], 
                 RGBColor[
                 0.5098039215686274, 0.5098039215686274, 0.5098039215686274]], 
                GrayLevel[0.7490196078431373]}, Inherited}], 
            Item[
             Pane[
              Annotation["Estonia", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{5}, 
                "Item", False], "Mouse"], 
              ImageSize -> {{123.20000000000002`, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}, Frame -> {{
                Directive[
                 Dashing[{0, Small}], 
                 RGBColor[
                 0.5098039215686274, 0.5098039215686274, 0.5098039215686274]], 
                GrayLevel[0.7490196078431373]}, Inherited}], 
            Item[
             Pane[
              Annotation["Spain", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{6}, 
                "Item", False], "Mouse"], 
              ImageSize -> {{123.20000000000002`, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}, Frame -> {{
                Directive[
                 Dashing[{0, Small}], 
                 RGBColor[
                 0.5098039215686274, 0.5098039215686274, 0.5098039215686274]], 
                GrayLevel[0.7490196078431373]}, Inherited}]}, {
            Item[
             Pane[
              Annotation["Croatia", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{7}, 
                "Item", False], "Mouse"], 
              ImageSize -> {{123.20000000000002`, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}, Frame -> {{
                GrayLevel[0.7490196078431373], 
                GrayLevel[0.7490196078431373]}, Inherited}], 
            Item[
             Pane[
              Annotation["Latvia", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{8}, 
                "Item", False], "Mouse"], 
              ImageSize -> {{123.20000000000002`, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}, Frame -> {{
                Directive[
                 Dashing[{0, Small}], 
                 RGBColor[
                 0.5098039215686274, 0.5098039215686274, 0.5098039215686274]], 
                GrayLevel[0.7490196078431373]}, Inherited}], 
            Item[
             Pane[
              Annotation["Lithuania", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{9}, 
                "Item", False], "Mouse"], 
              ImageSize -> {{123.20000000000002`, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}, Frame -> {{
                Directive[
                 Dashing[{0, Small}], 
                 RGBColor[
                 0.5098039215686274, 0.5098039215686274, 0.5098039215686274]], 
                GrayLevel[0.7490196078431373]}, Inherited}], 
            Item[
             Pane[
              Annotation["Hungary", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{10}, 
                "Item", False], "Mouse"], 
              ImageSize -> {{123.20000000000002`, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}, Frame -> {{
                Directive[
                 Dashing[{0, Small}], 
                 RGBColor[
                 0.5098039215686274, 0.5098039215686274, 0.5098039215686274]], 
                GrayLevel[0.7490196078431373]}, Inherited}], 
            Item[
             Pane[
              Annotation["Netherlands", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{11}, 
                "Item", False], "Mouse"], 
              ImageSize -> {{123.20000000000002`, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}, Frame -> {{
                Directive[
                 Dashing[{0, Small}], 
                 RGBColor[
                 0.5098039215686274, 0.5098039215686274, 0.5098039215686274]], 
                GrayLevel[0.7490196078431373]}, Inherited}], 
            Item[
             Pane[
              Annotation["Austria", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{12}, 
                "Item", False], "Mouse"], 
              ImageSize -> {{123.20000000000002`, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}, Frame -> {{
                Directive[
                 Dashing[{0, Small}], 
                 RGBColor[
                 0.5098039215686274, 0.5098039215686274, 0.5098039215686274]], 
                GrayLevel[0.7490196078431373]}, Inherited}]}, {
            Item[
             Pane[
              Annotation["Portugal", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{13}, 
                "Item", False], "Mouse"], 
              ImageSize -> {{123.20000000000002`, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}, Frame -> {{
                GrayLevel[0.7490196078431373], 
                GrayLevel[0.7490196078431373]}, Inherited}], 
            Item[
             Pane[
              Annotation["Romania", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{14}, 
                "Item", False], "Mouse"], 
              ImageSize -> {{123.20000000000002`, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}, Frame -> {{
                Directive[
                 Dashing[{0, Small}], 
                 RGBColor[
                 0.5098039215686274, 0.5098039215686274, 0.5098039215686274]], 
                GrayLevel[0.7490196078431373]}, Inherited}], 
            Item[
             Pane[
              Annotation["Slovenia", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{15}, 
                "Item", False], "Mouse"], 
              ImageSize -> {{123.20000000000002`, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}, Frame -> {{
                Directive[
                 Dashing[{0, Small}], 
                 RGBColor[
                 0.5098039215686274, 0.5098039215686274, 0.5098039215686274]], 
                GrayLevel[0.7490196078431373]}, Inherited}], 
            Item[
             Pane[
              Annotation["Slovakia", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{16}, 
                "Item", False], "Mouse"], 
              ImageSize -> {{123.20000000000002`, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}, Frame -> {{
                Directive[
                 Dashing[{0, Small}], 
                 RGBColor[
                 0.5098039215686274, 0.5098039215686274, 0.5098039215686274]], 
                GrayLevel[0.7490196078431373]}, Inherited}], 
            Item[
             Pane[
              Annotation["Finland", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{17}, 
                "Item", False], "Mouse"], 
              ImageSize -> {{123.20000000000002`, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}, Frame -> {{
                Directive[
                 Dashing[{0, Small}], 
                 RGBColor[
                 0.5098039215686274, 0.5098039215686274, 0.5098039215686274]], 
                GrayLevel[0.7490196078431373]}, Inherited}], 
            Item[
             Pane[
              Annotation["Sweden", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{18}, 
                "Item", False], "Mouse"], 
              ImageSize -> {{123.20000000000002`, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}, Frame -> {{
                Directive[
                 Dashing[{0, Small}], 
                 RGBColor[
                 0.5098039215686274, 0.5098039215686274, 0.5098039215686274]], 
                GrayLevel[0.7490196078431373]}, Inherited}]}, {
            Item[
             Pane[
              Annotation["Norway", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{19}, 
                "Item", False], "Mouse"], 
              ImageSize -> {{123.20000000000002`, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}, Frame -> {{
                GrayLevel[0.7490196078431373], 
                GrayLevel[0.7490196078431373]}, Inherited}], 
            Item[
             Pane[
              Annotation["Switzerland", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{20}, 
                "Item", False], "Mouse"], 
              ImageSize -> {{123.20000000000002`, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}, Frame -> {{
                Directive[
                 Dashing[{0, Small}], 
                 RGBColor[
                 0.5098039215686274, 0.5098039215686274, 0.5098039215686274]], 
                GrayLevel[0.7490196078431373]}, Inherited}], 
            Item[
             Pane[
              Annotation["Montenegro", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{21}, 
                "Item", False], "Mouse"], 
              ImageSize -> {{123.20000000000002`, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}, Frame -> {{
                Directive[
                 Dashing[{0, Small}], 
                 RGBColor[
                 0.5098039215686274, 0.5098039215686274, 0.5098039215686274]], 
                GrayLevel[0.7490196078431373]}, Inherited}], 
            Item[
             Pane[
              Annotation["Serbia", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{22}, 
                "Item", False], "Mouse"], 
              ImageSize -> {{123.20000000000002`, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}, Frame -> {{
                Directive[
                 Dashing[{0, Small}], 
                 RGBColor[
                 0.5098039215686274, 0.5098039215686274, 0.5098039215686274]], 
                GrayLevel[0.7490196078431373]}, Inherited}], 
            Item[
             Pane[
              Annotation["T\[UDoubleDot]rkiye", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{23}, 
                "Item", False], "Mouse"], 
              ImageSize -> {{123.20000000000002`, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}, Frame -> {{
                Directive[
                 Dashing[{0, Small}], 
                 RGBColor[
                 0.5098039215686274, 0.5098039215686274, 0.5098039215686274]], 
                GrayLevel[0.7490196078431373]}, Inherited}], 
            Item["", Frame -> {{
                Directive[
                 Dashing[{0, Small}], 
                 RGBColor[
                 0.5098039215686274, 0.5098039215686274, 0.5098039215686274]], 
                GrayLevel[0.7490196078431373]}, Inherited}]}}, 
          BaseStyle -> {
           ContextMenu -> 
            Dynamic[TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger; 
              Which[TypeSystem`NestedGrid`PackagePrivate`$lastOutputID =!= 
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                 TypeSystem`NestedGrid`PackagePrivate`$outputID$$], {}, 
                TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger === 
                TypeSystem`NestedGrid`PackagePrivate`$lastContextMenuTrigger, 
                TypeSystem`NestedGrid`PackagePrivate`$lastContextMenu, True, 
                TypeSystem`NestedGrid`PackagePrivate`$lastContextMenuTrigger = 
                 TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger; 
                TypeSystem`NestedGrid`PackagePrivate`$lastContextMenu = 
                 Block[{TypeSystem`NestedGrid`PackagePrivate`$globalScrollPos = \
{TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$}}, 
                   
                   With[{TypeSystem`NestedGrid`PackagePrivate`lastPath$ = 
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ = 
                    TypeSystem`NestedGrid`PackagePrivate`$lastPathType, 
                    TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$ = 
                    TypeSystem`NestedGrid`PackagePrivate`$\
lastPathIsLeafHeader, TypeSystem`NestedGrid`PackagePrivate`headerHidden$ = And[
                    MatchQ[TypeSystem`NestedGrid`PackagePrivate`$lastPathType, 
                    Alternatives["RowHeader", "ColumnHeader"]], 
                    TypeSystem`NestedGrid`PackagePrivate`headerHiddenQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$]], 
                    TypeSystem`NestedGrid`PackagePrivate`allHidden$ = 
                    TypeSystem`NestedGrid`PackagePrivate`allHiddenQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`anyHidden$ = 
                    TypeSystem`NestedGrid`PackagePrivate`anyHiddenQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`sortDirection$ = 
                    TypeSystem`NestedGrid`PackagePrivate`columnSortDirection[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$[
                    "SortPaths"], 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$[
                    "SortDirections"]], 
                    TypeSystem`NestedGrid`PackagePrivate`haveData$ = Not[
                    FailureQ[
                    TypeSystem`NestedGrid`PackagePrivate`datasetInitialData[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$]]], 
                    TypeSystem`NestedGrid`PackagePrivate`isKeyDummy$ = Not[
                    FreeQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, Keys]]}, 
                    Join[{
                    If[
                    Or[
                    Not[TypeSystem`NestedGrid`PackagePrivate`haveData$], 
                    Not[TypeSystem`NestedGrid`PackagePrivate`anyHidden$], 
                    TypeSystem`NestedGrid`PackagePrivate`isKeyDummy$], 
                    Nothing, 
                    MenuItem[
                    "Show " <> 
                    Which[TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "Item", "", 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "RowHeader", "Row", 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "ColumnHeader", "Column", True, ""], 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateHiddenItems[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, 
                    "remove"]], MenuEvaluator -> Automatic]], 
                    If[
                    Or[
                    Not[TypeSystem`NestedGrid`PackagePrivate`haveData$], 
                    TypeSystem`NestedGrid`PackagePrivate`pathEmptyQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`isKeyDummy$, 
                    And[
                    TypeSystem`NestedGrid`PackagePrivate`allHidden$, 
                    TypeSystem`NestedGrid`PackagePrivate`headerHidden$]], 
                    Nothing, 
                    MenuItem[
                    "Hide " <> 
                    Which[TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "Item", "", 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "RowHeader", "Row", 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "ColumnHeader", "Column", True, ""], 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateHiddenItems[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, "add"]], 
                    MenuEvaluator -> Automatic]], Delimiter}, 
                    If[
                    And[TypeSystem`NestedGrid`PackagePrivate`haveData$, 
                    MatchQ[TypeSystem`NestedGrid`PackagePrivate`lastPathType$, 
                    Alternatives["ColumnHeader", "KeyDummy"]], 
                    TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$, 
                    Not[TypeSystem`NestedGrid`PackagePrivate`allHidden$]], {
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`sortDirection$ =!= 
                    "Ascending", 
                    MenuItem["Sort", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateSort[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, 
                    "Ascending"]], MenuEvaluator -> Automatic], Nothing], 
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`sortDirection$ =!= 
                    "Descending", 
                    MenuItem["Reverse Sort", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateSort[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, 
                    "Descending"]], MenuEvaluator -> Automatic], Nothing], 
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`sortDirection$ =!= 
                    None, 
                    MenuItem["Unsort", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateSort[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, None]], 
                    MenuEvaluator -> Automatic], Nothing], Delimiter}, {}], {
                    MenuItem["Copy Position to Clipboard", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentPosition[
                    TypeSystem`NestedGrid`PackagePrivate`copyClip]], 
                    MenuEvaluator -> Automatic], 
                    If[TypeSystem`NestedGrid`PackagePrivate`haveData$, 
                    MenuItem["Copy Data to Clipboard", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentData[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`copyClip]], 
                    MenuEvaluator -> Automatic], Nothing], Delimiter, 
                    MenuItem["Paste Position in New Cell", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentPosition[
                    TypeSystem`NestedGrid`PackagePrivate`cellPaste]], 
                    MenuEvaluator -> Automatic], 
                    If[TypeSystem`NestedGrid`PackagePrivate`haveData$, 
                    MenuItem["Paste Data in New Cell", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentData[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`cellPaste]], 
                    MenuEvaluator -> Automatic], Nothing]}]]]]], FontFamily -> 
            "Source Sans Pro", FontSize -> 14, FontWeight -> Plain}, Dividers -> 
          All, FrameStyle -> GrayLevel[0.7490196078431373], 
          Spacings -> {0, 0}, Alignment -> Left, 
          BaseStyle -> {
           FontFamily -> "Source Sans Pro", FontSize -> 14, FontWeight -> 
            Plain}], LineBreakWithin -> False, ContextMenu -> {}, NumberMarks -> 
         False, ShowAutoStyles -> False]], 
      TypeSystem`NestedGrid`PackagePrivate`initialQ = True}, 
     Dynamic[
      TypeSystem`NestedGrid`PackagePrivate`setupViewPath[
      TypeSystem`NestedGrid`PackagePrivate`$path$$, If[
         Not[TypeSystem`NestedGrid`PackagePrivate`initialQ], 
         Module[{
          TypeSystem`NestedGrid`PackagePrivate`tmpGrid$ = $Failed, 
           TypeSystem`NestedGrid`PackagePrivate`tmpData$ = 
           TypeSystem`NestedGrid`PackagePrivate`datasetData[
            TypeSystem`NestedGrid`PackagePrivate`$state$$]}, 
          TypeSystem`NestedGrid`PackagePrivate`tmpGrid$ = If[
             FailureQ[TypeSystem`NestedGrid`PackagePrivate`tmpData$], 
             TypeSystem`NestedGrid`PackagePrivate`renderedGrid, 
             TypeSystem`NestedGrid`PackagePrivate`renderGrid[
             TypeSystem`NestedGrid`PackagePrivate`$state$$, 
              TypeSystem`NestedGrid`PackagePrivate`$path$$, 
              TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
              TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
              TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
              TypeSystem`NestedGrid`PackagePrivate`localHold[
              TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
             TypeSystem`NestedGrid`PackagePrivate`tmpData$]]; If[
            Not[
             FailureQ[TypeSystem`NestedGrid`PackagePrivate`tmpGrid$]], 
            TypeSystem`NestedGrid`PackagePrivate`renderedGrid = 
            TypeSystem`NestedGrid`PackagePrivate`tmpGrid$]; Null]]; 
       TypeSystem`NestedGrid`PackagePrivate`initialQ = False; 
       TypeSystem`NestedGrid`PackagePrivate`$vPos$$; 
       TypeSystem`NestedGrid`PackagePrivate`$hPos$$; If[
         FailureQ[TypeSystem`NestedGrid`PackagePrivate`renderedGrid], 
         TypeSystem`SparseGrid[
          TypeSystem`H["(data no longer present)"]], 
         TypeSystem`NestedGrid`PackagePrivate`renderedGrid]], 
      TrackedSymbols :> {
       TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
        TypeSystem`NestedGrid`PackagePrivate`$hPos$$}], 
     DynamicModuleValues :> {}], 
    TypeSystem`NestedGrid`PackagePrivate`$topBar$$ = Dynamic[
     TypeSystem`NestedGrid`PackagePrivate`makeFramedBar[
      TypeSystem`PackageScope`SubViewPathbar[
      TypeSystem`NestedGrid`PackagePrivate`$path$$, 
       TypeSystem`NestedGrid`PackagePrivate`updateState[
       TypeSystem`NestedGrid`PackagePrivate`$state$$, 
        TypeSystem`NestedGrid`PackagePrivate`$path$$, 
        TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
        TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
        TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
        TypeSystem`NestedGrid`PackagePrivate`localHold[
        TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]]], 
     TrackedSymbols :> {TypeSystem`NestedGrid`PackagePrivate`$path$$}], 
    TypeSystem`NestedGrid`PackagePrivate`$bottomBar$$ = Style[
     Framed[
      Dynamic[
       Replace[
       TypeSystem`NestedGrid`PackagePrivate`mouseAnnotation$$, {
        TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
           TypeSystem`NestedGrid`PackagePrivate`localHold[
           TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][Null, 
           Blank[]] -> "", TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
           TypeSystem`NestedGrid`PackagePrivate`localHold[
           TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
           Pattern[TypeSystem`NestedGrid`PackagePrivate`path$, 
            Blank[]], 
           Pattern[TypeSystem`NestedGrid`PackagePrivate`pathType$, 
            Blank[]], 
           Pattern[TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$, 
            Blank[]]] :> (
          Increment[TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger]; 
          TypeSystem`NestedGrid`PackagePrivate`$lastPath = 
           TypeSystem`NestedGrid`PackagePrivate`path$; 
          TypeSystem`NestedGrid`PackagePrivate`$lastPathType = 
           TypeSystem`NestedGrid`PackagePrivate`pathType$; 
          TypeSystem`NestedGrid`PackagePrivate`$lastPathIsLeafHeader = 
           TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$; 
          TypeSystem`NestedGrid`PackagePrivate`$lastOutputID = 
           TypeSystem`NestedGrid`PackagePrivate`localHold[
            TypeSystem`NestedGrid`PackagePrivate`$outputID$$]; 
          TypeSystem`NestedGrid`PackagePrivate`makePathTrail[
           TypeSystem`NestedGrid`PackagePrivate`path$, 
            TypeSystem`NestedGrid`PackagePrivate`makePathElements]), Null :> 
         Spacer[10], Blank[] :> Spacer[10]}], 
       TrackedSymbols :> {
        TypeSystem`NestedGrid`PackagePrivate`mouseAnnotation$$}], FrameStyle -> 
      None, ImageMargins -> 0, FrameMargins -> 0, Alignment -> Top, 
      ImageSize -> {Automatic, 15}], FontSize -> 1], 
    TypeSystem`NestedGrid`PackagePrivate`mouseAnnotation$$ = Null}, 
    DynamicWrapperBox[
     DynamicBox[ToBoxes[
       Dataset`DatasetContent[
       2, "Path" -> Hold[TypeSystem`NestedGrid`PackagePrivate`$path$$], 
        "Grid" -> Hold[TypeSystem`NestedGrid`PackagePrivate`$grid$$], "State" -> 
        Hold[TypeSystem`NestedGrid`PackagePrivate`$state$$], "VPos" -> 
        Hold[TypeSystem`NestedGrid`PackagePrivate`$vPos$$], "HPos" -> 
        Hold[TypeSystem`NestedGrid`PackagePrivate`$hPos$$], "TopBar" -> 
        Hold[TypeSystem`NestedGrid`PackagePrivate`$topBar$$], "BottomBar" -> 
        Hold[TypeSystem`NestedGrid`PackagePrivate`$bottomBar$$], "OutputID" -> 
        Hold[
          TypeSystem`NestedGrid`PackagePrivate`localHold[
          TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]], StandardForm],
      ImageSizeCache->{
       793.0999999999999, {68.19743637626524, 74.50256362373474}},
      TrackedSymbols:>{
       TypeSystem`NestedGrid`PackagePrivate`$state$$, 
        TypeSystem`NestedGrid`PackagePrivate`$grid$$}], 
     TypeSystem`NestedGrid`PackagePrivate`mouseAnnotation$$ = 
     MouseAnnotation[],
     ImageSizeCache->{
      793.0999999999999, {68.19743637626524, 74.50256362373474}}],
    BaseStyle->{LineBreakWithin -> False},
    DynamicModuleValues:>{},
    Initialization:>(TypeSystem`NestedGrid`PackagePrivate`$outputID$$ = 
     CreateUUID[]),
    UnsavedVariables:>{TypeSystem`NestedGrid`PackagePrivate`$outputID$$}],
   Deploy,
   DefaultBaseStyle->"Deploy"],
  Dataset`InterpretDataset[1],
  Editable->False,
  SelectWithContents->True,
  Selectable->False]], "Output",
 CellChangeTimes->{
  3.933734439870201*^9, 3.93373456945253*^9, {3.933734618011833*^9, 
   3.9337346285048885`*^9}, 3.933734662664719*^9, 3.933734850564692*^9, 
   3.933734881882311*^9, {3.933735060175713*^9, 3.9337350986006145`*^9}, 
   3.9337351681688576`*^9, 3.9337352156648827`*^9, 3.9337353054844036`*^9, {
   3.9337353569035683`*^9, 3.9337353772515697`*^9}, {3.933735708741661*^9, 
   3.933735720651291*^9}, {3.933735754140127*^9, 3.9337357707057095`*^9}, 
   3.933736299910599*^9, 3.933736366730013*^9, {3.9337364131849785`*^9, 
   3.933736476742962*^9}, 3.9337379511241245`*^9, 3.933738817946457*^9, 
   3.933800575613077*^9, 3.9338013846902313`*^9, 3.933813991398485*^9, {
   3.933814029754343*^9, 3.933814048609112*^9}, 3.9338198642878017`*^9, 
   3.933903900394705*^9},
 CellLabel->"Out[38]=",ExpressionUUID->"9d4cfb5a-b9f1-f74a-91da-e22a7dffb82b"]
}, Open  ]],

Cell[BoxData["\[IndentingNewLine]"], "Input",
 CellChangeTimes->{{3.9337247317857738`*^9, 3.9337248082096615`*^9}, {
   3.9337263020442944`*^9, 3.9337263155805645`*^9}, {3.933726371163327*^9, 
   3.933726372145336*^9}, {3.9337265007784843`*^9, 3.933726508817906*^9}, {
   3.9337266624438534`*^9, 3.933726704935663*^9}, {3.9337279245623016`*^9, 
   3.933727935738989*^9}, {3.9337391659597054`*^9, 3.93373916928689*^9}, 
   3.9338143612412667`*^9},
 CellLabel->"In[39]:=",ExpressionUUID->"12c79bc5-d383-f147-b81a-fb3d7de2572b"]
}, Open  ]],

Cell[CellGroupData[{

Cell["Primerjava razmerja obsojenih glede na spol", "Subtitle",
 CellChangeTimes->{{3.9337279613561187`*^9, 
  3.933727978865212*^9}},ExpressionUUID->"dcd7b806-a2ae-2b41-a5ff-\
429ebe55a3e2"],

Cell["\<\
Analiziral bom razmerje obsojenih glede na spol za izbrane dr\[ZHacek]ave.\
\>", "Text",
 CellChangeTimes->{{3.9338148073846188`*^9, 3.933814827756607*^9}, {
   3.933814912989071*^9, 3.93381498210775*^9}, 
   3.933815053581995*^9},ExpressionUUID->"e0fd23b8-3b0c-2f4c-94d8-\
d42d50cb9700"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{"moski", " ", "=", " ", 
  RowBox[{
   RowBox[{"Query", "[", "Drzave", "]"}], "@", 
   "steviloMoskiObsojeni"}]}], "\[IndentingNewLine]", 
 RowBox[{"zenske", " ", "=", " ", 
  RowBox[{
   RowBox[{"Query", "[", "Drzave", "]"}], "@", 
   "steviloZenskeObsojene"}]}], "\[IndentingNewLine]"}], "Input",
 CellChangeTimes->{{3.933732106393984*^9, 3.9337321090401993`*^9}, {
  3.933732140103182*^9, 3.933732145425646*^9}, {3.933736523989271*^9, 
  3.933736562380808*^9}, {3.933737260846154*^9, 3.933737265520918*^9}},
 CellLabel->"In[40]:=",ExpressionUUID->"e7e8d551-07e0-1547-b2a2-b6f3e7aa9c4d"],

Cell[BoxData[
 TagBox[
  TagBox[
   DynamicModuleBox[{TypeSystem`NestedGrid`PackagePrivate`$state$$ = <|
    "InitialData" -> <|
      "Slovenia" -> <|
        "2013" -> 10352., "2014" -> 8328., "2015" -> 7104., "2016" -> 5980., 
         "2017" -> 5633., "2018" -> 5522., "2019" -> 5352., "2020" -> 4261., 
         "2021" -> 5041., "2022" -> 4771.|>, 
       "Latvia" -> <|
        "2013" -> 7655., "2014" -> 8130., "2015" -> 8393., "2016" -> 7905., 
         "2017" -> 8209., "2018" -> 7593., "2019" -> 6951., "2020" -> 6329., 
         "2021" -> 5260., "2022" -> 4232.|>, 
       "T\[UDoubleDot]rkiye" -> <|
        "2013" -> 465927., "2014" -> 459973., "2015" -> 485039., "2016" -> 
         427306., "2017" -> 415116., "2018" -> 515936., "2019" -> 549838., 
         "2020" -> 458084., "2021" -> 645172., "2022" -> 635129.|>, 
       "Sweden" -> <|
        "2013" -> 54916., "2014" -> 51207., "2015" -> 49899., "2016" -> 
         47608., "2017" -> 48713., "2018" -> 51256., "2019" -> 53228., "2020" -> 
         58243., "2021" -> 62345., "2022" -> 64153.|>, 
       "Portugal" -> <|
        "2013" -> 62303., "2014" -> 46026., "2015" -> 51585., "2016" -> 
         49084., "2017" -> 44908., "2018" -> 40316., "2019" -> 39089., "2020" -> 
         30644., "2021" -> 37210., "2022" -> 39773.|>|>, "AllowEmbedding" -> 
     True, "InitialShape" -> TypeSystem`PackageScope`HeaderShape[<|{All, 
          TypeSystem`PackageScope`KeyDummy[4]} -> 1, {All, "2013"} -> 
        1, {All, "2014"} -> 1, {All, "2015"} -> 1, {All, "2016"} -> 
        1, {All, "2017"} -> 1, {All, "2018"} -> 1, {All, "2019"} -> 
        1, {All, "2020"} -> 1, {All, "2021"} -> 1, {All, "2022"} -> 1|>, 
       TypeSystem`PackageScope`Limited[
        TypeSystem`PackageScope`ColumnShape[
         TypeSystem`PackageScope`KeyValueShape[
          TypeSystem`PackageScope`AtomShape[89.60000000000001], 
          TypeSystem`PackageScope`Limited[
           
           TypeSystem`PackageScope`RowShape[<|
            "2013" -> TypeSystem`PackageScope`AtomShape[60], "2014" -> 
             TypeSystem`PackageScope`AtomShape[60], "2015" -> 
             TypeSystem`PackageScope`AtomShape[60], "2016" -> 
             TypeSystem`PackageScope`AtomShape[60], "2017" -> 
             TypeSystem`PackageScope`AtomShape[60], "2018" -> 
             TypeSystem`PackageScope`AtomShape[60], "2019" -> 
             TypeSystem`PackageScope`AtomShape[60], "2020" -> 
             TypeSystem`PackageScope`AtomShape[60], "2021" -> 
             TypeSystem`PackageScope`AtomShape[60], "2022" -> 
             TypeSystem`PackageScope`AtomShape[60]|>], 
           DirectedInfinity[1], 10, {All}]]], 5, 
        DirectedInfinity[1], {}]], "InitialType" -> TypeSystem`Assoc[
       TypeSystem`Atom[String], 
       TypeSystem`Struct[{
        "2013", "2014", "2015", "2016", "2017", "2018", "2019", "2020", 
         "2021", "2022"}, {
         TypeSystem`Atom[Real], 
         TypeSystem`Atom[Real], 
         TypeSystem`Atom[Real], 
         TypeSystem`Atom[Real], 
         TypeSystem`Atom[Real], 
         TypeSystem`Atom[Real], 
         TypeSystem`Atom[Real], 
         TypeSystem`Atom[Real], 
         TypeSystem`Atom[Real], 
         TypeSystem`Atom[Real]}], 5], "Meta" -> <||>, "RowTarget" -> 20, 
     "ColumnTarget" -> 10, "Shape" -> 
     TypeSystem`PackageScope`HeaderShape[<|{All, 
          TypeSystem`PackageScope`KeyDummy[4]} -> 1, {All, "2013"} -> 
        1, {All, "2014"} -> 1, {All, "2015"} -> 1, {All, "2016"} -> 
        1, {All, "2017"} -> 1, {All, "2018"} -> 1, {All, "2019"} -> 
        1, {All, "2020"} -> 1, {All, "2021"} -> 1, {All, "2022"} -> 1|>, 
       TypeSystem`PackageScope`Limited[
        TypeSystem`PackageScope`ColumnShape[
         TypeSystem`PackageScope`KeyValueShape[
          TypeSystem`PackageScope`AtomShape[89.60000000000001], 
          TypeSystem`PackageScope`Limited[
           
           TypeSystem`PackageScope`RowShape[<|
            "2013" -> TypeSystem`PackageScope`AtomShape[60], "2014" -> 
             TypeSystem`PackageScope`AtomShape[60], "2015" -> 
             TypeSystem`PackageScope`AtomShape[60], "2016" -> 
             TypeSystem`PackageScope`AtomShape[60], "2017" -> 
             TypeSystem`PackageScope`AtomShape[60], "2018" -> 
             TypeSystem`PackageScope`AtomShape[60], "2019" -> 
             TypeSystem`PackageScope`AtomShape[60], "2020" -> 
             TypeSystem`PackageScope`AtomShape[60], "2021" -> 
             TypeSystem`PackageScope`AtomShape[60], "2022" -> 
             TypeSystem`PackageScope`AtomShape[60]|>], 
           DirectedInfinity[1], 10, {All}]]], 5, 
        DirectedInfinity[1], {}]], "Type" -> TypeSystem`Assoc[
       TypeSystem`Atom[String], 
       TypeSystem`Struct[{
        "2013", "2014", "2015", "2016", "2017", "2018", "2019", "2020", 
         "2021", "2022"}, {
         TypeSystem`Atom[Real], 
         TypeSystem`Atom[Real], 
         TypeSystem`Atom[Real], 
         TypeSystem`Atom[Real], 
         TypeSystem`Atom[Real], 
         TypeSystem`Atom[Real], 
         TypeSystem`Atom[Real], 
         TypeSystem`Atom[Real], 
         TypeSystem`Atom[Real], 
         TypeSystem`Atom[Real]}], 5], "Path" -> {}, "DisplayedRowCount" -> 5, 
     "DisplayedColumnCount" -> 10, "DataRowCount" -> 5, "DataColumnCount" -> 
     10, "SortPaths" -> {}, "SortDirections" -> {}, "HiddenItemsMap" -> Null, 
     "UpdateType" -> 1|>, TypeSystem`NestedGrid`PackagePrivate`$outputID$$, 
    TypeSystem`NestedGrid`PackagePrivate`$path$$ = {}, 
    TypeSystem`NestedGrid`PackagePrivate`$vPos$$ = 1, 
    TypeSystem`NestedGrid`PackagePrivate`$hPos$$ = 1, 
    TypeSystem`NestedGrid`PackagePrivate`$grid$$ = 
    DynamicModule[{TypeSystem`NestedGrid`PackagePrivate`renderedGrid = Deploy[
        Style[
         Grid[{{
            Item[
             Pane[
              Annotation[
               Mouseover[
                
                Graphics[{}, ImageSize -> 6, BaselinePosition -> 
                 Scaled[-0.15]], 
                Graphics[{
                  GrayLevel[0.6], 
                  
                  Polygon[{{2^Rational[-1, 2], -2^Rational[-1, 2]}, {
                    2^Rational[-1, 2], 2^
                    Rational[-1, 2]}, {-2^Rational[-1, 2], 2^
                    Rational[-1, 2]}, {-2^Rational[-1, 2], -2^
                    Rational[-1, 2]}}]}, ImageSize -> 6, BaselinePosition -> 
                 Scaled[-0.15]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                All, Keys}, "KeyDummy", True], "Mouse"], 
              ImageSize -> {{1, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["2013", 
                  Style[
                  "2013", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                   All, "2013"}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                All, "2013"}, "ColumnHeader", True], "Mouse"], 
              ImageSize -> {{1, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["2014", 
                  Style[
                  "2014", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                   All, "2014"}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                All, "2014"}, "ColumnHeader", True], "Mouse"], 
              ImageSize -> {{1, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["2015", 
                  Style[
                  "2015", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                   All, "2015"}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                All, "2015"}, "ColumnHeader", True], "Mouse"], 
              ImageSize -> {{1, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["2016", 
                  Style[
                  "2016", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                   All, "2016"}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                All, "2016"}, "ColumnHeader", True], "Mouse"], 
              ImageSize -> {{1, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["2017", 
                  Style[
                  "2017", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                   All, "2017"}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                All, "2017"}, "ColumnHeader", True], "Mouse"], 
              ImageSize -> {{1, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["2018", 
                  Style[
                  "2018", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                   All, "2018"}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                All, "2018"}, "ColumnHeader", True], "Mouse"], 
              ImageSize -> {{1, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["2019", 
                  Style[
                  "2019", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                   All, "2019"}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                All, "2019"}, "ColumnHeader", True], "Mouse"], 
              ImageSize -> {{1, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["2020", 
                  Style[
                  "2020", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                   All, "2020"}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                All, "2020"}, "ColumnHeader", True], "Mouse"], 
              ImageSize -> {{1, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["2021", 
                  Style[
                  "2021", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                   All, "2021"}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                All, "2021"}, "ColumnHeader", True], "Mouse"], 
              ImageSize -> {{1, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["2022", 
                  Style[
                  "2022", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                   All, "2022"}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                All, "2022"}, "ColumnHeader", True], "Mouse"], 
              ImageSize -> {{1, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}]}, {
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["Slovenia", 
                  Style[
                  "Slovenia", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    Key["Slovenia"]}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["Slovenia"]}, "RowHeader", False], "Mouse"], 
              ImageSize -> {{89.60000000000001, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["10352.0"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["Slovenia"], 
                 Key["2013"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["8328.0"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["Slovenia"], 
                 Key["2014"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["7104.0"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["Slovenia"], 
                 Key["2015"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["5980.0"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["Slovenia"], 
                 Key["2016"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["5633.0"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["Slovenia"], 
                 Key["2017"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["5522.0"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["Slovenia"], 
                 Key["2018"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["5352.0"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["Slovenia"], 
                 Key["2019"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["4261.0"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["Slovenia"], 
                 Key["2020"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["5041.0"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["Slovenia"], 
                 Key["2021"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["4771.0"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["Slovenia"], 
                 Key["2022"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["Latvia", 
                  Style[
                  "Latvia", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    Key["Latvia"]}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["Latvia"]}, "RowHeader", False], "Mouse"], 
              ImageSize -> {{89.60000000000001, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["7655.0"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["Latvia"], 
                 Key["2013"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["8130.0"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["Latvia"], 
                 Key["2014"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["8393.0"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["Latvia"], 
                 Key["2015"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["7905.0"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["Latvia"], 
                 Key["2016"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["8209.0"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["Latvia"], 
                 Key["2017"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["7593.0"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["Latvia"], 
                 Key["2018"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["6951.0"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["Latvia"], 
                 Key["2019"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["6329.0"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["Latvia"], 
                 Key["2020"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["5260.0"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["Latvia"], 
                 Key["2021"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["4232.0"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["Latvia"], 
                 Key["2022"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["T\[UDoubleDot]rkiye", 
                  Style[
                  "T\[UDoubleDot]rkiye", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    Key["T\[UDoubleDot]rkiye"]}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["T\[UDoubleDot]rkiye"]}, "RowHeader", False], "Mouse"], 
              ImageSize -> {{89.60000000000001, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["465927."], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["T\[UDoubleDot]rkiye"], 
                 Key["2013"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["459973."], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["T\[UDoubleDot]rkiye"], 
                 Key["2014"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["485039."], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["T\[UDoubleDot]rkiye"], 
                 Key["2015"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["427306."], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["T\[UDoubleDot]rkiye"], 
                 Key["2016"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["415116."], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["T\[UDoubleDot]rkiye"], 
                 Key["2017"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["515936."], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["T\[UDoubleDot]rkiye"], 
                 Key["2018"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["549838."], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["T\[UDoubleDot]rkiye"], 
                 Key["2019"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["458084."], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["T\[UDoubleDot]rkiye"], 
                 Key["2020"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["645172."], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["T\[UDoubleDot]rkiye"], 
                 Key["2021"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["635129."], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["T\[UDoubleDot]rkiye"], 
                 Key["2022"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["Sweden", 
                  Style[
                  "Sweden", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    Key["Sweden"]}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["Sweden"]}, "RowHeader", False], "Mouse"], 
              ImageSize -> {{89.60000000000001, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["54916.0"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["Sweden"], 
                 Key["2013"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["51207.0"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["Sweden"], 
                 Key["2014"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["49899.0"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["Sweden"], 
                 Key["2015"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["47608.0"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["Sweden"], 
                 Key["2016"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["48713.0"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["Sweden"], 
                 Key["2017"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["51256.0"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["Sweden"], 
                 Key["2018"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["53228.0"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["Sweden"], 
                 Key["2019"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["58243.0"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["Sweden"], 
                 Key["2020"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["62345.0"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["Sweden"], 
                 Key["2021"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["64153.0"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["Sweden"], 
                 Key["2022"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["Portugal", 
                  Style[
                  "Portugal", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    Key["Portugal"]}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["Portugal"]}, "RowHeader", False], "Mouse"], 
              ImageSize -> {{89.60000000000001, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["62303.0"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["Portugal"], 
                 Key["2013"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["46026.0"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["Portugal"], 
                 Key["2014"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["51585.0"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["Portugal"], 
                 Key["2015"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["49084.0"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["Portugal"], 
                 Key["2016"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["44908.0"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["Portugal"], 
                 Key["2017"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["40316.0"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["Portugal"], 
                 Key["2018"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["39089.0"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["Portugal"], 
                 Key["2019"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["30644.0"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["Portugal"], 
                 Key["2020"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["37210.0"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["Portugal"], 
                 Key["2021"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["39773.0"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["Portugal"], 
                 Key["2022"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}}, 
          BaseStyle -> {
           ContextMenu -> 
            Dynamic[TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger; 
              Which[TypeSystem`NestedGrid`PackagePrivate`$lastOutputID =!= 
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                 TypeSystem`NestedGrid`PackagePrivate`$outputID$$], {}, 
                TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger === 
                TypeSystem`NestedGrid`PackagePrivate`$lastContextMenuTrigger, 
                TypeSystem`NestedGrid`PackagePrivate`$lastContextMenu, True, 
                TypeSystem`NestedGrid`PackagePrivate`$lastContextMenuTrigger = 
                 TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger; 
                TypeSystem`NestedGrid`PackagePrivate`$lastContextMenu = 
                 Block[{TypeSystem`NestedGrid`PackagePrivate`$globalScrollPos = \
{TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$}}, 
                   
                   With[{TypeSystem`NestedGrid`PackagePrivate`lastPath$ = 
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ = 
                    TypeSystem`NestedGrid`PackagePrivate`$lastPathType, 
                    TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$ = 
                    TypeSystem`NestedGrid`PackagePrivate`$\
lastPathIsLeafHeader, TypeSystem`NestedGrid`PackagePrivate`headerHidden$ = And[
                    MatchQ[TypeSystem`NestedGrid`PackagePrivate`$lastPathType, 
                    Alternatives["RowHeader", "ColumnHeader"]], 
                    TypeSystem`NestedGrid`PackagePrivate`headerHiddenQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$]], 
                    TypeSystem`NestedGrid`PackagePrivate`allHidden$ = 
                    TypeSystem`NestedGrid`PackagePrivate`allHiddenQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`anyHidden$ = 
                    TypeSystem`NestedGrid`PackagePrivate`anyHiddenQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`sortDirection$ = 
                    TypeSystem`NestedGrid`PackagePrivate`columnSortDirection[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$[
                    "SortPaths"], 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$[
                    "SortDirections"]], 
                    TypeSystem`NestedGrid`PackagePrivate`haveData$ = Not[
                    FailureQ[
                    TypeSystem`NestedGrid`PackagePrivate`datasetInitialData[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$]]], 
                    TypeSystem`NestedGrid`PackagePrivate`isKeyDummy$ = Not[
                    FreeQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, Keys]]}, 
                    Join[{
                    If[
                    Or[
                    Not[TypeSystem`NestedGrid`PackagePrivate`haveData$], 
                    Not[TypeSystem`NestedGrid`PackagePrivate`anyHidden$], 
                    TypeSystem`NestedGrid`PackagePrivate`isKeyDummy$], 
                    Nothing, 
                    MenuItem[
                    "Show " <> 
                    Which[TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "Item", "", 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "RowHeader", "Row", 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "ColumnHeader", "Column", True, ""], 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateHiddenItems[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, 
                    "remove"]], MenuEvaluator -> Automatic]], 
                    If[
                    Or[
                    Not[TypeSystem`NestedGrid`PackagePrivate`haveData$], 
                    TypeSystem`NestedGrid`PackagePrivate`pathEmptyQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`isKeyDummy$, 
                    And[
                    TypeSystem`NestedGrid`PackagePrivate`allHidden$, 
                    TypeSystem`NestedGrid`PackagePrivate`headerHidden$]], 
                    Nothing, 
                    MenuItem[
                    "Hide " <> 
                    Which[TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "Item", "", 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "RowHeader", "Row", 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "ColumnHeader", "Column", True, ""], 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateHiddenItems[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, "add"]], 
                    MenuEvaluator -> Automatic]], Delimiter}, 
                    If[
                    And[TypeSystem`NestedGrid`PackagePrivate`haveData$, 
                    MatchQ[TypeSystem`NestedGrid`PackagePrivate`lastPathType$, 
                    Alternatives["ColumnHeader", "KeyDummy"]], 
                    TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$, 
                    Not[TypeSystem`NestedGrid`PackagePrivate`allHidden$]], {
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`sortDirection$ =!= 
                    "Ascending", 
                    MenuItem["Sort", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateSort[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, 
                    "Ascending"]], MenuEvaluator -> Automatic], Nothing], 
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`sortDirection$ =!= 
                    "Descending", 
                    MenuItem["Reverse Sort", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateSort[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, 
                    "Descending"]], MenuEvaluator -> Automatic], Nothing], 
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`sortDirection$ =!= 
                    None, 
                    MenuItem["Unsort", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateSort[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, None]], 
                    MenuEvaluator -> Automatic], Nothing], Delimiter}, {}], {
                    MenuItem["Copy Position to Clipboard", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentPosition[
                    TypeSystem`NestedGrid`PackagePrivate`copyClip]], 
                    MenuEvaluator -> Automatic], 
                    If[TypeSystem`NestedGrid`PackagePrivate`haveData$, 
                    MenuItem["Copy Data to Clipboard", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentData[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`copyClip]], 
                    MenuEvaluator -> Automatic], Nothing], Delimiter, 
                    MenuItem["Paste Position in New Cell", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentPosition[
                    TypeSystem`NestedGrid`PackagePrivate`cellPaste]], 
                    MenuEvaluator -> Automatic], 
                    If[TypeSystem`NestedGrid`PackagePrivate`haveData$, 
                    MenuItem["Paste Data in New Cell", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentData[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`cellPaste]], 
                    MenuEvaluator -> Automatic], Nothing]}]]]]], FontFamily -> 
            "Source Sans Pro", FontSize -> 14, FontWeight -> Plain}, Dividers -> 
          All, FrameStyle -> GrayLevel[0.7490196078431373], 
          Spacings -> {0, 0}, Alignment -> Left, 
          BaseStyle -> {
           FontFamily -> "Source Sans Pro", FontSize -> 14, FontWeight -> 
            Plain}], LineBreakWithin -> False, ContextMenu -> {}, NumberMarks -> 
         False, ShowAutoStyles -> False]], 
      TypeSystem`NestedGrid`PackagePrivate`initialQ = True}, 
     Dynamic[
      TypeSystem`NestedGrid`PackagePrivate`setupViewPath[
      TypeSystem`NestedGrid`PackagePrivate`$path$$, If[
         Not[TypeSystem`NestedGrid`PackagePrivate`initialQ], 
         Module[{
          TypeSystem`NestedGrid`PackagePrivate`tmpGrid$ = $Failed, 
           TypeSystem`NestedGrid`PackagePrivate`tmpData$ = 
           TypeSystem`NestedGrid`PackagePrivate`datasetData[
            TypeSystem`NestedGrid`PackagePrivate`$state$$]}, 
          TypeSystem`NestedGrid`PackagePrivate`tmpGrid$ = If[
             FailureQ[TypeSystem`NestedGrid`PackagePrivate`tmpData$], 
             TypeSystem`NestedGrid`PackagePrivate`renderedGrid, 
             TypeSystem`NestedGrid`PackagePrivate`renderGrid[
             TypeSystem`NestedGrid`PackagePrivate`$state$$, 
              TypeSystem`NestedGrid`PackagePrivate`$path$$, 
              TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
              TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
              TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
              TypeSystem`NestedGrid`PackagePrivate`localHold[
              TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
             TypeSystem`NestedGrid`PackagePrivate`tmpData$]]; If[
            Not[
             FailureQ[TypeSystem`NestedGrid`PackagePrivate`tmpGrid$]], 
            TypeSystem`NestedGrid`PackagePrivate`renderedGrid = 
            TypeSystem`NestedGrid`PackagePrivate`tmpGrid$]; Null]]; 
       TypeSystem`NestedGrid`PackagePrivate`initialQ = False; 
       TypeSystem`NestedGrid`PackagePrivate`$vPos$$; 
       TypeSystem`NestedGrid`PackagePrivate`$hPos$$; If[
         FailureQ[TypeSystem`NestedGrid`PackagePrivate`renderedGrid], 
         TypeSystem`SparseGrid[
          TypeSystem`H["(data no longer present)"]], 
         TypeSystem`NestedGrid`PackagePrivate`renderedGrid]], 
      TrackedSymbols :> {
       TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
        TypeSystem`NestedGrid`PackagePrivate`$hPos$$}], 
     DynamicModuleValues :> {}], 
    TypeSystem`NestedGrid`PackagePrivate`$topBar$$ = Dynamic[
     TypeSystem`NestedGrid`PackagePrivate`makeFramedBar[
      TypeSystem`PackageScope`SubViewPathbar[
      TypeSystem`NestedGrid`PackagePrivate`$path$$, 
       TypeSystem`NestedGrid`PackagePrivate`updateState[
       TypeSystem`NestedGrid`PackagePrivate`$state$$, 
        TypeSystem`NestedGrid`PackagePrivate`$path$$, 
        TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
        TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
        TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
        TypeSystem`NestedGrid`PackagePrivate`localHold[
        TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]]], 
     TrackedSymbols :> {TypeSystem`NestedGrid`PackagePrivate`$path$$}], 
    TypeSystem`NestedGrid`PackagePrivate`$bottomBar$$ = Style[
     Framed[
      Dynamic[
       Replace[
       TypeSystem`NestedGrid`PackagePrivate`mouseAnnotation$$, {
        TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
           TypeSystem`NestedGrid`PackagePrivate`localHold[
           TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][Null, 
           Blank[]] -> "", TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
           TypeSystem`NestedGrid`PackagePrivate`localHold[
           TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
           Pattern[TypeSystem`NestedGrid`PackagePrivate`path$, 
            Blank[]], 
           Pattern[TypeSystem`NestedGrid`PackagePrivate`pathType$, 
            Blank[]], 
           Pattern[TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$, 
            Blank[]]] :> (
          Increment[TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger]; 
          TypeSystem`NestedGrid`PackagePrivate`$lastPath = 
           TypeSystem`NestedGrid`PackagePrivate`path$; 
          TypeSystem`NestedGrid`PackagePrivate`$lastPathType = 
           TypeSystem`NestedGrid`PackagePrivate`pathType$; 
          TypeSystem`NestedGrid`PackagePrivate`$lastPathIsLeafHeader = 
           TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$; 
          TypeSystem`NestedGrid`PackagePrivate`$lastOutputID = 
           TypeSystem`NestedGrid`PackagePrivate`localHold[
            TypeSystem`NestedGrid`PackagePrivate`$outputID$$]; 
          TypeSystem`NestedGrid`PackagePrivate`makePathTrail[
           TypeSystem`NestedGrid`PackagePrivate`path$, 
            TypeSystem`NestedGrid`PackagePrivate`makePathElements]), Null :> 
         Spacer[10], Blank[] :> Spacer[10]}], 
       TrackedSymbols :> {
        TypeSystem`NestedGrid`PackagePrivate`mouseAnnotation$$}], FrameStyle -> 
      None, ImageMargins -> 0, FrameMargins -> 0, Alignment -> Top, 
      ImageSize -> {Automatic, 15}], FontSize -> 1], 
    TypeSystem`NestedGrid`PackagePrivate`mouseAnnotation$$ = Null}, 
    DynamicWrapperBox[
     DynamicBox[ToBoxes[
       Dataset`DatasetContent[
       2, "Path" -> Hold[TypeSystem`NestedGrid`PackagePrivate`$path$$], 
        "Grid" -> Hold[TypeSystem`NestedGrid`PackagePrivate`$grid$$], "State" -> 
        Hold[TypeSystem`NestedGrid`PackagePrivate`$state$$], "VPos" -> 
        Hold[TypeSystem`NestedGrid`PackagePrivate`$vPos$$], "HPos" -> 
        Hold[TypeSystem`NestedGrid`PackagePrivate`$hPos$$], "TopBar" -> 
        Hold[TypeSystem`NestedGrid`PackagePrivate`$topBar$$], "BottomBar" -> 
        Hold[TypeSystem`NestedGrid`PackagePrivate`$bottomBar$$], "OutputID" -> 
        Hold[
          TypeSystem`NestedGrid`PackagePrivate`localHold[
          TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]], StandardForm],
      ImageSizeCache->{787.5, {99.09743637626525, 105.40256362373475`}},
      TrackedSymbols:>{
       TypeSystem`NestedGrid`PackagePrivate`$state$$, 
        TypeSystem`NestedGrid`PackagePrivate`$grid$$}], 
     TypeSystem`NestedGrid`PackagePrivate`mouseAnnotation$$ = 
     MouseAnnotation[],
     ImageSizeCache->{787.5, {99.09743637626525, 105.40256362373475`}}],
    BaseStyle->{LineBreakWithin -> False},
    DynamicModuleValues:>{},
    Initialization:>(TypeSystem`NestedGrid`PackagePrivate`$outputID$$ = 
     CreateUUID[]),
    UnsavedVariables:>{TypeSystem`NestedGrid`PackagePrivate`$outputID$$}],
   Deploy,
   DefaultBaseStyle->"Deploy"],
  Dataset`InterpretDataset[1],
  Editable->False,
  SelectWithContents->True,
  Selectable->False]], "Output",
 CellChangeTimes->{
  3.933732146668934*^9, {3.933736517169916*^9, 3.933736563044506*^9}, 
   3.9337379742455406`*^9, 3.933738822278965*^9, 3.933738876198179*^9, {
   3.933739042905922*^9, 3.933739066301237*^9}, {3.933739113916729*^9, 
   3.9337391433795605`*^9}, 3.93374129044767*^9, 3.933800576007246*^9, 
   3.933801349159493*^9, 3.93380138504916*^9, 3.933819864704481*^9, 
   3.933903900554735*^9},
 CellLabel->"Out[40]=",ExpressionUUID->"b08ea430-ef3c-f243-adc1-53a5ac68349c"],

Cell[BoxData[
 TagBox[
  TagBox[
   DynamicModuleBox[{TypeSystem`NestedGrid`PackagePrivate`$state$$ = <|
    "InitialData" -> <|
      "Slovenia" -> <|
        "2013" -> 1406., "2014" -> 1401., "2015" -> 1137., "2016" -> 1026., 
         "2017" -> 888., "2018" -> 802., "2019" -> 904., "2020" -> 746., 
         "2021" -> 933., "2022" -> 796.|>, 
       "Latvia" -> <|
        "2013" -> 971., "2014" -> 1083., "2015" -> 1165., "2016" -> 1024., 
         "2017" -> 1053., "2018" -> 994., "2019" -> 833., "2020" -> 744., 
         "2021" -> 689., "2022" -> 585.|>, 
       "T\[UDoubleDot]rkiye" -> <|
        "2013" -> 34316., "2014" -> 32686., "2015" -> 35895., "2016" -> 
         31886., "2017" -> 30318., "2018" -> 39430., "2019" -> 42554., "2020" -> 
         34237., "2021" -> 47109., "2022" -> 47213.|>, 
       "Sweden" -> <|
        "2013" -> 9474., "2014" -> 9455., "2015" -> 9445., "2016" -> 9051., 
         "2017" -> 8659., "2018" -> 9309., "2019" -> 9480., "2020" -> 10753., 
         "2021" -> 12236., "2022" -> 12483.|>, 
       "Portugal" -> <|
        "2013" -> 8868., "2014" -> 6835., "2015" -> 7541., "2016" -> 7381., 
         "2017" -> 6560., "2018" -> 6372., "2019" -> 6223., "2020" -> 4539., 
         "2021" -> 5466., "2022" -> 5981.|>|>, "AllowEmbedding" -> True, 
     "InitialShape" -> TypeSystem`PackageScope`HeaderShape[<|{All, 
          TypeSystem`PackageScope`KeyDummy[5]} -> 1, {All, "2013"} -> 
        1, {All, "2014"} -> 1, {All, "2015"} -> 1, {All, "2016"} -> 
        1, {All, "2017"} -> 1, {All, "2018"} -> 1, {All, "2019"} -> 
        1, {All, "2020"} -> 1, {All, "2021"} -> 1, {All, "2022"} -> 1|>, 
       TypeSystem`PackageScope`Limited[
        TypeSystem`PackageScope`ColumnShape[
         TypeSystem`PackageScope`KeyValueShape[
          TypeSystem`PackageScope`AtomShape[89.60000000000001], 
          TypeSystem`PackageScope`Limited[
           
           TypeSystem`PackageScope`RowShape[<|
            "2013" -> TypeSystem`PackageScope`AtomShape[60], "2014" -> 
             TypeSystem`PackageScope`AtomShape[60], "2015" -> 
             TypeSystem`PackageScope`AtomShape[60], "2016" -> 
             TypeSystem`PackageScope`AtomShape[60], "2017" -> 
             TypeSystem`PackageScope`AtomShape[60], "2018" -> 
             TypeSystem`PackageScope`AtomShape[60], "2019" -> 
             TypeSystem`PackageScope`AtomShape[60], "2020" -> 
             TypeSystem`PackageScope`AtomShape[60], "2021" -> 
             TypeSystem`PackageScope`AtomShape[60], "2022" -> 
             TypeSystem`PackageScope`AtomShape[60]|>], 
           DirectedInfinity[1], 10, {All}]]], 5, 
        DirectedInfinity[1], {}]], "InitialType" -> TypeSystem`Assoc[
       TypeSystem`Atom[String], 
       TypeSystem`Struct[{
        "2013", "2014", "2015", "2016", "2017", "2018", "2019", "2020", 
         "2021", "2022"}, {
         TypeSystem`Atom[Real], 
         TypeSystem`Atom[Real], 
         TypeSystem`Atom[Real], 
         TypeSystem`Atom[Real], 
         TypeSystem`Atom[Real], 
         TypeSystem`Atom[Real], 
         TypeSystem`Atom[Real], 
         TypeSystem`Atom[Real], 
         TypeSystem`Atom[Real], 
         TypeSystem`Atom[Real]}], 5], "Meta" -> <||>, "RowTarget" -> 20, 
     "ColumnTarget" -> 10, "Shape" -> 
     TypeSystem`PackageScope`HeaderShape[<|{All, 
          TypeSystem`PackageScope`KeyDummy[5]} -> 1, {All, "2013"} -> 
        1, {All, "2014"} -> 1, {All, "2015"} -> 1, {All, "2016"} -> 
        1, {All, "2017"} -> 1, {All, "2018"} -> 1, {All, "2019"} -> 
        1, {All, "2020"} -> 1, {All, "2021"} -> 1, {All, "2022"} -> 1|>, 
       TypeSystem`PackageScope`Limited[
        TypeSystem`PackageScope`ColumnShape[
         TypeSystem`PackageScope`KeyValueShape[
          TypeSystem`PackageScope`AtomShape[89.60000000000001], 
          TypeSystem`PackageScope`Limited[
           
           TypeSystem`PackageScope`RowShape[<|
            "2013" -> TypeSystem`PackageScope`AtomShape[60], "2014" -> 
             TypeSystem`PackageScope`AtomShape[60], "2015" -> 
             TypeSystem`PackageScope`AtomShape[60], "2016" -> 
             TypeSystem`PackageScope`AtomShape[60], "2017" -> 
             TypeSystem`PackageScope`AtomShape[60], "2018" -> 
             TypeSystem`PackageScope`AtomShape[60], "2019" -> 
             TypeSystem`PackageScope`AtomShape[60], "2020" -> 
             TypeSystem`PackageScope`AtomShape[60], "2021" -> 
             TypeSystem`PackageScope`AtomShape[60], "2022" -> 
             TypeSystem`PackageScope`AtomShape[60]|>], 
           DirectedInfinity[1], 10, {All}]]], 5, 
        DirectedInfinity[1], {}]], "Type" -> TypeSystem`Assoc[
       TypeSystem`Atom[String], 
       TypeSystem`Struct[{
        "2013", "2014", "2015", "2016", "2017", "2018", "2019", "2020", 
         "2021", "2022"}, {
         TypeSystem`Atom[Real], 
         TypeSystem`Atom[Real], 
         TypeSystem`Atom[Real], 
         TypeSystem`Atom[Real], 
         TypeSystem`Atom[Real], 
         TypeSystem`Atom[Real], 
         TypeSystem`Atom[Real], 
         TypeSystem`Atom[Real], 
         TypeSystem`Atom[Real], 
         TypeSystem`Atom[Real]}], 5], "Path" -> {}, "DisplayedRowCount" -> 5, 
     "DisplayedColumnCount" -> 10, "DataRowCount" -> 5, "DataColumnCount" -> 
     10, "SortPaths" -> {}, "SortDirections" -> {}, "HiddenItemsMap" -> Null, 
     "UpdateType" -> 1|>, TypeSystem`NestedGrid`PackagePrivate`$outputID$$, 
    TypeSystem`NestedGrid`PackagePrivate`$path$$ = {}, 
    TypeSystem`NestedGrid`PackagePrivate`$vPos$$ = 1, 
    TypeSystem`NestedGrid`PackagePrivate`$hPos$$ = 1, 
    TypeSystem`NestedGrid`PackagePrivate`$grid$$ = 
    DynamicModule[{TypeSystem`NestedGrid`PackagePrivate`renderedGrid = Deploy[
        Style[
         Grid[{{
            Item[
             Pane[
              Annotation[
               Mouseover[
                
                Graphics[{}, ImageSize -> 6, BaselinePosition -> 
                 Scaled[-0.15]], 
                Graphics[{
                  GrayLevel[0.6], 
                  
                  Polygon[{{2^Rational[-1, 2], -2^Rational[-1, 2]}, {
                    2^Rational[-1, 2], 2^
                    Rational[-1, 2]}, {-2^Rational[-1, 2], 2^
                    Rational[-1, 2]}, {-2^Rational[-1, 2], -2^
                    Rational[-1, 2]}}]}, ImageSize -> 6, BaselinePosition -> 
                 Scaled[-0.15]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                All, Keys}, "KeyDummy", True], "Mouse"], 
              ImageSize -> {{1, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["2013", 
                  Style[
                  "2013", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                   All, "2013"}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                All, "2013"}, "ColumnHeader", True], "Mouse"], 
              ImageSize -> {{1, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["2014", 
                  Style[
                  "2014", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                   All, "2014"}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                All, "2014"}, "ColumnHeader", True], "Mouse"], 
              ImageSize -> {{1, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["2015", 
                  Style[
                  "2015", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                   All, "2015"}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                All, "2015"}, "ColumnHeader", True], "Mouse"], 
              ImageSize -> {{1, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["2016", 
                  Style[
                  "2016", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                   All, "2016"}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                All, "2016"}, "ColumnHeader", True], "Mouse"], 
              ImageSize -> {{1, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["2017", 
                  Style[
                  "2017", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                   All, "2017"}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                All, "2017"}, "ColumnHeader", True], "Mouse"], 
              ImageSize -> {{1, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["2018", 
                  Style[
                  "2018", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                   All, "2018"}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                All, "2018"}, "ColumnHeader", True], "Mouse"], 
              ImageSize -> {{1, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["2019", 
                  Style[
                  "2019", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                   All, "2019"}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                All, "2019"}, "ColumnHeader", True], "Mouse"], 
              ImageSize -> {{1, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["2020", 
                  Style[
                  "2020", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                   All, "2020"}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                All, "2020"}, "ColumnHeader", True], "Mouse"], 
              ImageSize -> {{1, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["2021", 
                  Style[
                  "2021", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                   All, "2021"}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                All, "2021"}, "ColumnHeader", True], "Mouse"], 
              ImageSize -> {{1, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["2022", 
                  Style[
                  "2022", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                   All, "2022"}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                All, "2022"}, "ColumnHeader", True], "Mouse"], 
              ImageSize -> {{1, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}]}, {
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["Slovenia", 
                  Style[
                  "Slovenia", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    Key["Slovenia"]}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["Slovenia"]}, "RowHeader", False], "Mouse"], 
              ImageSize -> {{89.60000000000001, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["1406.0"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["Slovenia"], 
                 Key["2013"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["1401.0"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["Slovenia"], 
                 Key["2014"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["1137.0"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["Slovenia"], 
                 Key["2015"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["1026.0"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["Slovenia"], 
                 Key["2016"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["888.0"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["Slovenia"], 
                 Key["2017"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["802.0"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["Slovenia"], 
                 Key["2018"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["904.0"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["Slovenia"], 
                 Key["2019"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["746.0"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["Slovenia"], 
                 Key["2020"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["933.0"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["Slovenia"], 
                 Key["2021"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["796.0"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["Slovenia"], 
                 Key["2022"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["Latvia", 
                  Style[
                  "Latvia", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    Key["Latvia"]}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["Latvia"]}, "RowHeader", False], "Mouse"], 
              ImageSize -> {{89.60000000000001, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["971.0"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["Latvia"], 
                 Key["2013"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["1083.0"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["Latvia"], 
                 Key["2014"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["1165.0"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["Latvia"], 
                 Key["2015"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["1024.0"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["Latvia"], 
                 Key["2016"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["1053.0"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["Latvia"], 
                 Key["2017"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["994.0"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["Latvia"], 
                 Key["2018"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["833.0"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["Latvia"], 
                 Key["2019"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["744.0"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["Latvia"], 
                 Key["2020"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["689.0"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["Latvia"], 
                 Key["2021"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["585.0"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["Latvia"], 
                 Key["2022"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["T\[UDoubleDot]rkiye", 
                  Style[
                  "T\[UDoubleDot]rkiye", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    Key["T\[UDoubleDot]rkiye"]}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["T\[UDoubleDot]rkiye"]}, "RowHeader", False], "Mouse"], 
              ImageSize -> {{89.60000000000001, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["34316.0"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["T\[UDoubleDot]rkiye"], 
                 Key["2013"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["32686.0"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["T\[UDoubleDot]rkiye"], 
                 Key["2014"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["35895.0"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["T\[UDoubleDot]rkiye"], 
                 Key["2015"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["31886.0"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["T\[UDoubleDot]rkiye"], 
                 Key["2016"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["30318.0"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["T\[UDoubleDot]rkiye"], 
                 Key["2017"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["39430.0"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["T\[UDoubleDot]rkiye"], 
                 Key["2018"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["42554.0"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["T\[UDoubleDot]rkiye"], 
                 Key["2019"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["34237.0"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["T\[UDoubleDot]rkiye"], 
                 Key["2020"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["47109.0"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["T\[UDoubleDot]rkiye"], 
                 Key["2021"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["47213.0"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["T\[UDoubleDot]rkiye"], 
                 Key["2022"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["Sweden", 
                  Style[
                  "Sweden", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    Key["Sweden"]}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["Sweden"]}, "RowHeader", False], "Mouse"], 
              ImageSize -> {{89.60000000000001, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["9474.0"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["Sweden"], 
                 Key["2013"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["9455.0"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["Sweden"], 
                 Key["2014"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["9445.0"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["Sweden"], 
                 Key["2015"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["9051.0"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["Sweden"], 
                 Key["2016"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["8659.0"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["Sweden"], 
                 Key["2017"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["9309.0"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["Sweden"], 
                 Key["2018"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["9480.0"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["Sweden"], 
                 Key["2019"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["10753.0"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["Sweden"], 
                 Key["2020"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["12236.0"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["Sweden"], 
                 Key["2021"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["12483.0"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["Sweden"], 
                 Key["2022"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["Portugal", 
                  Style[
                  "Portugal", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    Key["Portugal"]}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["Portugal"]}, "RowHeader", False], "Mouse"], 
              ImageSize -> {{89.60000000000001, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["8868.0"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["Portugal"], 
                 Key["2013"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["6835.0"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["Portugal"], 
                 Key["2014"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["7541.0"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["Portugal"], 
                 Key["2015"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["7381.0"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["Portugal"], 
                 Key["2016"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["6560.0"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["Portugal"], 
                 Key["2017"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["6372.0"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["Portugal"], 
                 Key["2018"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["6223.0"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["Portugal"], 
                 Key["2019"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["4539.0"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["Portugal"], 
                 Key["2020"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["5466.0"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["Portugal"], 
                 Key["2021"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["5981.0"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["Portugal"], 
                 Key["2022"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}}, 
          BaseStyle -> {
           ContextMenu -> 
            Dynamic[TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger; 
              Which[TypeSystem`NestedGrid`PackagePrivate`$lastOutputID =!= 
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                 TypeSystem`NestedGrid`PackagePrivate`$outputID$$], {}, 
                TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger === 
                TypeSystem`NestedGrid`PackagePrivate`$lastContextMenuTrigger, 
                TypeSystem`NestedGrid`PackagePrivate`$lastContextMenu, True, 
                TypeSystem`NestedGrid`PackagePrivate`$lastContextMenuTrigger = 
                 TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger; 
                TypeSystem`NestedGrid`PackagePrivate`$lastContextMenu = 
                 Block[{TypeSystem`NestedGrid`PackagePrivate`$globalScrollPos = \
{TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$}}, 
                   
                   With[{TypeSystem`NestedGrid`PackagePrivate`lastPath$ = 
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ = 
                    TypeSystem`NestedGrid`PackagePrivate`$lastPathType, 
                    TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$ = 
                    TypeSystem`NestedGrid`PackagePrivate`$\
lastPathIsLeafHeader, TypeSystem`NestedGrid`PackagePrivate`headerHidden$ = And[
                    MatchQ[TypeSystem`NestedGrid`PackagePrivate`$lastPathType, 
                    Alternatives["RowHeader", "ColumnHeader"]], 
                    TypeSystem`NestedGrid`PackagePrivate`headerHiddenQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$]], 
                    TypeSystem`NestedGrid`PackagePrivate`allHidden$ = 
                    TypeSystem`NestedGrid`PackagePrivate`allHiddenQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`anyHidden$ = 
                    TypeSystem`NestedGrid`PackagePrivate`anyHiddenQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`sortDirection$ = 
                    TypeSystem`NestedGrid`PackagePrivate`columnSortDirection[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$[
                    "SortPaths"], 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$[
                    "SortDirections"]], 
                    TypeSystem`NestedGrid`PackagePrivate`haveData$ = Not[
                    FailureQ[
                    TypeSystem`NestedGrid`PackagePrivate`datasetInitialData[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$]]], 
                    TypeSystem`NestedGrid`PackagePrivate`isKeyDummy$ = Not[
                    FreeQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, Keys]]}, 
                    Join[{
                    If[
                    Or[
                    Not[TypeSystem`NestedGrid`PackagePrivate`haveData$], 
                    Not[TypeSystem`NestedGrid`PackagePrivate`anyHidden$], 
                    TypeSystem`NestedGrid`PackagePrivate`isKeyDummy$], 
                    Nothing, 
                    MenuItem[
                    "Show " <> 
                    Which[TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "Item", "", 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "RowHeader", "Row", 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "ColumnHeader", "Column", True, ""], 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateHiddenItems[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, 
                    "remove"]], MenuEvaluator -> Automatic]], 
                    If[
                    Or[
                    Not[TypeSystem`NestedGrid`PackagePrivate`haveData$], 
                    TypeSystem`NestedGrid`PackagePrivate`pathEmptyQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`isKeyDummy$, 
                    And[
                    TypeSystem`NestedGrid`PackagePrivate`allHidden$, 
                    TypeSystem`NestedGrid`PackagePrivate`headerHidden$]], 
                    Nothing, 
                    MenuItem[
                    "Hide " <> 
                    Which[TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "Item", "", 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "RowHeader", "Row", 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "ColumnHeader", "Column", True, ""], 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateHiddenItems[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, "add"]], 
                    MenuEvaluator -> Automatic]], Delimiter}, 
                    If[
                    And[TypeSystem`NestedGrid`PackagePrivate`haveData$, 
                    MatchQ[TypeSystem`NestedGrid`PackagePrivate`lastPathType$, 
                    Alternatives["ColumnHeader", "KeyDummy"]], 
                    TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$, 
                    Not[TypeSystem`NestedGrid`PackagePrivate`allHidden$]], {
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`sortDirection$ =!= 
                    "Ascending", 
                    MenuItem["Sort", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateSort[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, 
                    "Ascending"]], MenuEvaluator -> Automatic], Nothing], 
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`sortDirection$ =!= 
                    "Descending", 
                    MenuItem["Reverse Sort", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateSort[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, 
                    "Descending"]], MenuEvaluator -> Automatic], Nothing], 
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`sortDirection$ =!= 
                    None, 
                    MenuItem["Unsort", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateSort[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, None]], 
                    MenuEvaluator -> Automatic], Nothing], Delimiter}, {}], {
                    MenuItem["Copy Position to Clipboard", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentPosition[
                    TypeSystem`NestedGrid`PackagePrivate`copyClip]], 
                    MenuEvaluator -> Automatic], 
                    If[TypeSystem`NestedGrid`PackagePrivate`haveData$, 
                    MenuItem["Copy Data to Clipboard", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentData[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`copyClip]], 
                    MenuEvaluator -> Automatic], Nothing], Delimiter, 
                    MenuItem["Paste Position in New Cell", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentPosition[
                    TypeSystem`NestedGrid`PackagePrivate`cellPaste]], 
                    MenuEvaluator -> Automatic], 
                    If[TypeSystem`NestedGrid`PackagePrivate`haveData$, 
                    MenuItem["Paste Data in New Cell", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentData[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`cellPaste]], 
                    MenuEvaluator -> Automatic], Nothing]}]]]]], FontFamily -> 
            "Source Sans Pro", FontSize -> 14, FontWeight -> Plain}, Dividers -> 
          All, FrameStyle -> GrayLevel[0.7490196078431373], 
          Spacings -> {0, 0}, Alignment -> Left, 
          BaseStyle -> {
           FontFamily -> "Source Sans Pro", FontSize -> 14, FontWeight -> 
            Plain}], LineBreakWithin -> False, ContextMenu -> {}, NumberMarks -> 
         False, ShowAutoStyles -> False]], 
      TypeSystem`NestedGrid`PackagePrivate`initialQ = True}, 
     Dynamic[
      TypeSystem`NestedGrid`PackagePrivate`setupViewPath[
      TypeSystem`NestedGrid`PackagePrivate`$path$$, If[
         Not[TypeSystem`NestedGrid`PackagePrivate`initialQ], 
         Module[{
          TypeSystem`NestedGrid`PackagePrivate`tmpGrid$ = $Failed, 
           TypeSystem`NestedGrid`PackagePrivate`tmpData$ = 
           TypeSystem`NestedGrid`PackagePrivate`datasetData[
            TypeSystem`NestedGrid`PackagePrivate`$state$$]}, 
          TypeSystem`NestedGrid`PackagePrivate`tmpGrid$ = If[
             FailureQ[TypeSystem`NestedGrid`PackagePrivate`tmpData$], 
             TypeSystem`NestedGrid`PackagePrivate`renderedGrid, 
             TypeSystem`NestedGrid`PackagePrivate`renderGrid[
             TypeSystem`NestedGrid`PackagePrivate`$state$$, 
              TypeSystem`NestedGrid`PackagePrivate`$path$$, 
              TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
              TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
              TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
              TypeSystem`NestedGrid`PackagePrivate`localHold[
              TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
             TypeSystem`NestedGrid`PackagePrivate`tmpData$]]; If[
            Not[
             FailureQ[TypeSystem`NestedGrid`PackagePrivate`tmpGrid$]], 
            TypeSystem`NestedGrid`PackagePrivate`renderedGrid = 
            TypeSystem`NestedGrid`PackagePrivate`tmpGrid$]; Null]]; 
       TypeSystem`NestedGrid`PackagePrivate`initialQ = False; 
       TypeSystem`NestedGrid`PackagePrivate`$vPos$$; 
       TypeSystem`NestedGrid`PackagePrivate`$hPos$$; If[
         FailureQ[TypeSystem`NestedGrid`PackagePrivate`renderedGrid], 
         TypeSystem`SparseGrid[
          TypeSystem`H["(data no longer present)"]], 
         TypeSystem`NestedGrid`PackagePrivate`renderedGrid]], 
      TrackedSymbols :> {
       TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
        TypeSystem`NestedGrid`PackagePrivate`$hPos$$}], 
     DynamicModuleValues :> {}], 
    TypeSystem`NestedGrid`PackagePrivate`$topBar$$ = Dynamic[
     TypeSystem`NestedGrid`PackagePrivate`makeFramedBar[
      TypeSystem`PackageScope`SubViewPathbar[
      TypeSystem`NestedGrid`PackagePrivate`$path$$, 
       TypeSystem`NestedGrid`PackagePrivate`updateState[
       TypeSystem`NestedGrid`PackagePrivate`$state$$, 
        TypeSystem`NestedGrid`PackagePrivate`$path$$, 
        TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
        TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
        TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
        TypeSystem`NestedGrid`PackagePrivate`localHold[
        TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]]], 
     TrackedSymbols :> {TypeSystem`NestedGrid`PackagePrivate`$path$$}], 
    TypeSystem`NestedGrid`PackagePrivate`$bottomBar$$ = Style[
     Framed[
      Dynamic[
       Replace[
       TypeSystem`NestedGrid`PackagePrivate`mouseAnnotation$$, {
        TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
           TypeSystem`NestedGrid`PackagePrivate`localHold[
           TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][Null, 
           Blank[]] -> "", TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
           TypeSystem`NestedGrid`PackagePrivate`localHold[
           TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
           Pattern[TypeSystem`NestedGrid`PackagePrivate`path$, 
            Blank[]], 
           Pattern[TypeSystem`NestedGrid`PackagePrivate`pathType$, 
            Blank[]], 
           Pattern[TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$, 
            Blank[]]] :> (
          Increment[TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger]; 
          TypeSystem`NestedGrid`PackagePrivate`$lastPath = 
           TypeSystem`NestedGrid`PackagePrivate`path$; 
          TypeSystem`NestedGrid`PackagePrivate`$lastPathType = 
           TypeSystem`NestedGrid`PackagePrivate`pathType$; 
          TypeSystem`NestedGrid`PackagePrivate`$lastPathIsLeafHeader = 
           TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$; 
          TypeSystem`NestedGrid`PackagePrivate`$lastOutputID = 
           TypeSystem`NestedGrid`PackagePrivate`localHold[
            TypeSystem`NestedGrid`PackagePrivate`$outputID$$]; 
          TypeSystem`NestedGrid`PackagePrivate`makePathTrail[
           TypeSystem`NestedGrid`PackagePrivate`path$, 
            TypeSystem`NestedGrid`PackagePrivate`makePathElements]), Null :> 
         Spacer[10], Blank[] :> Spacer[10]}], 
       TrackedSymbols :> {
        TypeSystem`NestedGrid`PackagePrivate`mouseAnnotation$$}], FrameStyle -> 
      None, ImageMargins -> 0, FrameMargins -> 0, Alignment -> Top, 
      ImageSize -> {Automatic, 15}], FontSize -> 1], 
    TypeSystem`NestedGrid`PackagePrivate`mouseAnnotation$$ = Null}, 
    DynamicWrapperBox[
     DynamicBox[ToBoxes[
       Dataset`DatasetContent[
       2, "Path" -> Hold[TypeSystem`NestedGrid`PackagePrivate`$path$$], 
        "Grid" -> Hold[TypeSystem`NestedGrid`PackagePrivate`$grid$$], "State" -> 
        Hold[TypeSystem`NestedGrid`PackagePrivate`$state$$], "VPos" -> 
        Hold[TypeSystem`NestedGrid`PackagePrivate`$vPos$$], "HPos" -> 
        Hold[TypeSystem`NestedGrid`PackagePrivate`$hPos$$], "TopBar" -> 
        Hold[TypeSystem`NestedGrid`PackagePrivate`$topBar$$], "BottomBar" -> 
        Hold[TypeSystem`NestedGrid`PackagePrivate`$bottomBar$$], "OutputID" -> 
        Hold[
          TypeSystem`NestedGrid`PackagePrivate`localHold[
          TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]], StandardForm],
      ImageSizeCache->{787.5, {99.09743637626525, 105.40256362373475`}},
      TrackedSymbols:>{
       TypeSystem`NestedGrid`PackagePrivate`$state$$, 
        TypeSystem`NestedGrid`PackagePrivate`$grid$$}], 
     TypeSystem`NestedGrid`PackagePrivate`mouseAnnotation$$ = 
     MouseAnnotation[],
     ImageSizeCache->{787.5, {99.09743637626525, 105.40256362373475`}}],
    BaseStyle->{LineBreakWithin -> False},
    DynamicModuleValues:>{},
    Initialization:>(TypeSystem`NestedGrid`PackagePrivate`$outputID$$ = 
     CreateUUID[]),
    UnsavedVariables:>{TypeSystem`NestedGrid`PackagePrivate`$outputID$$}],
   Deploy,
   DefaultBaseStyle->"Deploy"],
  Dataset`InterpretDataset[1],
  Editable->False,
  SelectWithContents->True,
  Selectable->False]], "Output",
 CellChangeTimes->{
  3.933732146668934*^9, {3.933736517169916*^9, 3.933736563044506*^9}, 
   3.9337379742455406`*^9, 3.933738822278965*^9, 3.933738876198179*^9, {
   3.933739042905922*^9, 3.933739066301237*^9}, {3.933739113916729*^9, 
   3.9337391433795605`*^9}, 3.93374129044767*^9, 3.933800576007246*^9, 
   3.933801349159493*^9, 3.93380138504916*^9, 3.933819864704481*^9, 
   3.933903900717764*^9},
 CellLabel->"Out[41]=",ExpressionUUID->"3c7fd514-5b77-1747-af33-b916394c3afe"]
}, Open  ]],

Cell["\<\
Sestavil sem funkcijo, ki izra\[CHacek]una razmerje. S tem sem ustvaril novo \
tabelo, kjer so vrednosti odstotki mo\[SHacek]kih obsojencev, namesto \
\[SHacek]tevila vseh mo\[SHacek]kih obsojencev.\
\>", "Text",
 CellChangeTimes->{{3.933815064126758*^9, 3.933815097420925*^9}, {
  3.9338151615857735`*^9, 
  3.93381524971179*^9}},ExpressionUUID->"744bf0b8-bc21-4d4e-a71b-\
94382ea0b565"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"\[IndentingNewLine]", 
  RowBox[{
   RowBox[{
    RowBox[{"IzracunajrazmerjeSpolov", "[", 
     RowBox[{"a_", ",", "b_"}], "]"}], ":=", 
    RowBox[{"a", "/", 
     RowBox[{"(", 
      RowBox[{"a", "+", "b"}], ")"}]}]}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"aji", "=", 
     RowBox[{"Normal", "[", 
      RowBox[{"Values", "[", 
       RowBox[{"moski", "[", "\"\<Slovenia\>\"", "]"}], "]"}], "]"}]}], ";"}],
    "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"bji", "=", 
     RowBox[{"Normal", "[", 
      RowBox[{"Values", "[", 
       RowBox[{"zenske", "[", "\"\<Slovenia\>\"", "]"}], "]"}], "]"}]}], 
    ";"}], "\[IndentingNewLine]", "\[IndentingNewLine]", 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"tabRazmerjiSpolov", "=", 
     RowBox[{"MapThread", "[", "\[IndentingNewLine]", 
      RowBox[{"IzracunajrazmerjeSpolov", ",", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"Normal", "[", 
          RowBox[{
           RowBox[{
            RowBox[{"moski", "[", 
             RowBox[{"[", "#", "]"}], "]"}], "&"}], "/@", "Drzave"}], "]"}], 
         ",", 
         RowBox[{"Normal", "[", 
          RowBox[{
           RowBox[{
            RowBox[{"zenske", "[", 
             RowBox[{"[", "#", "]"}], "]"}], "&"}], "/@", "Drzave"}], "]"}]}],
         "}"}]}], "\[IndentingNewLine]", "]"}]}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{"tabRazmerjiSpolov", " ", "=", " ", 
    RowBox[{"Dataset", "[", 
     RowBox[{"AssociationThread", "[", 
      RowBox[{"Drzave", "->", "tabRazmerjiSpolov"}], "]"}], "]"}]}], 
   "\[IndentingNewLine]", "\[IndentingNewLine]"}]}]], "Input",
 CellChangeTimes->CompressedData["
1:eJxTTMoPSmViYGAQBWIQ7bLylBGL/1vHGIGrYHrN5loLEM0yz9gNRFe4cnWA
aOag9Ekg2n8+/wIQPedw0kIQ3aISswFEn/Bg3wqi5fvLd4JozWjd/SDa4c2F
EyD6d4zpeRBtUNJ6BUQLSItdBdGvEyTfgujPeo4fQLTFrWQOViBdeiOSH0Q/
iPojAqLPx0SJgugWDxk5EN1xbLoliH6t7WQHoiPcksD0nJ63cooge0N/K4Bo
j+OL3EB0glKrO4i+8/lQJFh+8iUwzbOzKw1Ep0iuzAPRJhdPV4DoLasaqkC0
zZbwFhAtcqG8FUSzrGCx0wDSKgnHnEF0x8w1N4KB9I+C3lsgGgDpZ5Ci
  "],
 CellLabel->
  "In[114]:=",ExpressionUUID->"8fa258dd-35b4-0b42-be67-49b803507d65"],

Cell[BoxData[
 TagBox[
  TagBox[
   DynamicModuleBox[{TypeSystem`NestedGrid`PackagePrivate`$state$$ = <|
    "InitialData" -> <|
      "Slovenia" -> <|
        "2013" -> 0.8804218404490559, "2014" -> 0.8559975331483195, "2015" -> 
         0.862031306880233, "2016" -> 0.853554096488724, "2017" -> 
         0.8638245667842355, "2018" -> 0.8731815306767868, "2019" -> 
         0.8554987212276216, "2020" -> 0.8510085879768324, "2021" -> 
         0.843823234014061, "2022" -> 0.8570145500269445|>, 
       "Latvia" -> <|
        "2013" -> 0.8874333410619059, "2014" -> 0.882448713774015, "2015" -> 
         0.8781125758526889, "2016" -> 0.8853175047597716, "2017" -> 
         0.8863096523429065, "2018" -> 0.884243624082916, "2019" -> 
         0.8929856115107914, "2020" -> 0.8948112540647534, "2021" -> 
         0.8841822154984031, "2022" -> 0.8785551172929209|>, 
       "T\[UDoubleDot]rkiye" -> <|
        "2013" -> 0.9314013389492706, "2014" -> 0.9336539066575461, "2015" -> 
         0.931094917974254, "2016" -> 0.9305606369448944, "2017" -> 
         0.9319360443971497, "2018" -> 0.9290017754057684, "2019" -> 
         0.9281658091263892, "2020" -> 0.9304579735579023, "2021" -> 
         0.9319510430013246, "2022" -> 0.930807425015608|>, 
       "Sweden" -> <|
        "2013" -> 0.8528653517626962, "2014" -> 0.8441363621377469, "2015" -> 
         0.840843219196549, "2016" -> 0.8402548580102013, "2017" -> 
         0.8490727183992192, "2018" -> 0.8462973664657806, "2019" -> 
         0.8488231166677298, "2020" -> 0.8441503855295959, "2021" -> 
         0.8359367667368365, "2022" -> 0.83711310611201|>, 
       "Portugal" -> <|
        "2013" -> 0.8753986876677298, "2014" -> 0.8706986246949546, "2015" -> 
         0.8724588167641985, "2016" -> 0.8692818560170016, "2017" -> 
         0.8725421621201523, "2018" -> 0.8635195339273476, "2019" -> 
         0.8626633121468926, "2020" -> 0.8709888298325896, "2021" -> 
         0.8719186427968881, "2022" -> 0.8692791887048127|>|>, 
     "AllowEmbedding" -> True, "InitialShape" -> 
     TypeSystem`PackageScope`HeaderShape[<|{All, 
          TypeSystem`PackageScope`KeyDummy[7]} -> 1, {All, "2013"} -> 
        1, {All, "2014"} -> 1, {All, "2015"} -> 1, {All, "2016"} -> 
        1, {All, "2017"} -> 1, {All, "2018"} -> 1, {All, "2019"} -> 
        1, {All, "2020"} -> 1, {All, "2021"} -> 1, {All, "2022"} -> 1|>, 
       TypeSystem`PackageScope`Limited[
        TypeSystem`PackageScope`ColumnShape[
         TypeSystem`PackageScope`KeyValueShape[
          TypeSystem`PackageScope`AtomShape[89.60000000000001], 
          TypeSystem`PackageScope`Limited[
           
           TypeSystem`PackageScope`RowShape[<|
            "2013" -> TypeSystem`PackageScope`AtomShape[60], "2014" -> 
             TypeSystem`PackageScope`AtomShape[60], "2015" -> 
             TypeSystem`PackageScope`AtomShape[60], "2016" -> 
             TypeSystem`PackageScope`AtomShape[60], "2017" -> 
             TypeSystem`PackageScope`AtomShape[60], "2018" -> 
             TypeSystem`PackageScope`AtomShape[60], "2019" -> 
             TypeSystem`PackageScope`AtomShape[60], "2020" -> 
             TypeSystem`PackageScope`AtomShape[60], "2021" -> 
             TypeSystem`PackageScope`AtomShape[60], "2022" -> 
             TypeSystem`PackageScope`AtomShape[60]|>], 
           DirectedInfinity[1], 10, {All}]]], 5, 
        DirectedInfinity[1], {}]], "InitialType" -> TypeSystem`Assoc[
       TypeSystem`Atom[String], 
       TypeSystem`Struct[{
        "2013", "2014", "2015", "2016", "2017", "2018", "2019", "2020", 
         "2021", "2022"}, {
         TypeSystem`Atom[Real], 
         TypeSystem`Atom[Real], 
         TypeSystem`Atom[Real], 
         TypeSystem`Atom[Real], 
         TypeSystem`Atom[Real], 
         TypeSystem`Atom[Real], 
         TypeSystem`Atom[Real], 
         TypeSystem`Atom[Real], 
         TypeSystem`Atom[Real], 
         TypeSystem`Atom[Real]}], 5], "Meta" -> <||>, "RowTarget" -> 20, 
     "ColumnTarget" -> 10, "Shape" -> 
     TypeSystem`PackageScope`HeaderShape[<|{All, 
          TypeSystem`PackageScope`KeyDummy[7]} -> 1, {All, "2013"} -> 
        1, {All, "2014"} -> 1, {All, "2015"} -> 1, {All, "2016"} -> 
        1, {All, "2017"} -> 1, {All, "2018"} -> 1, {All, "2019"} -> 
        1, {All, "2020"} -> 1, {All, "2021"} -> 1, {All, "2022"} -> 1|>, 
       TypeSystem`PackageScope`Limited[
        TypeSystem`PackageScope`ColumnShape[
         TypeSystem`PackageScope`KeyValueShape[
          TypeSystem`PackageScope`AtomShape[89.60000000000001], 
          TypeSystem`PackageScope`Limited[
           
           TypeSystem`PackageScope`RowShape[<|
            "2013" -> TypeSystem`PackageScope`AtomShape[60], "2014" -> 
             TypeSystem`PackageScope`AtomShape[60], "2015" -> 
             TypeSystem`PackageScope`AtomShape[60], "2016" -> 
             TypeSystem`PackageScope`AtomShape[60], "2017" -> 
             TypeSystem`PackageScope`AtomShape[60], "2018" -> 
             TypeSystem`PackageScope`AtomShape[60], "2019" -> 
             TypeSystem`PackageScope`AtomShape[60], "2020" -> 
             TypeSystem`PackageScope`AtomShape[60], "2021" -> 
             TypeSystem`PackageScope`AtomShape[60], "2022" -> 
             TypeSystem`PackageScope`AtomShape[60]|>], 
           DirectedInfinity[1], 10, {All}]]], 5, 
        DirectedInfinity[1], {}]], "Type" -> TypeSystem`Assoc[
       TypeSystem`Atom[String], 
       TypeSystem`Struct[{
        "2013", "2014", "2015", "2016", "2017", "2018", "2019", "2020", 
         "2021", "2022"}, {
         TypeSystem`Atom[Real], 
         TypeSystem`Atom[Real], 
         TypeSystem`Atom[Real], 
         TypeSystem`Atom[Real], 
         TypeSystem`Atom[Real], 
         TypeSystem`Atom[Real], 
         TypeSystem`Atom[Real], 
         TypeSystem`Atom[Real], 
         TypeSystem`Atom[Real], 
         TypeSystem`Atom[Real]}], 5], "Path" -> {}, "DisplayedRowCount" -> 5, 
     "DisplayedColumnCount" -> 10, "DataRowCount" -> 5, "DataColumnCount" -> 
     10, "SortPaths" -> {}, "SortDirections" -> {}, "HiddenItemsMap" -> Null, 
     "UpdateType" -> 1|>, TypeSystem`NestedGrid`PackagePrivate`$outputID$$, 
    TypeSystem`NestedGrid`PackagePrivate`$path$$ = {}, 
    TypeSystem`NestedGrid`PackagePrivate`$vPos$$ = 1, 
    TypeSystem`NestedGrid`PackagePrivate`$hPos$$ = 1, 
    TypeSystem`NestedGrid`PackagePrivate`$grid$$ = 
    DynamicModule[{TypeSystem`NestedGrid`PackagePrivate`renderedGrid = Deploy[
        Style[
         Grid[{{
            Item[
             Pane[
              Annotation[
               Mouseover[
                
                Graphics[{}, ImageSize -> 6, BaselinePosition -> 
                 Scaled[-0.15]], 
                Graphics[{
                  GrayLevel[0.6], 
                  
                  Polygon[{{2^Rational[-1, 2], -2^Rational[-1, 2]}, {
                    2^Rational[-1, 2], 2^
                    Rational[-1, 2]}, {-2^Rational[-1, 2], 2^
                    Rational[-1, 2]}, {-2^Rational[-1, 2], -2^
                    Rational[-1, 2]}}]}, ImageSize -> 6, BaselinePosition -> 
                 Scaled[-0.15]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                All, Keys}, "KeyDummy", True], "Mouse"], 
              ImageSize -> {{1, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["2013", 
                  Style[
                  "2013", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                   All, "2013"}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                All, "2013"}, "ColumnHeader", True], "Mouse"], 
              ImageSize -> {{1, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["2014", 
                  Style[
                  "2014", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                   All, "2014"}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                All, "2014"}, "ColumnHeader", True], "Mouse"], 
              ImageSize -> {{1, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["2015", 
                  Style[
                  "2015", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                   All, "2015"}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                All, "2015"}, "ColumnHeader", True], "Mouse"], 
              ImageSize -> {{1, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["2016", 
                  Style[
                  "2016", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                   All, "2016"}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                All, "2016"}, "ColumnHeader", True], "Mouse"], 
              ImageSize -> {{1, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["2017", 
                  Style[
                  "2017", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                   All, "2017"}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                All, "2017"}, "ColumnHeader", True], "Mouse"], 
              ImageSize -> {{1, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["2018", 
                  Style[
                  "2018", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                   All, "2018"}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                All, "2018"}, "ColumnHeader", True], "Mouse"], 
              ImageSize -> {{1, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["2019", 
                  Style[
                  "2019", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                   All, "2019"}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                All, "2019"}, "ColumnHeader", True], "Mouse"], 
              ImageSize -> {{1, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["2020", 
                  Style[
                  "2020", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                   All, "2020"}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                All, "2020"}, "ColumnHeader", True], "Mouse"], 
              ImageSize -> {{1, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["2021", 
                  Style[
                  "2021", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                   All, "2021"}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                All, "2021"}, "ColumnHeader", True], "Mouse"], 
              ImageSize -> {{1, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["2022", 
                  Style[
                  "2022", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                   All, "2022"}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                All, "2022"}, "ColumnHeader", True], "Mouse"], 
              ImageSize -> {{1, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}]}, {
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["Slovenia", 
                  Style[
                  "Slovenia", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    Key["Slovenia"]}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["Slovenia"]}, "RowHeader", False], "Mouse"], 
              ImageSize -> {{89.60000000000001, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["0.880422"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["Slovenia"], 
                 Key["2013"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["0.855998"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["Slovenia"], 
                 Key["2014"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["0.862031"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["Slovenia"], 
                 Key["2015"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["0.853554"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["Slovenia"], 
                 Key["2016"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["0.863825"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["Slovenia"], 
                 Key["2017"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["0.873182"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["Slovenia"], 
                 Key["2018"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["0.855499"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["Slovenia"], 
                 Key["2019"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["0.851009"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["Slovenia"], 
                 Key["2020"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["0.843823"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["Slovenia"], 
                 Key["2021"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["0.857015"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["Slovenia"], 
                 Key["2022"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["Latvia", 
                  Style[
                  "Latvia", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    Key["Latvia"]}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["Latvia"]}, "RowHeader", False], "Mouse"], 
              ImageSize -> {{89.60000000000001, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["0.887433"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["Latvia"], 
                 Key["2013"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["0.882449"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["Latvia"], 
                 Key["2014"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["0.878113"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["Latvia"], 
                 Key["2015"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["0.885318"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["Latvia"], 
                 Key["2016"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["0.88631"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["Latvia"], 
                 Key["2017"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["0.884244"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["Latvia"], 
                 Key["2018"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["0.892986"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["Latvia"], 
                 Key["2019"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["0.894811"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["Latvia"], 
                 Key["2020"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["0.884182"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["Latvia"], 
                 Key["2021"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["0.878555"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["Latvia"], 
                 Key["2022"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["T\[UDoubleDot]rkiye", 
                  Style[
                  "T\[UDoubleDot]rkiye", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    Key["T\[UDoubleDot]rkiye"]}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["T\[UDoubleDot]rkiye"]}, "RowHeader", False], "Mouse"], 
              ImageSize -> {{89.60000000000001, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["0.931401"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["T\[UDoubleDot]rkiye"], 
                 Key["2013"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["0.933654"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["T\[UDoubleDot]rkiye"], 
                 Key["2014"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["0.931095"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["T\[UDoubleDot]rkiye"], 
                 Key["2015"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["0.930561"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["T\[UDoubleDot]rkiye"], 
                 Key["2016"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["0.931936"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["T\[UDoubleDot]rkiye"], 
                 Key["2017"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["0.929002"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["T\[UDoubleDot]rkiye"], 
                 Key["2018"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["0.928166"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["T\[UDoubleDot]rkiye"], 
                 Key["2019"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["0.930458"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["T\[UDoubleDot]rkiye"], 
                 Key["2020"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["0.931951"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["T\[UDoubleDot]rkiye"], 
                 Key["2021"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["0.930807"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["T\[UDoubleDot]rkiye"], 
                 Key["2022"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["Sweden", 
                  Style[
                  "Sweden", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    Key["Sweden"]}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["Sweden"]}, "RowHeader", False], "Mouse"], 
              ImageSize -> {{89.60000000000001, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["0.852865"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["Sweden"], 
                 Key["2013"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["0.844136"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["Sweden"], 
                 Key["2014"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["0.840843"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["Sweden"], 
                 Key["2015"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["0.840255"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["Sweden"], 
                 Key["2016"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["0.849073"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["Sweden"], 
                 Key["2017"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["0.846297"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["Sweden"], 
                 Key["2018"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["0.848823"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["Sweden"], 
                 Key["2019"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["0.84415"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["Sweden"], 
                 Key["2020"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["0.835937"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["Sweden"], 
                 Key["2021"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["0.837113"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["Sweden"], 
                 Key["2022"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["Portugal", 
                  Style[
                  "Portugal", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    Key["Portugal"]}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["Portugal"]}, "RowHeader", False], "Mouse"], 
              ImageSize -> {{89.60000000000001, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["0.875399"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["Portugal"], 
                 Key["2013"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["0.870699"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["Portugal"], 
                 Key["2014"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["0.872459"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["Portugal"], 
                 Key["2015"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["0.869282"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["Portugal"], 
                 Key["2016"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["0.872542"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["Portugal"], 
                 Key["2017"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["0.86352"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["Portugal"], 
                 Key["2018"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["0.862663"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["Portugal"], 
                 Key["2019"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["0.870989"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["Portugal"], 
                 Key["2020"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["0.871919"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["Portugal"], 
                 Key["2021"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["0.869279"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["Portugal"], 
                 Key["2022"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}}, 
          BaseStyle -> {
           ContextMenu -> 
            Dynamic[TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger; 
              Which[TypeSystem`NestedGrid`PackagePrivate`$lastOutputID =!= 
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                 TypeSystem`NestedGrid`PackagePrivate`$outputID$$], {}, 
                TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger === 
                TypeSystem`NestedGrid`PackagePrivate`$lastContextMenuTrigger, 
                TypeSystem`NestedGrid`PackagePrivate`$lastContextMenu, True, 
                TypeSystem`NestedGrid`PackagePrivate`$lastContextMenuTrigger = 
                 TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger; 
                TypeSystem`NestedGrid`PackagePrivate`$lastContextMenu = 
                 Block[{TypeSystem`NestedGrid`PackagePrivate`$globalScrollPos = \
{TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$}}, 
                   
                   With[{TypeSystem`NestedGrid`PackagePrivate`lastPath$ = 
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ = 
                    TypeSystem`NestedGrid`PackagePrivate`$lastPathType, 
                    TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$ = 
                    TypeSystem`NestedGrid`PackagePrivate`$\
lastPathIsLeafHeader, TypeSystem`NestedGrid`PackagePrivate`headerHidden$ = And[
                    MatchQ[TypeSystem`NestedGrid`PackagePrivate`$lastPathType, 
                    Alternatives["RowHeader", "ColumnHeader"]], 
                    TypeSystem`NestedGrid`PackagePrivate`headerHiddenQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$]], 
                    TypeSystem`NestedGrid`PackagePrivate`allHidden$ = 
                    TypeSystem`NestedGrid`PackagePrivate`allHiddenQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`anyHidden$ = 
                    TypeSystem`NestedGrid`PackagePrivate`anyHiddenQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`sortDirection$ = 
                    TypeSystem`NestedGrid`PackagePrivate`columnSortDirection[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$[
                    "SortPaths"], 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$[
                    "SortDirections"]], 
                    TypeSystem`NestedGrid`PackagePrivate`haveData$ = Not[
                    FailureQ[
                    TypeSystem`NestedGrid`PackagePrivate`datasetInitialData[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$]]], 
                    TypeSystem`NestedGrid`PackagePrivate`isKeyDummy$ = Not[
                    FreeQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, Keys]]}, 
                    Join[{
                    If[
                    Or[
                    Not[TypeSystem`NestedGrid`PackagePrivate`haveData$], 
                    Not[TypeSystem`NestedGrid`PackagePrivate`anyHidden$], 
                    TypeSystem`NestedGrid`PackagePrivate`isKeyDummy$], 
                    Nothing, 
                    MenuItem[
                    "Show " <> 
                    Which[TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "Item", "", 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "RowHeader", "Row", 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "ColumnHeader", "Column", True, ""], 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateHiddenItems[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, 
                    "remove"]], MenuEvaluator -> Automatic]], 
                    If[
                    Or[
                    Not[TypeSystem`NestedGrid`PackagePrivate`haveData$], 
                    TypeSystem`NestedGrid`PackagePrivate`pathEmptyQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`isKeyDummy$, 
                    And[
                    TypeSystem`NestedGrid`PackagePrivate`allHidden$, 
                    TypeSystem`NestedGrid`PackagePrivate`headerHidden$]], 
                    Nothing, 
                    MenuItem[
                    "Hide " <> 
                    Which[TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "Item", "", 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "RowHeader", "Row", 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "ColumnHeader", "Column", True, ""], 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateHiddenItems[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, "add"]], 
                    MenuEvaluator -> Automatic]], Delimiter}, 
                    If[
                    And[TypeSystem`NestedGrid`PackagePrivate`haveData$, 
                    MatchQ[TypeSystem`NestedGrid`PackagePrivate`lastPathType$, 
                    Alternatives["ColumnHeader", "KeyDummy"]], 
                    TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$, 
                    Not[TypeSystem`NestedGrid`PackagePrivate`allHidden$]], {
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`sortDirection$ =!= 
                    "Ascending", 
                    MenuItem["Sort", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateSort[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, 
                    "Ascending"]], MenuEvaluator -> Automatic], Nothing], 
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`sortDirection$ =!= 
                    "Descending", 
                    MenuItem["Reverse Sort", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateSort[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, 
                    "Descending"]], MenuEvaluator -> Automatic], Nothing], 
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`sortDirection$ =!= 
                    None, 
                    MenuItem["Unsort", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateSort[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, None]], 
                    MenuEvaluator -> Automatic], Nothing], Delimiter}, {}], {
                    MenuItem["Copy Position to Clipboard", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentPosition[
                    TypeSystem`NestedGrid`PackagePrivate`copyClip]], 
                    MenuEvaluator -> Automatic], 
                    If[TypeSystem`NestedGrid`PackagePrivate`haveData$, 
                    MenuItem["Copy Data to Clipboard", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentData[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`copyClip]], 
                    MenuEvaluator -> Automatic], Nothing], Delimiter, 
                    MenuItem["Paste Position in New Cell", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentPosition[
                    TypeSystem`NestedGrid`PackagePrivate`cellPaste]], 
                    MenuEvaluator -> Automatic], 
                    If[TypeSystem`NestedGrid`PackagePrivate`haveData$, 
                    MenuItem["Paste Data in New Cell", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentData[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`cellPaste]], 
                    MenuEvaluator -> Automatic], Nothing]}]]]]], FontFamily -> 
            "Source Sans Pro", FontSize -> 14, FontWeight -> Plain}, Dividers -> 
          All, FrameStyle -> GrayLevel[0.7490196078431373], 
          Spacings -> {0, 0}, Alignment -> Left, 
          BaseStyle -> {
           FontFamily -> "Source Sans Pro", FontSize -> 14, FontWeight -> 
            Plain}], LineBreakWithin -> False, ContextMenu -> {}, NumberMarks -> 
         False, ShowAutoStyles -> False]], 
      TypeSystem`NestedGrid`PackagePrivate`initialQ = True}, 
     Dynamic[
      TypeSystem`NestedGrid`PackagePrivate`setupViewPath[
      TypeSystem`NestedGrid`PackagePrivate`$path$$, If[
         Not[TypeSystem`NestedGrid`PackagePrivate`initialQ], 
         Module[{
          TypeSystem`NestedGrid`PackagePrivate`tmpGrid$ = $Failed, 
           TypeSystem`NestedGrid`PackagePrivate`tmpData$ = 
           TypeSystem`NestedGrid`PackagePrivate`datasetData[
            TypeSystem`NestedGrid`PackagePrivate`$state$$]}, 
          TypeSystem`NestedGrid`PackagePrivate`tmpGrid$ = If[
             FailureQ[TypeSystem`NestedGrid`PackagePrivate`tmpData$], 
             TypeSystem`NestedGrid`PackagePrivate`renderedGrid, 
             TypeSystem`NestedGrid`PackagePrivate`renderGrid[
             TypeSystem`NestedGrid`PackagePrivate`$state$$, 
              TypeSystem`NestedGrid`PackagePrivate`$path$$, 
              TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
              TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
              TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
              TypeSystem`NestedGrid`PackagePrivate`localHold[
              TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
             TypeSystem`NestedGrid`PackagePrivate`tmpData$]]; If[
            Not[
             FailureQ[TypeSystem`NestedGrid`PackagePrivate`tmpGrid$]], 
            TypeSystem`NestedGrid`PackagePrivate`renderedGrid = 
            TypeSystem`NestedGrid`PackagePrivate`tmpGrid$]; Null]]; 
       TypeSystem`NestedGrid`PackagePrivate`initialQ = False; 
       TypeSystem`NestedGrid`PackagePrivate`$vPos$$; 
       TypeSystem`NestedGrid`PackagePrivate`$hPos$$; If[
         FailureQ[TypeSystem`NestedGrid`PackagePrivate`renderedGrid], 
         TypeSystem`SparseGrid[
          TypeSystem`H["(data no longer present)"]], 
         TypeSystem`NestedGrid`PackagePrivate`renderedGrid]], 
      TrackedSymbols :> {
       TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
        TypeSystem`NestedGrid`PackagePrivate`$hPos$$}], 
     DynamicModuleValues :> {}], 
    TypeSystem`NestedGrid`PackagePrivate`$topBar$$ = Dynamic[
     TypeSystem`NestedGrid`PackagePrivate`makeFramedBar[
      TypeSystem`PackageScope`SubViewPathbar[
      TypeSystem`NestedGrid`PackagePrivate`$path$$, 
       TypeSystem`NestedGrid`PackagePrivate`updateState[
       TypeSystem`NestedGrid`PackagePrivate`$state$$, 
        TypeSystem`NestedGrid`PackagePrivate`$path$$, 
        TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
        TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
        TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
        TypeSystem`NestedGrid`PackagePrivate`localHold[
        TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]]], 
     TrackedSymbols :> {TypeSystem`NestedGrid`PackagePrivate`$path$$}], 
    TypeSystem`NestedGrid`PackagePrivate`$bottomBar$$ = Style[
     Framed[
      Dynamic[
       Replace[
       TypeSystem`NestedGrid`PackagePrivate`mouseAnnotation$$, {
        TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
           TypeSystem`NestedGrid`PackagePrivate`localHold[
           TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][Null, 
           Blank[]] -> "", TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
           TypeSystem`NestedGrid`PackagePrivate`localHold[
           TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
           Pattern[TypeSystem`NestedGrid`PackagePrivate`path$, 
            Blank[]], 
           Pattern[TypeSystem`NestedGrid`PackagePrivate`pathType$, 
            Blank[]], 
           Pattern[TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$, 
            Blank[]]] :> (
          Increment[TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger]; 
          TypeSystem`NestedGrid`PackagePrivate`$lastPath = 
           TypeSystem`NestedGrid`PackagePrivate`path$; 
          TypeSystem`NestedGrid`PackagePrivate`$lastPathType = 
           TypeSystem`NestedGrid`PackagePrivate`pathType$; 
          TypeSystem`NestedGrid`PackagePrivate`$lastPathIsLeafHeader = 
           TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$; 
          TypeSystem`NestedGrid`PackagePrivate`$lastOutputID = 
           TypeSystem`NestedGrid`PackagePrivate`localHold[
            TypeSystem`NestedGrid`PackagePrivate`$outputID$$]; 
          TypeSystem`NestedGrid`PackagePrivate`makePathTrail[
           TypeSystem`NestedGrid`PackagePrivate`path$, 
            TypeSystem`NestedGrid`PackagePrivate`makePathElements]), Null :> 
         Spacer[10], Blank[] :> Spacer[10]}], 
       TrackedSymbols :> {
        TypeSystem`NestedGrid`PackagePrivate`mouseAnnotation$$}], FrameStyle -> 
      None, ImageMargins -> 0, FrameMargins -> 0, Alignment -> Top, 
      ImageSize -> {Automatic, 15}], FontSize -> 1], 
    TypeSystem`NestedGrid`PackagePrivate`mouseAnnotation$$ = Null}, 
    DynamicWrapperBox[
     DynamicBox[ToBoxes[
       Dataset`DatasetContent[
       2, "Path" -> Hold[TypeSystem`NestedGrid`PackagePrivate`$path$$], 
        "Grid" -> Hold[TypeSystem`NestedGrid`PackagePrivate`$grid$$], "State" -> 
        Hold[TypeSystem`NestedGrid`PackagePrivate`$state$$], "VPos" -> 
        Hold[TypeSystem`NestedGrid`PackagePrivate`$vPos$$], "HPos" -> 
        Hold[TypeSystem`NestedGrid`PackagePrivate`$hPos$$], "TopBar" -> 
        Hold[TypeSystem`NestedGrid`PackagePrivate`$topBar$$], "BottomBar" -> 
        Hold[TypeSystem`NestedGrid`PackagePrivate`$bottomBar$$], "OutputID" -> 
        Hold[
          TypeSystem`NestedGrid`PackagePrivate`localHold[
          TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]], StandardForm],
      ImageSizeCache->{787.5, {99.09743637626525, 105.40256362373475`}},
      TrackedSymbols:>{
       TypeSystem`NestedGrid`PackagePrivate`$state$$, 
        TypeSystem`NestedGrid`PackagePrivate`$grid$$}], 
     TypeSystem`NestedGrid`PackagePrivate`mouseAnnotation$$ = 
     MouseAnnotation[],
     ImageSizeCache->{787.5, {99.09743637626525, 105.40256362373475`}}],
    BaseStyle->{LineBreakWithin -> False},
    DynamicModuleValues:>{},
    Initialization:>(TypeSystem`NestedGrid`PackagePrivate`$outputID$$ = 
     CreateUUID[]),
    UnsavedVariables:>{TypeSystem`NestedGrid`PackagePrivate`$outputID$$}],
   Deploy,
   DefaultBaseStyle->"Deploy"],
  Dataset`InterpretDataset[1],
  Editable->False,
  SelectWithContents->True,
  Selectable->False]], "Output",
 CellChangeTimes->{
  3.933743228678831*^9, 3.933743277025151*^9, 3.9337433492639847`*^9, {
   3.933743379882585*^9, 3.9337434024002323`*^9}, {3.933743439839651*^9, 
   3.93374347450445*^9}, {3.9337435229991627`*^9, 3.933743565374092*^9}, 
   3.933743604299492*^9, 3.9338005763197384`*^9, 3.933800712976765*^9, 
   3.933801020582905*^9, 3.933801168066862*^9, {3.9338013095438952`*^9, 
   3.933801351745695*^9}, 3.933801385370407*^9, {3.933801416520822*^9, 
   3.933801429157083*^9}, 3.933801516990869*^9, {3.933815311291071*^9, 
   3.933815322167288*^9}, 3.933819865201678*^9, 3.9339039008876534`*^9, {
   3.933904578990223*^9, 3.9339045993665333`*^9}},
 CellLabel->
  "Out[118]=",ExpressionUUID->"18295405-c549-2a48-bb7d-14cd0db08643"]
}, Open  ]],

Cell["\<\
Vidimo, da je velika ve\[CHacek]ina obsojenih mo\[SHacek]kega spola. Prav \
tako lahko opazimo, da odstotek mo\[SHacek]kih obsojencev po\[CHacek]asi pada \
skozi \[CHacek]as v vsaki od izbranih dr\[ZHacek]av.\
\>", "Text",
 CellChangeTimes->{{3.9338153405118427`*^9, 3.9338154421477737`*^9}, {
   3.9338155229848194`*^9, 3.9338155388164234`*^9}, {3.9338155889095097`*^9, 
   3.9338156072443714`*^9}, {3.9338161942669735`*^9, 3.9338162513818684`*^9}, 
   3.933816287742399*^9, {3.933819957944744*^9, 
   3.933819976424408*^9}},ExpressionUUID->"e89e0265-0d57-7045-9571-\
3060c2b737a6"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"\[IndentingNewLine]", 
  RowBox[{
   RowBox[{"Dataset", "[", 
    RowBox[{"AssociationThread", "[", 
     RowBox[{"\"\<Najvecji odstop v 9ih letih\>\"", ",", 
      RowBox[{"Max", "[", 
       RowBox[{
        RowBox[{
         RowBox[{
          RowBox[{"First", "[", 
           RowBox[{"tabRazmerjiSpolov", "[", "#", "]"}], "]"}], "-", 
          RowBox[{"Last", "[", 
           RowBox[{"tabRazmerjiSpolov", "[", "#", "]"}], "]"}]}], "&"}], "/@",
         "Drzave"}], "]"}]}], "]"}], "]"}], "\[IndentingNewLine]", 
   RowBox[{"Dataset", "[", 
    RowBox[{"AssociationThread", "[", 
     RowBox[{"\"\<Povprecni odstop v 9ih letih\>\"", ",", 
      RowBox[{"Mean", "[", 
       RowBox[{
        RowBox[{
         RowBox[{
          RowBox[{"First", "[", 
           RowBox[{"tabRazmerjiSpolov", "[", "#", "]"}], "]"}], "-", 
          RowBox[{"Last", "[", 
           RowBox[{"tabRazmerjiSpolov", "[", "#", "]"}], "]"}]}], "&"}], "/@",
         "Drzave"}], "]"}]}], "]"}], "]"}]}]}]], "Input",
 CellChangeTimes->{{3.9338156106379623`*^9, 3.9338156929119434`*^9}, {
  3.9338157400360985`*^9, 3.9338158529543285`*^9}, {3.933816007080355*^9, 
  3.9338160125809402`*^9}, {3.933816060048841*^9, 3.933816138175661*^9}, {
  3.933816600437439*^9, 3.933816607653681*^9}},
 CellLabel->
  "In[119]:=",ExpressionUUID->"7775cd97-1087-ff41-afee-aca3a7d22935"],

Cell[BoxData[
 TagBox[
  TagBox[
   DynamicModuleBox[{TypeSystem`NestedGrid`PackagePrivate`$state$$ = <|
    "InitialData" -> <|
      "Najvecji odstop v 9ih letih" -> 0.023407290422111426`|>, 
     "AllowEmbedding" -> True, "InitialShape" -> 
     TypeSystem`PackageScope`Limited[
       TypeSystem`PackageScope`ColumnShape[
        TypeSystem`PackageScope`KeyValueShape[
         TypeSystem`PackageScope`AtomShape[302.40000000000003`], 
         TypeSystem`PackageScope`AtomShape[60]]], 1, 
       DirectedInfinity[1], {}], "InitialType" -> TypeSystem`Assoc[
       TypeSystem`Atom[String], 
       TypeSystem`Atom[Real], 1], "Meta" -> <||>, "RowTarget" -> 20, 
     "ColumnTarget" -> 10, "Shape" -> TypeSystem`PackageScope`Limited[
       TypeSystem`PackageScope`ColumnShape[
        TypeSystem`PackageScope`KeyValueShape[
         TypeSystem`PackageScope`AtomShape[302.40000000000003`], 
         TypeSystem`PackageScope`AtomShape[60]]], 1, 
       DirectedInfinity[1], {}], "Type" -> TypeSystem`Assoc[
       TypeSystem`Atom[String], 
       TypeSystem`Atom[Real], 1], "Path" -> {}, "DisplayedRowCount" -> 1, 
     "DisplayedColumnCount" -> 1, "DataRowCount" -> 1, "DataColumnCount" -> 1,
      "SortPaths" -> {}, "SortDirections" -> {}, "HiddenItemsMap" -> Null, 
     "UpdateType" -> 1|>, TypeSystem`NestedGrid`PackagePrivate`$outputID$$, 
    TypeSystem`NestedGrid`PackagePrivate`$path$$ = {}, 
    TypeSystem`NestedGrid`PackagePrivate`$vPos$$ = 1, 
    TypeSystem`NestedGrid`PackagePrivate`$hPos$$ = 1, 
    TypeSystem`NestedGrid`PackagePrivate`$grid$$ = 
    DynamicModule[{TypeSystem`NestedGrid`PackagePrivate`renderedGrid = Deploy[
        Style[
         Grid[{{
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["Najvecji odstop v 9ih letih", 
                  Style[
                  "Najvecji odstop v 9ih letih", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    Key["Najvecji odstop v 9ih letih"]}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["Najvecji odstop v 9ih letih"]}, "RowHeader", False], 
               "Mouse"], 
              ImageSize -> {{302.40000000000003`, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["0.0234073"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["Najvecji odstop v 9ih letih"]}, "Item", False], 
               "Mouse"], ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}}, 
          BaseStyle -> {
           ContextMenu -> 
            Dynamic[TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger; 
              Which[TypeSystem`NestedGrid`PackagePrivate`$lastOutputID =!= 
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                 TypeSystem`NestedGrid`PackagePrivate`$outputID$$], {}, 
                TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger === 
                TypeSystem`NestedGrid`PackagePrivate`$lastContextMenuTrigger, 
                TypeSystem`NestedGrid`PackagePrivate`$lastContextMenu, True, 
                TypeSystem`NestedGrid`PackagePrivate`$lastContextMenuTrigger = 
                 TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger; 
                TypeSystem`NestedGrid`PackagePrivate`$lastContextMenu = 
                 Block[{TypeSystem`NestedGrid`PackagePrivate`$globalScrollPos = \
{TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$}}, 
                   
                   With[{TypeSystem`NestedGrid`PackagePrivate`lastPath$ = 
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ = 
                    TypeSystem`NestedGrid`PackagePrivate`$lastPathType, 
                    TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$ = 
                    TypeSystem`NestedGrid`PackagePrivate`$\
lastPathIsLeafHeader, TypeSystem`NestedGrid`PackagePrivate`headerHidden$ = And[
                    MatchQ[TypeSystem`NestedGrid`PackagePrivate`$lastPathType, 
                    Alternatives["RowHeader", "ColumnHeader"]], 
                    TypeSystem`NestedGrid`PackagePrivate`headerHiddenQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$]], 
                    TypeSystem`NestedGrid`PackagePrivate`allHidden$ = 
                    TypeSystem`NestedGrid`PackagePrivate`allHiddenQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`anyHidden$ = 
                    TypeSystem`NestedGrid`PackagePrivate`anyHiddenQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`sortDirection$ = 
                    TypeSystem`NestedGrid`PackagePrivate`columnSortDirection[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$[
                    "SortPaths"], 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$[
                    "SortDirections"]], 
                    TypeSystem`NestedGrid`PackagePrivate`haveData$ = Not[
                    FailureQ[
                    TypeSystem`NestedGrid`PackagePrivate`datasetInitialData[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$]]], 
                    TypeSystem`NestedGrid`PackagePrivate`isKeyDummy$ = Not[
                    FreeQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, Keys]]}, 
                    Join[{
                    If[
                    Or[
                    Not[TypeSystem`NestedGrid`PackagePrivate`haveData$], 
                    Not[TypeSystem`NestedGrid`PackagePrivate`anyHidden$], 
                    TypeSystem`NestedGrid`PackagePrivate`isKeyDummy$], 
                    Nothing, 
                    MenuItem[
                    "Show " <> 
                    Which[TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "Item", "", 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "RowHeader", "Row", 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "ColumnHeader", "Column", True, ""], 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateHiddenItems[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, 
                    "remove"]], MenuEvaluator -> Automatic]], 
                    If[
                    Or[
                    Not[TypeSystem`NestedGrid`PackagePrivate`haveData$], 
                    TypeSystem`NestedGrid`PackagePrivate`pathEmptyQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`isKeyDummy$, 
                    And[
                    TypeSystem`NestedGrid`PackagePrivate`allHidden$, 
                    TypeSystem`NestedGrid`PackagePrivate`headerHidden$]], 
                    Nothing, 
                    MenuItem[
                    "Hide " <> 
                    Which[TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "Item", "", 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "RowHeader", "Row", 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "ColumnHeader", "Column", True, ""], 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateHiddenItems[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, "add"]], 
                    MenuEvaluator -> Automatic]], Delimiter}, 
                    If[
                    And[TypeSystem`NestedGrid`PackagePrivate`haveData$, 
                    MatchQ[TypeSystem`NestedGrid`PackagePrivate`lastPathType$, 
                    Alternatives["ColumnHeader", "KeyDummy"]], 
                    TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$, 
                    Not[TypeSystem`NestedGrid`PackagePrivate`allHidden$]], {
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`sortDirection$ =!= 
                    "Ascending", 
                    MenuItem["Sort", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateSort[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, 
                    "Ascending"]], MenuEvaluator -> Automatic], Nothing], 
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`sortDirection$ =!= 
                    "Descending", 
                    MenuItem["Reverse Sort", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateSort[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, 
                    "Descending"]], MenuEvaluator -> Automatic], Nothing], 
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`sortDirection$ =!= 
                    None, 
                    MenuItem["Unsort", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateSort[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, None]], 
                    MenuEvaluator -> Automatic], Nothing], Delimiter}, {}], {
                    MenuItem["Copy Position to Clipboard", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentPosition[
                    TypeSystem`NestedGrid`PackagePrivate`copyClip]], 
                    MenuEvaluator -> Automatic], 
                    If[TypeSystem`NestedGrid`PackagePrivate`haveData$, 
                    MenuItem["Copy Data to Clipboard", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentData[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`copyClip]], 
                    MenuEvaluator -> Automatic], Nothing], Delimiter, 
                    MenuItem["Paste Position in New Cell", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentPosition[
                    TypeSystem`NestedGrid`PackagePrivate`cellPaste]], 
                    MenuEvaluator -> Automatic], 
                    If[TypeSystem`NestedGrid`PackagePrivate`haveData$, 
                    MenuItem["Paste Data in New Cell", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentData[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`cellPaste]], 
                    MenuEvaluator -> Automatic], Nothing]}]]]]], FontFamily -> 
            "Source Sans Pro", FontSize -> 14, FontWeight -> Plain}, Dividers -> 
          All, FrameStyle -> GrayLevel[0.7490196078431373], 
          Spacings -> {0, 0}, Alignment -> Left, 
          BaseStyle -> {
           FontFamily -> "Source Sans Pro", FontSize -> 14, FontWeight -> 
            Plain}], LineBreakWithin -> False, ContextMenu -> {}, NumberMarks -> 
         False, ShowAutoStyles -> False]], 
      TypeSystem`NestedGrid`PackagePrivate`initialQ = True}, 
     Dynamic[
      TypeSystem`NestedGrid`PackagePrivate`setupViewPath[
      TypeSystem`NestedGrid`PackagePrivate`$path$$, If[
         Not[TypeSystem`NestedGrid`PackagePrivate`initialQ], 
         Module[{
          TypeSystem`NestedGrid`PackagePrivate`tmpGrid$ = $Failed, 
           TypeSystem`NestedGrid`PackagePrivate`tmpData$ = 
           TypeSystem`NestedGrid`PackagePrivate`datasetData[
            TypeSystem`NestedGrid`PackagePrivate`$state$$]}, 
          TypeSystem`NestedGrid`PackagePrivate`tmpGrid$ = If[
             FailureQ[TypeSystem`NestedGrid`PackagePrivate`tmpData$], 
             TypeSystem`NestedGrid`PackagePrivate`renderedGrid, 
             TypeSystem`NestedGrid`PackagePrivate`renderGrid[
             TypeSystem`NestedGrid`PackagePrivate`$state$$, 
              TypeSystem`NestedGrid`PackagePrivate`$path$$, 
              TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
              TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
              TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
              TypeSystem`NestedGrid`PackagePrivate`localHold[
              TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
             TypeSystem`NestedGrid`PackagePrivate`tmpData$]]; If[
            Not[
             FailureQ[TypeSystem`NestedGrid`PackagePrivate`tmpGrid$]], 
            TypeSystem`NestedGrid`PackagePrivate`renderedGrid = 
            TypeSystem`NestedGrid`PackagePrivate`tmpGrid$]; Null]]; 
       TypeSystem`NestedGrid`PackagePrivate`initialQ = False; 
       TypeSystem`NestedGrid`PackagePrivate`$vPos$$; 
       TypeSystem`NestedGrid`PackagePrivate`$hPos$$; If[
         FailureQ[TypeSystem`NestedGrid`PackagePrivate`renderedGrid], 
         TypeSystem`SparseGrid[
          TypeSystem`H["(data no longer present)"]], 
         TypeSystem`NestedGrid`PackagePrivate`renderedGrid]], 
      TrackedSymbols :> {
       TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
        TypeSystem`NestedGrid`PackagePrivate`$hPos$$}], 
     DynamicModuleValues :> {}], 
    TypeSystem`NestedGrid`PackagePrivate`$topBar$$ = Dynamic[
     TypeSystem`NestedGrid`PackagePrivate`makeFramedBar[
      TypeSystem`PackageScope`SubViewPathbar[
      TypeSystem`NestedGrid`PackagePrivate`$path$$, 
       TypeSystem`NestedGrid`PackagePrivate`updateState[
       TypeSystem`NestedGrid`PackagePrivate`$state$$, 
        TypeSystem`NestedGrid`PackagePrivate`$path$$, 
        TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
        TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
        TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
        TypeSystem`NestedGrid`PackagePrivate`localHold[
        TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]]], 
     TrackedSymbols :> {TypeSystem`NestedGrid`PackagePrivate`$path$$}], 
    TypeSystem`NestedGrid`PackagePrivate`$bottomBar$$ = Style[
     Framed[
      Dynamic[
       Replace[
       TypeSystem`NestedGrid`PackagePrivate`mouseAnnotation$$, {
        TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
           TypeSystem`NestedGrid`PackagePrivate`localHold[
           TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][Null, 
           Blank[]] -> "", TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
           TypeSystem`NestedGrid`PackagePrivate`localHold[
           TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
           Pattern[TypeSystem`NestedGrid`PackagePrivate`path$, 
            Blank[]], 
           Pattern[TypeSystem`NestedGrid`PackagePrivate`pathType$, 
            Blank[]], 
           Pattern[TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$, 
            Blank[]]] :> (
          Increment[TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger]; 
          TypeSystem`NestedGrid`PackagePrivate`$lastPath = 
           TypeSystem`NestedGrid`PackagePrivate`path$; 
          TypeSystem`NestedGrid`PackagePrivate`$lastPathType = 
           TypeSystem`NestedGrid`PackagePrivate`pathType$; 
          TypeSystem`NestedGrid`PackagePrivate`$lastPathIsLeafHeader = 
           TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$; 
          TypeSystem`NestedGrid`PackagePrivate`$lastOutputID = 
           TypeSystem`NestedGrid`PackagePrivate`localHold[
            TypeSystem`NestedGrid`PackagePrivate`$outputID$$]; 
          TypeSystem`NestedGrid`PackagePrivate`makePathTrail[
           TypeSystem`NestedGrid`PackagePrivate`path$, 
            TypeSystem`NestedGrid`PackagePrivate`makePathElements]), Null :> 
         Spacer[10], Blank[] :> Spacer[10]}], 
       TrackedSymbols :> {
        TypeSystem`NestedGrid`PackagePrivate`mouseAnnotation$$}], FrameStyle -> 
      None, ImageMargins -> 0, FrameMargins -> 0, Alignment -> Top, 
      ImageSize -> {Automatic, 15}], FontSize -> 1], 
    TypeSystem`NestedGrid`PackagePrivate`mouseAnnotation$$ = Null}, 
    DynamicWrapperBox[
     DynamicBox[ToBoxes[
       Dataset`DatasetContent[
       2, "Path" -> Hold[TypeSystem`NestedGrid`PackagePrivate`$path$$], 
        "Grid" -> Hold[TypeSystem`NestedGrid`PackagePrivate`$grid$$], "State" -> 
        Hold[TypeSystem`NestedGrid`PackagePrivate`$state$$], "VPos" -> 
        Hold[TypeSystem`NestedGrid`PackagePrivate`$vPos$$], "HPos" -> 
        Hold[TypeSystem`NestedGrid`PackagePrivate`$hPos$$], "TopBar" -> 
        Hold[TypeSystem`NestedGrid`PackagePrivate`$topBar$$], "BottomBar" -> 
        Hold[TypeSystem`NestedGrid`PackagePrivate`$bottomBar$$], "OutputID" -> 
        Hold[
          TypeSystem`NestedGrid`PackagePrivate`localHold[
          TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]], StandardForm],
      ImageSizeCache->{387.1, {21.84743637626525, 28.15256362373475}},
      TrackedSymbols:>{
       TypeSystem`NestedGrid`PackagePrivate`$state$$, 
        TypeSystem`NestedGrid`PackagePrivate`$grid$$}], 
     TypeSystem`NestedGrid`PackagePrivate`mouseAnnotation$$ = 
     MouseAnnotation[],
     ImageSizeCache->{387.1, {21.84743637626525, 28.15256362373475}}],
    BaseStyle->{LineBreakWithin -> False},
    DynamicModuleValues:>{},
    Initialization:>(TypeSystem`NestedGrid`PackagePrivate`$outputID$$ = 
     CreateUUID[]),
    UnsavedVariables:>{TypeSystem`NestedGrid`PackagePrivate`$outputID$$}],
   Deploy,
   DefaultBaseStyle->"Deploy"],
  Dataset`InterpretDataset[1],
  Editable->False,
  SelectWithContents->True,
  Selectable->False]], "Output",
 CellChangeTimes->{{3.933816085446575*^9, 3.933816138951235*^9}, 
   3.933816609892538*^9, 3.933819865421234*^9, 3.9339039009847164`*^9, 
   3.933904606671858*^9},
 CellLabel->
  "Out[119]=",ExpressionUUID->"51e69b72-b57f-e14a-8934-b1982965cf66"],

Cell[BoxData[
 TagBox[
  TagBox[
   DynamicModuleBox[{TypeSystem`NestedGrid`PackagePrivate`$state$$ = <|
    "InitialData" -> <|
      "Povprecni odstop v 9ih letih" -> 0.010950234547672456`|>, 
     "AllowEmbedding" -> True, "InitialShape" -> 
     TypeSystem`PackageScope`Limited[
       TypeSystem`PackageScope`ColumnShape[
        TypeSystem`PackageScope`KeyValueShape[
         TypeSystem`PackageScope`AtomShape[313.6], 
         TypeSystem`PackageScope`AtomShape[60]]], 1, 
       DirectedInfinity[1], {}], "InitialType" -> TypeSystem`Assoc[
       TypeSystem`Atom[String], 
       TypeSystem`Atom[Real], 1], "Meta" -> <||>, "RowTarget" -> 20, 
     "ColumnTarget" -> 10, "Shape" -> TypeSystem`PackageScope`Limited[
       TypeSystem`PackageScope`ColumnShape[
        TypeSystem`PackageScope`KeyValueShape[
         TypeSystem`PackageScope`AtomShape[313.6], 
         TypeSystem`PackageScope`AtomShape[60]]], 1, 
       DirectedInfinity[1], {}], "Type" -> TypeSystem`Assoc[
       TypeSystem`Atom[String], 
       TypeSystem`Atom[Real], 1], "Path" -> {}, "DisplayedRowCount" -> 1, 
     "DisplayedColumnCount" -> 1, "DataRowCount" -> 1, "DataColumnCount" -> 1,
      "SortPaths" -> {}, "SortDirections" -> {}, "HiddenItemsMap" -> Null, 
     "UpdateType" -> 1|>, TypeSystem`NestedGrid`PackagePrivate`$outputID$$, 
    TypeSystem`NestedGrid`PackagePrivate`$path$$ = {}, 
    TypeSystem`NestedGrid`PackagePrivate`$vPos$$ = 1, 
    TypeSystem`NestedGrid`PackagePrivate`$hPos$$ = 1, 
    TypeSystem`NestedGrid`PackagePrivate`$grid$$ = 
    DynamicModule[{TypeSystem`NestedGrid`PackagePrivate`renderedGrid = Deploy[
        Style[
         Grid[{{
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["Povprecni odstop v 9ih letih", 
                  Style[
                  "Povprecni odstop v 9ih letih", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    Key["Povprecni odstop v 9ih letih"]}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["Povprecni odstop v 9ih letih"]}, "RowHeader", False], 
               "Mouse"], ImageSize -> {{313.6, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["0.0109502"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["Povprecni odstop v 9ih letih"]}, "Item", False], 
               "Mouse"], ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}}, 
          BaseStyle -> {
           ContextMenu -> 
            Dynamic[TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger; 
              Which[TypeSystem`NestedGrid`PackagePrivate`$lastOutputID =!= 
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                 TypeSystem`NestedGrid`PackagePrivate`$outputID$$], {}, 
                TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger === 
                TypeSystem`NestedGrid`PackagePrivate`$lastContextMenuTrigger, 
                TypeSystem`NestedGrid`PackagePrivate`$lastContextMenu, True, 
                TypeSystem`NestedGrid`PackagePrivate`$lastContextMenuTrigger = 
                 TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger; 
                TypeSystem`NestedGrid`PackagePrivate`$lastContextMenu = 
                 Block[{TypeSystem`NestedGrid`PackagePrivate`$globalScrollPos = \
{TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$}}, 
                   
                   With[{TypeSystem`NestedGrid`PackagePrivate`lastPath$ = 
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ = 
                    TypeSystem`NestedGrid`PackagePrivate`$lastPathType, 
                    TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$ = 
                    TypeSystem`NestedGrid`PackagePrivate`$\
lastPathIsLeafHeader, TypeSystem`NestedGrid`PackagePrivate`headerHidden$ = And[
                    MatchQ[TypeSystem`NestedGrid`PackagePrivate`$lastPathType, 
                    Alternatives["RowHeader", "ColumnHeader"]], 
                    TypeSystem`NestedGrid`PackagePrivate`headerHiddenQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$]], 
                    TypeSystem`NestedGrid`PackagePrivate`allHidden$ = 
                    TypeSystem`NestedGrid`PackagePrivate`allHiddenQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`anyHidden$ = 
                    TypeSystem`NestedGrid`PackagePrivate`anyHiddenQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`sortDirection$ = 
                    TypeSystem`NestedGrid`PackagePrivate`columnSortDirection[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$[
                    "SortPaths"], 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$[
                    "SortDirections"]], 
                    TypeSystem`NestedGrid`PackagePrivate`haveData$ = Not[
                    FailureQ[
                    TypeSystem`NestedGrid`PackagePrivate`datasetInitialData[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$]]], 
                    TypeSystem`NestedGrid`PackagePrivate`isKeyDummy$ = Not[
                    FreeQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, Keys]]}, 
                    Join[{
                    If[
                    Or[
                    Not[TypeSystem`NestedGrid`PackagePrivate`haveData$], 
                    Not[TypeSystem`NestedGrid`PackagePrivate`anyHidden$], 
                    TypeSystem`NestedGrid`PackagePrivate`isKeyDummy$], 
                    Nothing, 
                    MenuItem[
                    "Show " <> 
                    Which[TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "Item", "", 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "RowHeader", "Row", 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "ColumnHeader", "Column", True, ""], 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateHiddenItems[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, 
                    "remove"]], MenuEvaluator -> Automatic]], 
                    If[
                    Or[
                    Not[TypeSystem`NestedGrid`PackagePrivate`haveData$], 
                    TypeSystem`NestedGrid`PackagePrivate`pathEmptyQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`isKeyDummy$, 
                    And[
                    TypeSystem`NestedGrid`PackagePrivate`allHidden$, 
                    TypeSystem`NestedGrid`PackagePrivate`headerHidden$]], 
                    Nothing, 
                    MenuItem[
                    "Hide " <> 
                    Which[TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "Item", "", 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "RowHeader", "Row", 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "ColumnHeader", "Column", True, ""], 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateHiddenItems[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, "add"]], 
                    MenuEvaluator -> Automatic]], Delimiter}, 
                    If[
                    And[TypeSystem`NestedGrid`PackagePrivate`haveData$, 
                    MatchQ[TypeSystem`NestedGrid`PackagePrivate`lastPathType$, 
                    Alternatives["ColumnHeader", "KeyDummy"]], 
                    TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$, 
                    Not[TypeSystem`NestedGrid`PackagePrivate`allHidden$]], {
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`sortDirection$ =!= 
                    "Ascending", 
                    MenuItem["Sort", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateSort[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, 
                    "Ascending"]], MenuEvaluator -> Automatic], Nothing], 
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`sortDirection$ =!= 
                    "Descending", 
                    MenuItem["Reverse Sort", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateSort[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, 
                    "Descending"]], MenuEvaluator -> Automatic], Nothing], 
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`sortDirection$ =!= 
                    None, 
                    MenuItem["Unsort", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateSort[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, None]], 
                    MenuEvaluator -> Automatic], Nothing], Delimiter}, {}], {
                    MenuItem["Copy Position to Clipboard", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentPosition[
                    TypeSystem`NestedGrid`PackagePrivate`copyClip]], 
                    MenuEvaluator -> Automatic], 
                    If[TypeSystem`NestedGrid`PackagePrivate`haveData$, 
                    MenuItem["Copy Data to Clipboard", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentData[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`copyClip]], 
                    MenuEvaluator -> Automatic], Nothing], Delimiter, 
                    MenuItem["Paste Position in New Cell", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentPosition[
                    TypeSystem`NestedGrid`PackagePrivate`cellPaste]], 
                    MenuEvaluator -> Automatic], 
                    If[TypeSystem`NestedGrid`PackagePrivate`haveData$, 
                    MenuItem["Paste Data in New Cell", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentData[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`cellPaste]], 
                    MenuEvaluator -> Automatic], Nothing]}]]]]], FontFamily -> 
            "Source Sans Pro", FontSize -> 14, FontWeight -> Plain}, Dividers -> 
          All, FrameStyle -> GrayLevel[0.7490196078431373], 
          Spacings -> {0, 0}, Alignment -> Left, 
          BaseStyle -> {
           FontFamily -> "Source Sans Pro", FontSize -> 14, FontWeight -> 
            Plain}], LineBreakWithin -> False, ContextMenu -> {}, NumberMarks -> 
         False, ShowAutoStyles -> False]], 
      TypeSystem`NestedGrid`PackagePrivate`initialQ = True}, 
     Dynamic[
      TypeSystem`NestedGrid`PackagePrivate`setupViewPath[
      TypeSystem`NestedGrid`PackagePrivate`$path$$, If[
         Not[TypeSystem`NestedGrid`PackagePrivate`initialQ], 
         Module[{
          TypeSystem`NestedGrid`PackagePrivate`tmpGrid$ = $Failed, 
           TypeSystem`NestedGrid`PackagePrivate`tmpData$ = 
           TypeSystem`NestedGrid`PackagePrivate`datasetData[
            TypeSystem`NestedGrid`PackagePrivate`$state$$]}, 
          TypeSystem`NestedGrid`PackagePrivate`tmpGrid$ = If[
             FailureQ[TypeSystem`NestedGrid`PackagePrivate`tmpData$], 
             TypeSystem`NestedGrid`PackagePrivate`renderedGrid, 
             TypeSystem`NestedGrid`PackagePrivate`renderGrid[
             TypeSystem`NestedGrid`PackagePrivate`$state$$, 
              TypeSystem`NestedGrid`PackagePrivate`$path$$, 
              TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
              TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
              TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
              TypeSystem`NestedGrid`PackagePrivate`localHold[
              TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
             TypeSystem`NestedGrid`PackagePrivate`tmpData$]]; If[
            Not[
             FailureQ[TypeSystem`NestedGrid`PackagePrivate`tmpGrid$]], 
            TypeSystem`NestedGrid`PackagePrivate`renderedGrid = 
            TypeSystem`NestedGrid`PackagePrivate`tmpGrid$]; Null]]; 
       TypeSystem`NestedGrid`PackagePrivate`initialQ = False; 
       TypeSystem`NestedGrid`PackagePrivate`$vPos$$; 
       TypeSystem`NestedGrid`PackagePrivate`$hPos$$; If[
         FailureQ[TypeSystem`NestedGrid`PackagePrivate`renderedGrid], 
         TypeSystem`SparseGrid[
          TypeSystem`H["(data no longer present)"]], 
         TypeSystem`NestedGrid`PackagePrivate`renderedGrid]], 
      TrackedSymbols :> {
       TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
        TypeSystem`NestedGrid`PackagePrivate`$hPos$$}], 
     DynamicModuleValues :> {}], 
    TypeSystem`NestedGrid`PackagePrivate`$topBar$$ = Dynamic[
     TypeSystem`NestedGrid`PackagePrivate`makeFramedBar[
      TypeSystem`PackageScope`SubViewPathbar[
      TypeSystem`NestedGrid`PackagePrivate`$path$$, 
       TypeSystem`NestedGrid`PackagePrivate`updateState[
       TypeSystem`NestedGrid`PackagePrivate`$state$$, 
        TypeSystem`NestedGrid`PackagePrivate`$path$$, 
        TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
        TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
        TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
        TypeSystem`NestedGrid`PackagePrivate`localHold[
        TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]]], 
     TrackedSymbols :> {TypeSystem`NestedGrid`PackagePrivate`$path$$}], 
    TypeSystem`NestedGrid`PackagePrivate`$bottomBar$$ = Style[
     Framed[
      Dynamic[
       Replace[
       TypeSystem`NestedGrid`PackagePrivate`mouseAnnotation$$, {
        TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
           TypeSystem`NestedGrid`PackagePrivate`localHold[
           TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][Null, 
           Blank[]] -> "", TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
           TypeSystem`NestedGrid`PackagePrivate`localHold[
           TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
           Pattern[TypeSystem`NestedGrid`PackagePrivate`path$, 
            Blank[]], 
           Pattern[TypeSystem`NestedGrid`PackagePrivate`pathType$, 
            Blank[]], 
           Pattern[TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$, 
            Blank[]]] :> (
          Increment[TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger]; 
          TypeSystem`NestedGrid`PackagePrivate`$lastPath = 
           TypeSystem`NestedGrid`PackagePrivate`path$; 
          TypeSystem`NestedGrid`PackagePrivate`$lastPathType = 
           TypeSystem`NestedGrid`PackagePrivate`pathType$; 
          TypeSystem`NestedGrid`PackagePrivate`$lastPathIsLeafHeader = 
           TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$; 
          TypeSystem`NestedGrid`PackagePrivate`$lastOutputID = 
           TypeSystem`NestedGrid`PackagePrivate`localHold[
            TypeSystem`NestedGrid`PackagePrivate`$outputID$$]; 
          TypeSystem`NestedGrid`PackagePrivate`makePathTrail[
           TypeSystem`NestedGrid`PackagePrivate`path$, 
            TypeSystem`NestedGrid`PackagePrivate`makePathElements]), Null :> 
         Spacer[10], Blank[] :> Spacer[10]}], 
       TrackedSymbols :> {
        TypeSystem`NestedGrid`PackagePrivate`mouseAnnotation$$}], FrameStyle -> 
      None, ImageMargins -> 0, FrameMargins -> 0, Alignment -> Top, 
      ImageSize -> {Automatic, 15}], FontSize -> 1], 
    TypeSystem`NestedGrid`PackagePrivate`mouseAnnotation$$ = Null}, 
    DynamicWrapperBox[
     DynamicBox[ToBoxes[
       Dataset`DatasetContent[
       2, "Path" -> Hold[TypeSystem`NestedGrid`PackagePrivate`$path$$], 
        "Grid" -> Hold[TypeSystem`NestedGrid`PackagePrivate`$grid$$], "State" -> 
        Hold[TypeSystem`NestedGrid`PackagePrivate`$state$$], "VPos" -> 
        Hold[TypeSystem`NestedGrid`PackagePrivate`$vPos$$], "HPos" -> 
        Hold[TypeSystem`NestedGrid`PackagePrivate`$hPos$$], "TopBar" -> 
        Hold[TypeSystem`NestedGrid`PackagePrivate`$topBar$$], "BottomBar" -> 
        Hold[TypeSystem`NestedGrid`PackagePrivate`$bottomBar$$], "OutputID" -> 
        Hold[
          TypeSystem`NestedGrid`PackagePrivate`localHold[
          TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]], StandardForm],
      ImageSizeCache->{
       398.30000000000007`, {21.84743637626525, 28.15256362373475}},
      TrackedSymbols:>{
       TypeSystem`NestedGrid`PackagePrivate`$state$$, 
        TypeSystem`NestedGrid`PackagePrivate`$grid$$}], 
     TypeSystem`NestedGrid`PackagePrivate`mouseAnnotation$$ = 
     MouseAnnotation[],
     ImageSizeCache->{
      398.30000000000007`, {21.84743637626525, 28.15256362373475}}],
    BaseStyle->{LineBreakWithin -> False},
    DynamicModuleValues:>{},
    Initialization:>(TypeSystem`NestedGrid`PackagePrivate`$outputID$$ = 
     CreateUUID[]),
    UnsavedVariables:>{TypeSystem`NestedGrid`PackagePrivate`$outputID$$}],
   Deploy,
   DefaultBaseStyle->"Deploy"],
  Dataset`InterpretDataset[1],
  Editable->False,
  SelectWithContents->True,
  Selectable->False]], "Output",
 CellChangeTimes->{{3.933816085446575*^9, 3.933816138951235*^9}, 
   3.933816609892538*^9, 3.933819865421234*^9, 3.9339039009847164`*^9, 
   3.933904606733366*^9},
 CellLabel->
  "Out[120]=",ExpressionUUID->"302ba014-9e31-224a-abaa-abc5941d207e"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"\[IndentingNewLine]", 
  RowBox[{
   RowBox[{
    RowBox[{"RazmerjeMedSpoloma", "[", 
     RowBox[{"tab_", ",", "drzava_", ",", "leto_"}], "]"}], " ", ":=", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{
       RowBox[{"tab", "[", "drzava", "]"}], "[", "leto", "]"}], ",", 
      RowBox[{"1", "-", 
       RowBox[{
        RowBox[{"tab", "[", "drzava", "]"}], "[", "leto", "]"}]}]}], "}"}]}], 
   "\[IndentingNewLine]", "\[IndentingNewLine]", "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"NarisiTortinDiagramRazmerjaSpolov", "[", 
     RowBox[{"tab_", ",", "drzava_", ",", "leto_"}], "]"}], ":=", 
    RowBox[{"PieChart", "[", 
     RowBox[{
      RowBox[{"RazmerjeMedSpoloma", "[", 
       RowBox[{"tab", ",", "drzava", ",", "leto"}], "]"}], ",", " ", 
      RowBox[{"ChartLegends", "->", 
       RowBox[{"{", 
        RowBox[{"\"\<moski\>\"", ",", " ", "\"\<zenske\>\""}], "}"}]}], ",", 
      RowBox[{"PlotLabel", "->", 
       RowBox[{"leto", " ", "drzava"}]}]}], " ", "]"}]}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"diagram1", " ", "=", 
     RowBox[{"NarisiTortinDiagramRazmerjaSpolov", "[", 
      RowBox[{
      "tabRazmerjiSpolov", ",", "\"\<Sweden\>\"", ",", " ", "\"\<2022\>\""}], 
      "]"}]}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"diagram2", "=", 
     RowBox[{"NarisiTortinDiagramRazmerjaSpolov", "[", 
      RowBox[{
      "tabRazmerjiSpolov", ",", "\"\<Slovenia\>\"", ",", " ", 
       "\"\<2022\>\""}], "]"}]}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"diagram3", " ", "=", 
     RowBox[{"NarisiTortinDiagramRazmerjaSpolov", "[", 
      RowBox[{
      "tabRazmerjiSpolov", ",", "\"\<T\[UDoubleDot]rkiye\>\"", ",", " ", 
       "\"\<2022\>\""}], "]"}]}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"diagram4", "=", 
     RowBox[{"NarisiTortinDiagramRazmerjaSpolov", "[", 
      RowBox[{
      "tabRazmerjiSpolov", ",", "\"\<Latvia\>\"", ",", " ", "\"\<2022\>\""}], 
      "]"}]}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"diagram5", " ", "=", 
     RowBox[{"NarisiTortinDiagramRazmerjaSpolov", "[", 
      RowBox[{
      "tabRazmerjiSpolov", ",", "\"\<Portugal\>\"", ",", " ", 
       "\"\<2022\>\""}], "]"}]}], ";"}], "\[IndentingNewLine]", 
   RowBox[{"GraphicsRow", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
      "diagram1", ",", "diagram2", ",", "diagram3", ",", "diagram4", ",", 
       "diagram5"}], "}"}], ",", " ", 
     RowBox[{"ImageSize", "->", "Full"}]}], "]"}]}]}]], "Input",
 CellChangeTimes->{{3.9338014743819866`*^9, 3.9338016462858467`*^9}, {
  3.933801774495512*^9, 3.933801887762715*^9}, {3.933801921505583*^9, 
  3.9338019253970833`*^9}, {3.93380199588039*^9, 3.933802119281894*^9}, {
  3.9338021529362507`*^9, 3.9338021907652392`*^9}, {3.933802334760765*^9, 
  3.9338023569969277`*^9}, {3.9338164496449833`*^9, 3.933816454012277*^9}, {
  3.9338164978084183`*^9, 3.9338165381653194`*^9}, {3.9339048189190025`*^9, 
  3.9339048995136967`*^9}, {3.933904949439251*^9, 3.9339049504396744`*^9}, {
  3.9339051458815804`*^9, 3.9339051615562935`*^9}, {3.9339052003158684`*^9, 
  3.933905276595684*^9}, {3.933905354503481*^9, 3.9339053880172863`*^9}},
 CellLabel->
  "In[262]:=",ExpressionUUID->"00208d7b-9e2e-1e4a-98d7-5747ed2a50cb"],

Cell[BoxData[
 GraphicsBox[{{}, {InsetBox[
     TemplateBox[{
       GraphicsBox[{{}, {}, 
         DynamicModuleBox[{
          DynamicChart`click$74664$75286 = False, 
           DynamicChart`click$74670$75286 = False}, {{
            RGBColor[0.5, 0.5, 1.], 
            EdgeForm[{
              GrayLevel[0], 
              Opacity[0.5]}], {{{}, {{
                RGBColor[0.982864, 0.7431472, 0.3262672], 
                EdgeForm[{
                  GrayLevel[0], 
                  Opacity[0.5]}], 
                TagBox[
                 GeometricTransformationBox[
                  TagBox[
                   TagBox[
                    TooltipBox[
                    TagBox[
                    TagBox[
                    DynamicBox[{
                    FEPrivate`If[
                    CurrentValue["MouseOver"], 
                    EdgeForm[{
                    GrayLevel[0.5], 
                    AbsoluteThickness[2.5], 
                    Opacity[0.66]}], {}, {}], 
                    
                    DiskBox[{0, 0}, 1., {-2.1181441151806535`, 
                    3.141592653589793}]}, 
                    ImageSizeCache -> {{12.21283398181793, 
                    136.445866500266}, {-57.44586650026599, 
                    66.78716601818209}}], "DelayedMouseEffectStyle"], 
                    StatusArea[#, 0.83711310611201]& , TagBoxNote -> 
                    "0.83711310611201"], 
                    StyleBox["0.83711310611201`", {}, StripOnInput -> False]],
                     Annotation[#, 
                    Style[0.83711310611201, {}], "Tooltip"]& ], 
                   
                   EventHandlerTag[{
                    "MouseClicked" :> 
                    FEPrivate`Set[DynamicChart`click$74664$75286, 
                    FEPrivate`Not[DynamicChart`click$74664$75286]], 
                    PassEventsDown -> True, Method -> "Preemptive", 
                    PassEventsUp -> True}]], 
                  Dynamic[
                   FEPrivate`If[
                   DynamicChart`click$74664$75286, {{{1., 0.}, {0., 1.}}, {
                    0.17438029233795646`, 0.09793627338289349}}, {{1, 0}, {0, 
                    1}}, {{1, 0}, {0, 1}}], 
                   TrackedSymbols :> {DynamicChart`click$74664$75286}]], 
                 "DelayedClickEffect"]}, {
                RGBColor[0.4992, 0.5552, 0.8309304], 
                EdgeForm[{
                  GrayLevel[0], 
                  Opacity[0.5]}], 
                TagBox[
                 GeometricTransformationBox[
                  TagBox[
                   TagBox[
                    TooltipBox[
                    TagBox[
                    TagBox[
                    DynamicBox[{
                    FEPrivate`If[
                    CurrentValue["MouseOver"], 
                    EdgeForm[{
                    GrayLevel[0.5], 
                    AbsoluteThickness[2.5], 
                    Opacity[0.66]}], {}, {}], 
                    
                    DiskBox[{0, 0}, 
                    1., {-3.141592653589793, -2.1181441151806535`}]}, 
                    ImageSizeCache -> {{12.21283398181794, 
                    75.74356380341507}, {3.256436196584943, 
                    57.91903302053316}}], "DelayedMouseEffectStyle"], 
                    StatusArea[#, 0.16288689388799005`]& , TagBoxNote -> 
                    "0.16288689388799005"], 
                    StyleBox[
                    "0.16288689388799005`", {}, StripOnInput -> False]], 
                    Annotation[#, 
                    Style[0.16288689388799005`, {}], "Tooltip"]& ], 
                   
                   EventHandlerTag[{
                    "MouseClicked" :> 
                    FEPrivate`Set[DynamicChart`click$74670$75286, 
                    FEPrivate`Not[DynamicChart`click$74670$75286]], 
                    PassEventsDown -> True, Method -> "Preemptive", 
                    PassEventsUp -> True}]], 
                  Dynamic[
                   FEPrivate`If[
                   DynamicChart`click$74670$75286, {{{1., 0.}, {0., 
                    1.}}, {-0.17438029233795646`, -0.09793627338289351}}, {{1,
                     0}, {0, 1}}, {{1, 0}, {0, 1}}], 
                   TrackedSymbols :> {DynamicChart`click$74670$75286}]], 
                 "DelayedClickEffect"]}}}, {}}, {}}, {{{
              TagBox[
               GeometricTransformationBox[
                TagBox[
                 TagBox[
                  TooltipBox[
                   
                   TagBox[{{}, {}}, StatusArea[#, 0.83711310611201]& , 
                    TagBoxNote -> "0.83711310611201"], 
                   StyleBox["0.83711310611201`", {}, StripOnInput -> False]], 
                  Annotation[#, 
                   Style[0.83711310611201, {}], "Tooltip"]& ], 
                 
                 EventHandlerTag[{
                  "MouseClicked" :> 
                   FEPrivate`Set[DynamicChart`click$74664$75286, 
                    FEPrivate`Not[DynamicChart`click$74664$75286]], 
                   PassEventsDown -> True, Method -> "Preemptive", 
                   PassEventsUp -> True}]], 
                Dynamic[
                 FEPrivate`If[
                 DynamicChart`click$74664$75286, {{{1., 0.}, {0., 1.}}, {
                   0.17438029233795646`, 0.09793627338289349}}, {{1, 0}, {0, 
                  1}}, {{1, 0}, {0, 1}}], 
                 TrackedSymbols :> {DynamicChart`click$74664$75286}]], 
               "DelayedClickEffect"], 
              TagBox[
               GeometricTransformationBox[
                TagBox[
                 TagBox[
                  TooltipBox[
                   
                   TagBox[{{}, {}}, StatusArea[#, 0.16288689388799005`]& , 
                    TagBoxNote -> "0.16288689388799005"], 
                   StyleBox[
                   "0.16288689388799005`", {}, StripOnInput -> False]], 
                  Annotation[#, 
                   Style[0.16288689388799005`, {}], "Tooltip"]& ], 
                 
                 EventHandlerTag[{
                  "MouseClicked" :> 
                   FEPrivate`Set[DynamicChart`click$74670$75286, 
                    FEPrivate`Not[DynamicChart`click$74670$75286]], 
                   PassEventsDown -> True, Method -> "Preemptive", 
                   PassEventsUp -> True}]], 
                Dynamic[
                 FEPrivate`If[
                 DynamicChart`click$74670$75286, {{{1., 0.}, {0., 
                   1.}}, {-0.17438029233795646`, -0.09793627338289351}}, {{1, 
                  0}, {0, 1}}, {{1, 0}, {0, 1}}], 
                 TrackedSymbols :> {DynamicChart`click$74670$75286}]], 
               "DelayedClickEffect"]}, {}}, {}}, {}, {}}, 
          DynamicModuleValues :> {}], {{}, {}}, {{{}, {}, {}, {}}, {}}}, 
        ContentSelectable -> False, DisplayFunction -> Identity, 
        GridLinesStyle -> Directive[
          GrayLevel[0.5, 0.4]], PlotLabel -> FormBox[
          RowBox[{"\"2022\"", " ", "\"Sweden\""}], TraditionalForm], 
        PlotRange -> {{-1., 1.}, {-1., 1.}}, PlotRangePadding -> 
        Scaled[0.09166666666666669]], 
       FormBox[
        FormBox[
         TemplateBox[{"\"moski\"", "\"zenske\""}, "SwatchLegend", 
          DisplayFunction -> (FormBox[
            StyleBox[
             StyleBox[
              PaneBox[
               TagBox[
                GridBox[{{
                   TagBox[
                    GridBox[{{
                    GraphicsBox[{
                    Directive[
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    EdgeForm[
                    Directive[
                    GrayLevel[0], 
                    Opacity[0.5]]], 
                    RGBColor[0.982864, 0.7431472, 0.3262672]], 
                    RectangleBox[{0, 0}, {10, 10}, "RoundingRadius" -> 0]}, 
                    AspectRatio -> Full, ImageSize -> {10, 10}, 
                    PlotRangePadding -> None, ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}, {
                    GraphicsBox[{
                    Directive[
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    EdgeForm[
                    Directive[
                    GrayLevel[0], 
                    Opacity[0.5]]], 
                    RGBColor[0.4992, 0.5552, 0.8309304]], 
                    RectangleBox[{0, 0}, {10, 10}, "RoundingRadius" -> 0]}, 
                    AspectRatio -> Full, ImageSize -> {10, 10}, 
                    PlotRangePadding -> None, ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #2}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                    AutoDelete -> False, 
                    GridBoxDividers -> {
                    "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                    GridBoxItemSize -> {
                    "Columns" -> {{All}}, "Rows" -> {{All}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{0.3}}, "Rows" -> {{0.5}}}], "Grid"]}}, 
                 GridBoxAlignment -> {
                  "Columns" -> {{Left}}, "Rows" -> {{Top}}}, AutoDelete -> 
                 False, 
                 GridBoxItemSize -> {
                  "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                 GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
                "Grid"], Alignment -> Left, AppearanceElements -> None, 
               ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
               "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
             FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
             False], TraditionalForm]& ), 
          InterpretationFunction :> (RowBox[{"SwatchLegend", "[", 
             RowBox[{
               RowBox[{"{", 
                 RowBox[{
                   RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"EdgeForm", "[", 
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    
                    TemplateBox[<|"color" -> GrayLevel[0]|>, 
                    "GrayLevelColorSwatchTemplate"], ",", 
                    RowBox[{"Opacity", "[", "0.5`", "]"}]}], "]"}], "]"}], 
                    ",", 
                    
                    TemplateBox[<|
                    "color" -> RGBColor[0.982864, 0.7431472, 0.3262672]|>, 
                    "RGBColorSwatchTemplate"]}], "]"}], ",", 
                   RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"EdgeForm", "[", 
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    
                    TemplateBox[<|"color" -> GrayLevel[0]|>, 
                    "GrayLevelColorSwatchTemplate"], ",", 
                    RowBox[{"Opacity", "[", "0.5`", "]"}]}], "]"}], "]"}], 
                    ",", 
                    
                    TemplateBox[<|
                    "color" -> RGBColor[0.4992, 0.5552, 0.8309304]|>, 
                    "RGBColorSwatchTemplate"]}], "]"}]}], "}"}], ",", 
               RowBox[{"{", 
                 RowBox[{#, ",", #2}], "}"}], ",", 
               RowBox[{"LegendMarkers", "\[Rule]", 
                 RowBox[{"{", 
                   RowBox[{"{", 
                    RowBox[{"None", ",", "None"}], "}"}], "}"}]}], ",", 
               RowBox[{"LabelStyle", "\[Rule]", 
                 RowBox[{"{", "}"}]}], ",", 
               RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& ), 
          Editable -> True], TraditionalForm], TraditionalForm]},
      "Legended",
      DisplayFunction->(FormBox[
        GridBox[{{
           TagBox[
            ItemBox[
             PaneBox[
              TagBox[#, "SkipImageSizeLevel"], 
              Alignment -> {Center, Baseline}, BaselinePosition -> Baseline], 
             DefaultBaseStyle -> "Labeled"], "SkipImageSizeLevel"], 
           ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
         GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
         AutoDelete -> False, GridBoxItemSize -> Automatic, 
         BaselinePosition -> {1, 1}], TraditionalForm]& ),
      Editable->True,
      InterpretationFunction->(FormBox[
        RowBox[{"Legended", "(", 
          RowBox[{#, ",", 
            RowBox[{"Placed", "[", 
              RowBox[{#2, ",", "After"}], "]"}]}], ")"}], 
        TraditionalForm]& )], {233.45833333333334, -197.4}, {
     Center, Center}, {431.00000000000006, 376.00000000000006},
     BaseStyle->{Graphics3DBoxOptions -> {SphericalRegion -> False}}], 
    InsetBox[
     TemplateBox[{
       GraphicsBox[{{}, {}, 
         DynamicModuleBox[{
          DynamicChart`click$74750$75315 = False, 
           DynamicChart`click$74756$75315 = False}, {{
            RGBColor[0.5, 0.5, 1.], 
            EdgeForm[{
              GrayLevel[0], 
              Opacity[0.5]}], {{{}, {{
                RGBColor[0.982864, 0.7431472, 0.3262672], 
                EdgeForm[{
                  GrayLevel[0], 
                  Opacity[0.5]}], 
                TagBox[
                 GeometricTransformationBox[
                  TagBox[
                   TagBox[
                    TooltipBox[
                    TagBox[
                    TagBox[
                    DynamicBox[{
                    FEPrivate`If[
                    CurrentValue["MouseOver"], 
                    EdgeForm[{
                    GrayLevel[0.5], 
                    AbsoluteThickness[2.5], 
                    Opacity[0.66]}], {}, {}], 
                    
                    DiskBox[{0, 0}, 1., {-2.243188575178629, 
                    3.141592653589793}]}, 
                    ImageSizeCache -> {{12.21283398181793, 
                    136.445866500266}, {-57.44586650026599, 
                    66.78716601818209}}], "DelayedMouseEffectStyle"], 
                    StatusArea[#, 0.8570145500269445]& , TagBoxNote -> 
                    "0.8570145500269445"], 
                    StyleBox[
                    "0.8570145500269445`", {}, StripOnInput -> False]], 
                    Annotation[#, 
                    Style[0.8570145500269445, {}], "Tooltip"]& ], 
                   
                   EventHandlerTag[{
                    "MouseClicked" :> 
                    FEPrivate`Set[DynamicChart`click$74750$75315, 
                    FEPrivate`Not[DynamicChart`click$74750$75315]], 
                    PassEventsDown -> True, Method -> "Preemptive", 
                    PassEventsUp -> True}]], 
                  Dynamic[
                   FEPrivate`If[
                   DynamicChart`click$74750$75315, {{{1., 0.}, {0., 1.}}, {
                    0.18015878021660292`, 0.08684937484441539}}, {{1, 0}, {0, 
                    1}}, {{1, 0}, {0, 1}}], 
                   TrackedSymbols :> {DynamicChart`click$74750$75315}]], 
                 "DelayedClickEffect"]}, {
                RGBColor[0.4992, 0.5552, 0.8309304], 
                EdgeForm[{
                  GrayLevel[0], 
                  Opacity[0.5]}], 
                TagBox[
                 GeometricTransformationBox[
                  TagBox[
                   TagBox[
                    TooltipBox[
                    TagBox[
                    TagBox[
                    DynamicBox[{
                    FEPrivate`If[
                    CurrentValue["MouseOver"], 
                    EdgeForm[{
                    GrayLevel[0.5], 
                    AbsoluteThickness[2.5], 
                    Opacity[0.66]}], {}, {}], 
                    
                    DiskBox[{0, 0}, 
                    1., {-3.141592653589793, -2.243188575178629}]}, 
                    ImageSizeCache -> {{12.21283398181794, 
                    75.74356380341507}, {3.25643619658495, 
                    53.57433081291619}}], "DelayedMouseEffectStyle"], 
                    StatusArea[#, 0.1429854499730555]& , TagBoxNote -> 
                    "0.1429854499730555"], 
                    StyleBox[
                    "0.1429854499730555`", {}, StripOnInput -> False]], 
                    Annotation[#, 
                    Style[0.1429854499730555, {}], "Tooltip"]& ], 
                   
                   EventHandlerTag[{
                    "MouseClicked" :> 
                    FEPrivate`Set[DynamicChart`click$74756$75315, 
                    FEPrivate`Not[DynamicChart`click$74756$75315]], 
                    PassEventsDown -> True, Method -> "Preemptive", 
                    PassEventsUp -> True}]], 
                  Dynamic[
                   FEPrivate`If[
                   DynamicChart`click$74756$75315, {{{1., 0.}, {0., 
                    1.}}, {-0.18015878021660292`, -0.0868493748444154}}, {{1, 
                    0}, {0, 1}}, {{1, 0}, {0, 1}}], 
                   TrackedSymbols :> {DynamicChart`click$74756$75315}]], 
                 "DelayedClickEffect"]}}}, {}}, {}}, {{{
              TagBox[
               GeometricTransformationBox[
                TagBox[
                 TagBox[
                  TooltipBox[
                   
                   TagBox[{{}, {}}, StatusArea[#, 0.8570145500269445]& , 
                    TagBoxNote -> "0.8570145500269445"], 
                   StyleBox[
                   "0.8570145500269445`", {}, StripOnInput -> False]], 
                  Annotation[#, 
                   Style[0.8570145500269445, {}], "Tooltip"]& ], 
                 
                 EventHandlerTag[{
                  "MouseClicked" :> 
                   FEPrivate`Set[DynamicChart`click$74750$75315, 
                    FEPrivate`Not[DynamicChart`click$74750$75315]], 
                   PassEventsDown -> True, Method -> "Preemptive", 
                   PassEventsUp -> True}]], 
                Dynamic[
                 FEPrivate`If[
                 DynamicChart`click$74750$75315, {{{1., 0.}, {0., 1.}}, {
                   0.18015878021660292`, 0.08684937484441539}}, {{1, 0}, {0, 
                  1}}, {{1, 0}, {0, 1}}], 
                 TrackedSymbols :> {DynamicChart`click$74750$75315}]], 
               "DelayedClickEffect"], 
              TagBox[
               GeometricTransformationBox[
                TagBox[
                 TagBox[
                  TooltipBox[
                   
                   TagBox[{{}, {}}, StatusArea[#, 0.1429854499730555]& , 
                    TagBoxNote -> "0.1429854499730555"], 
                   StyleBox[
                   "0.1429854499730555`", {}, StripOnInput -> False]], 
                  Annotation[#, 
                   Style[0.1429854499730555, {}], "Tooltip"]& ], 
                 
                 EventHandlerTag[{
                  "MouseClicked" :> 
                   FEPrivate`Set[DynamicChart`click$74756$75315, 
                    FEPrivate`Not[DynamicChart`click$74756$75315]], 
                   PassEventsDown -> True, Method -> "Preemptive", 
                   PassEventsUp -> True}]], 
                Dynamic[
                 FEPrivate`If[
                 DynamicChart`click$74756$75315, {{{1., 0.}, {0., 
                   1.}}, {-0.18015878021660292`, -0.0868493748444154}}, {{1, 
                  0}, {0, 1}}, {{1, 0}, {0, 1}}], 
                 TrackedSymbols :> {DynamicChart`click$74756$75315}]], 
               "DelayedClickEffect"]}, {}}, {}}, {}, {}}, 
          DynamicModuleValues :> {}], {{}, {}}, {{{}, {}, {}, {}}, {}}}, 
        ContentSelectable -> False, DisplayFunction -> Identity, 
        GridLinesStyle -> Directive[
          GrayLevel[0.5, 0.4]], PlotLabel -> FormBox[
          RowBox[{"\"2022\"", " ", "\"Slovenia\""}], TraditionalForm], 
        PlotRange -> {{-1., 1.}, {-1., 1.}}, PlotRangePadding -> 
        Scaled[0.09166666666666669]], 
       FormBox[
        FormBox[
         TemplateBox[{"\"moski\"", "\"zenske\""}, "SwatchLegend", 
          DisplayFunction -> (FormBox[
            StyleBox[
             StyleBox[
              PaneBox[
               TagBox[
                GridBox[{{
                   TagBox[
                    GridBox[{{
                    GraphicsBox[{
                    Directive[
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    EdgeForm[
                    Directive[
                    GrayLevel[0], 
                    Opacity[0.5]]], 
                    RGBColor[0.982864, 0.7431472, 0.3262672]], 
                    RectangleBox[{0, 0}, {10, 10}, "RoundingRadius" -> 0]}, 
                    AspectRatio -> Full, ImageSize -> {10, 10}, 
                    PlotRangePadding -> None, ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}, {
                    GraphicsBox[{
                    Directive[
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    EdgeForm[
                    Directive[
                    GrayLevel[0], 
                    Opacity[0.5]]], 
                    RGBColor[0.4992, 0.5552, 0.8309304]], 
                    RectangleBox[{0, 0}, {10, 10}, "RoundingRadius" -> 0]}, 
                    AspectRatio -> Full, ImageSize -> {10, 10}, 
                    PlotRangePadding -> None, ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #2}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                    AutoDelete -> False, 
                    GridBoxDividers -> {
                    "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                    GridBoxItemSize -> {
                    "Columns" -> {{All}}, "Rows" -> {{All}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{0.3}}, "Rows" -> {{0.5}}}], "Grid"]}}, 
                 GridBoxAlignment -> {
                  "Columns" -> {{Left}}, "Rows" -> {{Top}}}, AutoDelete -> 
                 False, GridBoxItemSize -> {
                  "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                 GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
                "Grid"], Alignment -> Left, AppearanceElements -> None, 
               ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
               "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
             FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
             False], TraditionalForm]& ), 
          InterpretationFunction :> (RowBox[{"SwatchLegend", "[", 
             RowBox[{
               RowBox[{"{", 
                 RowBox[{
                   RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"EdgeForm", "[", 
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    
                    TemplateBox[<|"color" -> GrayLevel[0]|>, 
                    "GrayLevelColorSwatchTemplate"], ",", 
                    RowBox[{"Opacity", "[", "0.5`", "]"}]}], "]"}], "]"}], 
                    ",", 
                    
                    TemplateBox[<|
                    "color" -> RGBColor[0.982864, 0.7431472, 0.3262672]|>, 
                    "RGBColorSwatchTemplate"]}], "]"}], ",", 
                   RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"EdgeForm", "[", 
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    
                    TemplateBox[<|"color" -> GrayLevel[0]|>, 
                    "GrayLevelColorSwatchTemplate"], ",", 
                    RowBox[{"Opacity", "[", "0.5`", "]"}]}], "]"}], "]"}], 
                    ",", 
                    
                    TemplateBox[<|
                    "color" -> RGBColor[0.4992, 0.5552, 0.8309304]|>, 
                    "RGBColorSwatchTemplate"]}], "]"}]}], "}"}], ",", 
               RowBox[{"{", 
                 RowBox[{#, ",", #2}], "}"}], ",", 
               RowBox[{"LegendMarkers", "\[Rule]", 
                 RowBox[{"{", 
                   RowBox[{"{", 
                    RowBox[{"None", ",", "None"}], "}"}], "}"}]}], ",", 
               RowBox[{"LabelStyle", "\[Rule]", 
                 RowBox[{"{", "}"}]}], ",", 
               RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& ), 
          Editable -> True], TraditionalForm], TraditionalForm]},
      "Legended",
      DisplayFunction->(FormBox[
        GridBox[{{
           TagBox[
            ItemBox[
             PaneBox[
              TagBox[#, "SkipImageSizeLevel"], 
              Alignment -> {Center, Baseline}, BaselinePosition -> Baseline], 
             DefaultBaseStyle -> "Labeled"], "SkipImageSizeLevel"], 
           ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
         GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
         AutoDelete -> False, GridBoxItemSize -> Automatic, 
         BaselinePosition -> {1, 1}], TraditionalForm]& ),
      Editable->True,
      InterpretationFunction->(FormBox[
        RowBox[{"Legended", "(", 
          RowBox[{#, ",", 
            RowBox[{"Placed", "[", 
              RowBox[{#2, ",", "After"}], "]"}]}], ")"}], 
        TraditionalForm]& )], {700.375, -197.4}, {Center, Center}, {431., 376.00000000000006},
     BaseStyle->{Graphics3DBoxOptions -> {SphericalRegion -> False}}], 
    InsetBox[
     TemplateBox[{
       GraphicsBox[{{}, {}, 
         DynamicModuleBox[{
          DynamicChart`click$74836$75344 = False, 
           DynamicChart`click$74842$75344 = False}, {{
            RGBColor[0.5, 0.5, 1.], 
            EdgeForm[{
              GrayLevel[0], 
              Opacity[0.5]}], {{{}, {{
                RGBColor[0.982864, 0.7431472, 0.3262672], 
                EdgeForm[{
                  GrayLevel[0], 
                  Opacity[0.5]}], 
                TagBox[
                 GeometricTransformationBox[
                  TagBox[
                   TagBox[
                    TooltipBox[
                    TagBox[
                    TagBox[
                    DynamicBox[{
                    FEPrivate`If[
                    CurrentValue["MouseOver"], 
                    EdgeForm[{
                    GrayLevel[0.5], 
                    AbsoluteThickness[2.5], 
                    Opacity[0.66]}], {}, {}], 
                    
                    DiskBox[{0, 0}, 1., {-2.706842883081939, 
                    3.141592653589793}]}, 
                    ImageSizeCache -> {{12.212833981817958`, 
                    136.44586650026602`}, {-57.44586650026599, 
                    66.78716601818209}}], "DelayedMouseEffectStyle"], 
                    StatusArea[#, 0.930807425015608]& , TagBoxNote -> 
                    "0.930807425015608"], 
                    StyleBox[
                    "0.930807425015608`", {}, StripOnInput -> False]], 
                    Annotation[#, 
                    Style[0.930807425015608, {}], "Tooltip"]& ], 
                   
                   EventHandlerTag[{
                    "MouseClicked" :> 
                    FEPrivate`Set[DynamicChart`click$74836$75344, 
                    FEPrivate`Not[DynamicChart`click$74836$75344]], 
                    PassEventsDown -> True, Method -> "Preemptive", 
                    PassEventsUp -> True}]], 
                  Dynamic[
                   FEPrivate`If[
                   DynamicChart`click$74836$75344, {{{1., 0.}, {0., 1.}}, {
                    0.19529339278210173`, 0.04313340626075971}}, {{1, 0}, {0, 
                    1}}, {{1, 0}, {0, 1}}], 
                   TrackedSymbols :> {DynamicChart`click$74836$75344}]], 
                 "DelayedClickEffect"]}, {
                RGBColor[0.4992, 0.5552, 0.8309304], 
                EdgeForm[{
                  GrayLevel[0], 
                  Opacity[0.5]}], 
                TagBox[
                 GeometricTransformationBox[
                  TagBox[
                   TagBox[
                    TooltipBox[
                    TagBox[
                    TagBox[
                    DynamicBox[{
                    FEPrivate`If[
                    CurrentValue["MouseOver"], 
                    EdgeForm[{
                    GrayLevel[0.5], 
                    AbsoluteThickness[2.5], 
                    Opacity[0.66]}], {}, {}], 
                    
                    DiskBox[{0, 0}, 
                    1., {-3.141592653589793, -2.706842883081939}]}, 
                    ImageSizeCache -> {{12.212833981817969`, 
                    75.7435638034151}, {3.2564361965849535`, 
                    31.65166935568349}}], "DelayedMouseEffectStyle"], 
                    StatusArea[#, 0.06919257498439202]& , TagBoxNote -> 
                    "0.06919257498439202"], 
                    StyleBox[
                    "0.06919257498439202`", {}, StripOnInput -> False]], 
                    Annotation[#, 
                    Style[0.06919257498439202, {}], "Tooltip"]& ], 
                   
                   EventHandlerTag[{
                    "MouseClicked" :> 
                    FEPrivate`Set[DynamicChart`click$74842$75344, 
                    FEPrivate`Not[DynamicChart`click$74842$75344]], 
                    PassEventsDown -> True, Method -> "Preemptive", 
                    PassEventsUp -> True}]], 
                  Dynamic[
                   FEPrivate`If[
                   DynamicChart`click$74842$75344, {{{1., 0.}, {0., 
                    1.}}, {-0.1952933927821017, -0.04313340626075974}}, {{1, 
                    0}, {0, 1}}, {{1, 0}, {0, 1}}], 
                   TrackedSymbols :> {DynamicChart`click$74842$75344}]], 
                 "DelayedClickEffect"]}}}, {}}, {}}, {{{
              TagBox[
               GeometricTransformationBox[
                TagBox[
                 TagBox[
                  TooltipBox[
                   
                   TagBox[{{}, {}}, StatusArea[#, 0.930807425015608]& , 
                    TagBoxNote -> "0.930807425015608"], 
                   StyleBox["0.930807425015608`", {}, StripOnInput -> False]],
                   Annotation[#, 
                   Style[0.930807425015608, {}], "Tooltip"]& ], 
                 
                 EventHandlerTag[{
                  "MouseClicked" :> 
                   FEPrivate`Set[DynamicChart`click$74836$75344, 
                    FEPrivate`Not[DynamicChart`click$74836$75344]], 
                   PassEventsDown -> True, Method -> "Preemptive", 
                   PassEventsUp -> True}]], 
                Dynamic[
                 FEPrivate`If[
                 DynamicChart`click$74836$75344, {{{1., 0.}, {0., 1.}}, {
                   0.19529339278210173`, 0.04313340626075971}}, {{1, 0}, {0, 
                  1}}, {{1, 0}, {0, 1}}], 
                 TrackedSymbols :> {DynamicChart`click$74836$75344}]], 
               "DelayedClickEffect"], 
              TagBox[
               GeometricTransformationBox[
                TagBox[
                 TagBox[
                  TooltipBox[
                   
                   TagBox[{{}, {}}, StatusArea[#, 0.06919257498439202]& , 
                    TagBoxNote -> "0.06919257498439202"], 
                   StyleBox[
                   "0.06919257498439202`", {}, StripOnInput -> False]], 
                  Annotation[#, 
                   Style[0.06919257498439202, {}], "Tooltip"]& ], 
                 
                 EventHandlerTag[{
                  "MouseClicked" :> 
                   FEPrivate`Set[DynamicChart`click$74842$75344, 
                    FEPrivate`Not[DynamicChart`click$74842$75344]], 
                   PassEventsDown -> True, Method -> "Preemptive", 
                   PassEventsUp -> True}]], 
                Dynamic[
                 FEPrivate`If[
                 DynamicChart`click$74842$75344, {{{1., 0.}, {0., 
                   1.}}, {-0.1952933927821017, -0.04313340626075974}}, {{1, 
                  0}, {0, 1}}, {{1, 0}, {0, 1}}], 
                 TrackedSymbols :> {DynamicChart`click$74842$75344}]], 
               "DelayedClickEffect"]}, {}}, {}}, {}, {}}, 
          DynamicModuleValues :> {}], {{}, {}}, {{{}, {}, {}, {}}, {}}}, 
        ContentSelectable -> False, DisplayFunction -> Identity, 
        GridLinesStyle -> Directive[
          GrayLevel[0.5, 0.4]], PlotLabel -> FormBox[
          RowBox[{"\"2022\"", " ", "\"T\[UDoubleDot]rkiye\""}], 
          TraditionalForm], PlotRange -> {{-1., 1.}, {-1., 1.}}, 
        PlotRangePadding -> Scaled[0.09166666666666669]], 
       FormBox[
        FormBox[
         TemplateBox[{"\"moski\"", "\"zenske\""}, "SwatchLegend", 
          DisplayFunction -> (FormBox[
            StyleBox[
             StyleBox[
              PaneBox[
               TagBox[
                GridBox[{{
                   TagBox[
                    GridBox[{{
                    GraphicsBox[{
                    Directive[
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    EdgeForm[
                    Directive[
                    GrayLevel[0], 
                    Opacity[0.5]]], 
                    RGBColor[0.982864, 0.7431472, 0.3262672]], 
                    RectangleBox[{0, 0}, {10, 10}, "RoundingRadius" -> 0]}, 
                    AspectRatio -> Full, ImageSize -> {10, 10}, 
                    PlotRangePadding -> None, ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}, {
                    GraphicsBox[{
                    Directive[
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    EdgeForm[
                    Directive[
                    GrayLevel[0], 
                    Opacity[0.5]]], 
                    RGBColor[0.4992, 0.5552, 0.8309304]], 
                    RectangleBox[{0, 0}, {10, 10}, "RoundingRadius" -> 0]}, 
                    AspectRatio -> Full, ImageSize -> {10, 10}, 
                    PlotRangePadding -> None, ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #2}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                    AutoDelete -> False, 
                    GridBoxDividers -> {
                    "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                    GridBoxItemSize -> {
                    "Columns" -> {{All}}, "Rows" -> {{All}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{0.3}}, "Rows" -> {{0.5}}}], "Grid"]}}, 
                 GridBoxAlignment -> {
                  "Columns" -> {{Left}}, "Rows" -> {{Top}}}, AutoDelete -> 
                 False, GridBoxItemSize -> {
                  "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                 GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
                "Grid"], Alignment -> Left, AppearanceElements -> None, 
               ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
               "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
             FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
             False], TraditionalForm]& ), 
          InterpretationFunction :> (RowBox[{"SwatchLegend", "[", 
             RowBox[{
               RowBox[{"{", 
                 RowBox[{
                   RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"EdgeForm", "[", 
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    
                    TemplateBox[<|"color" -> GrayLevel[0]|>, 
                    "GrayLevelColorSwatchTemplate"], ",", 
                    RowBox[{"Opacity", "[", "0.5`", "]"}]}], "]"}], "]"}], 
                    ",", 
                    
                    TemplateBox[<|
                    "color" -> RGBColor[0.982864, 0.7431472, 0.3262672]|>, 
                    "RGBColorSwatchTemplate"]}], "]"}], ",", 
                   RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"EdgeForm", "[", 
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    
                    TemplateBox[<|"color" -> GrayLevel[0]|>, 
                    "GrayLevelColorSwatchTemplate"], ",", 
                    RowBox[{"Opacity", "[", "0.5`", "]"}]}], "]"}], "]"}], 
                    ",", 
                    
                    TemplateBox[<|
                    "color" -> RGBColor[0.4992, 0.5552, 0.8309304]|>, 
                    "RGBColorSwatchTemplate"]}], "]"}]}], "}"}], ",", 
               RowBox[{"{", 
                 RowBox[{#, ",", #2}], "}"}], ",", 
               RowBox[{"LegendMarkers", "\[Rule]", 
                 RowBox[{"{", 
                   RowBox[{"{", 
                    RowBox[{"None", ",", "None"}], "}"}], "}"}]}], ",", 
               RowBox[{"LabelStyle", "\[Rule]", 
                 RowBox[{"{", "}"}]}], ",", 
               RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& ), 
          Editable -> True], TraditionalForm], TraditionalForm]},
      "Legended",
      DisplayFunction->(FormBox[
        GridBox[{{
           TagBox[
            ItemBox[
             PaneBox[
              TagBox[#, "SkipImageSizeLevel"], 
              Alignment -> {Center, Baseline}, BaselinePosition -> Baseline], 
             DefaultBaseStyle -> "Labeled"], "SkipImageSizeLevel"], 
           ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
         GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
         AutoDelete -> False, GridBoxItemSize -> Automatic, 
         BaselinePosition -> {1, 1}], TraditionalForm]& ),
      Editable->True,
      InterpretationFunction->(FormBox[
        RowBox[{"Legended", "(", 
          RowBox[{#, ",", 
            RowBox[{"Placed", "[", 
              RowBox[{#2, ",", "After"}], "]"}]}], ")"}], 
        TraditionalForm]& )], {1167.2916666666667, -197.4}, {
     Center, Center}, {431., 376.00000000000006},
     BaseStyle->{Graphics3DBoxOptions -> {SphericalRegion -> False}}], 
    InsetBox[
     TemplateBox[{
       GraphicsBox[{{}, {}, 
         DynamicModuleBox[{
          DynamicChart`click$74922$75373 = False, 
           DynamicChart`click$74928$75373 = False}, {{
            RGBColor[0.5, 0.5, 1.], 
            EdgeForm[{
              GrayLevel[0], 
              Opacity[0.5]}], {{{}, {{
                RGBColor[0.982864, 0.7431472, 0.3262672], 
                EdgeForm[{
                  GrayLevel[0], 
                  Opacity[0.5]}], 
                TagBox[
                 GeometricTransformationBox[
                  TagBox[
                   TagBox[
                    TooltipBox[
                    TagBox[
                    TagBox[
                    DynamicBox[{
                    FEPrivate`If[
                    CurrentValue["MouseOver"], 
                    EdgeForm[{
                    GrayLevel[0.5], 
                    AbsoluteThickness[2.5], 
                    Opacity[0.66]}], {}, {}], 
                    
                    DiskBox[{0, 0}, 1., {-2.3785319509325253`, 
                    3.141592653589793}]}, 
                    ImageSizeCache -> {{12.212833981817958`, 
                    136.44586650026602`}, {-57.44586650026599, 
                    66.78716601818209}}], "DelayedMouseEffectStyle"], 
                    StatusArea[#, 0.8785551172929209]& , TagBoxNote -> 
                    "0.8785551172929209"], 
                    StyleBox[
                    "0.8785551172929209`", {}, StripOnInput -> False]], 
                    Annotation[#, 
                    Style[0.8785551172929209, {}], "Tooltip"]& ], 
                   
                   EventHandlerTag[{
                    "MouseClicked" :> 
                    FEPrivate`Set[DynamicChart`click$74922$75373, 
                    FEPrivate`Not[DynamicChart`click$74922$75373]], 
                    PassEventsDown -> True, Method -> "Preemptive", 
                    PassEventsUp -> True}]], 
                  Dynamic[
                   FEPrivate`If[
                   DynamicChart`click$74922$75373, {{{1., 0.}, {0., 1.}}, {
                    0.1856191819420674, 0.07446824353479596}}, {{1, 0}, {0, 
                    1}}, {{1, 0}, {0, 1}}], 
                   TrackedSymbols :> {DynamicChart`click$74922$75373}]], 
                 "DelayedClickEffect"]}, {
                RGBColor[0.4992, 0.5552, 0.8309304], 
                EdgeForm[{
                  GrayLevel[0], 
                  Opacity[0.5]}], 
                TagBox[
                 GeometricTransformationBox[
                  TagBox[
                   TagBox[
                    TooltipBox[
                    TagBox[
                    TagBox[
                    DynamicBox[{
                    FEPrivate`If[
                    CurrentValue["MouseOver"], 
                    EdgeForm[{
                    GrayLevel[0.5], 
                    AbsoluteThickness[2.5], 
                    Opacity[0.66]}], {}, {}], 
                    
                    DiskBox[{0, 0}, 
                    1., {-3.141592653589793, -2.3785319509325253`}]}, 
                    ImageSizeCache -> {{12.212833981817969`, 
                    75.7435638034151}, {3.256436196584943, 
                    48.03845384205523}}], "DelayedMouseEffectStyle"], 
                    StatusArea[#, 0.1214448827070791]& , TagBoxNote -> 
                    "0.1214448827070791"], 
                    StyleBox[
                    "0.1214448827070791`", {}, StripOnInput -> False]], 
                    Annotation[#, 
                    Style[0.1214448827070791, {}], "Tooltip"]& ], 
                   
                   EventHandlerTag[{
                    "MouseClicked" :> 
                    FEPrivate`Set[DynamicChart`click$74928$75373, 
                    FEPrivate`Not[DynamicChart`click$74928$75373]], 
                    PassEventsDown -> True, Method -> "Preemptive", 
                    PassEventsUp -> True}]], 
                  Dynamic[
                   FEPrivate`If[
                   DynamicChart`click$74928$75373, {{{1., 0.}, {0., 
                    1.}}, {-0.1856191819420674, -0.07446824353479599}}, {{1, 
                    0}, {0, 1}}, {{1, 0}, {0, 1}}], 
                   TrackedSymbols :> {DynamicChart`click$74928$75373}]], 
                 "DelayedClickEffect"]}}}, {}}, {}}, {{{
              TagBox[
               GeometricTransformationBox[
                TagBox[
                 TagBox[
                  TooltipBox[
                   
                   TagBox[{{}, {}}, StatusArea[#, 0.8785551172929209]& , 
                    TagBoxNote -> "0.8785551172929209"], 
                   StyleBox[
                   "0.8785551172929209`", {}, StripOnInput -> False]], 
                  Annotation[#, 
                   Style[0.8785551172929209, {}], "Tooltip"]& ], 
                 
                 EventHandlerTag[{
                  "MouseClicked" :> 
                   FEPrivate`Set[DynamicChart`click$74922$75373, 
                    FEPrivate`Not[DynamicChart`click$74922$75373]], 
                   PassEventsDown -> True, Method -> "Preemptive", 
                   PassEventsUp -> True}]], 
                Dynamic[
                 FEPrivate`If[
                 DynamicChart`click$74922$75373, {{{1., 0.}, {0., 1.}}, {
                   0.1856191819420674, 0.07446824353479596}}, {{1, 0}, {0, 
                  1}}, {{1, 0}, {0, 1}}], 
                 TrackedSymbols :> {DynamicChart`click$74922$75373}]], 
               "DelayedClickEffect"], 
              TagBox[
               GeometricTransformationBox[
                TagBox[
                 TagBox[
                  TooltipBox[
                   
                   TagBox[{{}, {}}, StatusArea[#, 0.1214448827070791]& , 
                    TagBoxNote -> "0.1214448827070791"], 
                   StyleBox[
                   "0.1214448827070791`", {}, StripOnInput -> False]], 
                  Annotation[#, 
                   Style[0.1214448827070791, {}], "Tooltip"]& ], 
                 
                 EventHandlerTag[{
                  "MouseClicked" :> 
                   FEPrivate`Set[DynamicChart`click$74928$75373, 
                    FEPrivate`Not[DynamicChart`click$74928$75373]], 
                   PassEventsDown -> True, Method -> "Preemptive", 
                   PassEventsUp -> True}]], 
                Dynamic[
                 FEPrivate`If[
                 DynamicChart`click$74928$75373, {{{1., 0.}, {0., 
                   1.}}, {-0.1856191819420674, -0.07446824353479599}}, {{1, 
                  0}, {0, 1}}, {{1, 0}, {0, 1}}], 
                 TrackedSymbols :> {DynamicChart`click$74928$75373}]], 
               "DelayedClickEffect"]}, {}}, {}}, {}, {}}, 
          DynamicModuleValues :> {}], {{}, {}}, {{{}, {}, {}, {}}, {}}}, 
        ContentSelectable -> False, DisplayFunction -> Identity, 
        GridLinesStyle -> Directive[
          GrayLevel[0.5, 0.4]], PlotLabel -> FormBox[
          RowBox[{"\"2022\"", " ", "\"Latvia\""}], TraditionalForm], 
        PlotRange -> {{-1., 1.}, {-1., 1.}}, PlotRangePadding -> 
        Scaled[0.09166666666666669]], 
       FormBox[
        FormBox[
         TemplateBox[{"\"moski\"", "\"zenske\""}, "SwatchLegend", 
          DisplayFunction -> (FormBox[
            StyleBox[
             StyleBox[
              PaneBox[
               TagBox[
                GridBox[{{
                   TagBox[
                    GridBox[{{
                    GraphicsBox[{
                    Directive[
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    EdgeForm[
                    Directive[
                    GrayLevel[0], 
                    Opacity[0.5]]], 
                    RGBColor[0.982864, 0.7431472, 0.3262672]], 
                    RectangleBox[{0, 0}, {10, 10}, "RoundingRadius" -> 0]}, 
                    AspectRatio -> Full, ImageSize -> {10, 10}, 
                    PlotRangePadding -> None, ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}, {
                    GraphicsBox[{
                    Directive[
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    EdgeForm[
                    Directive[
                    GrayLevel[0], 
                    Opacity[0.5]]], 
                    RGBColor[0.4992, 0.5552, 0.8309304]], 
                    RectangleBox[{0, 0}, {10, 10}, "RoundingRadius" -> 0]}, 
                    AspectRatio -> Full, ImageSize -> {10, 10}, 
                    PlotRangePadding -> None, ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #2}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                    AutoDelete -> False, 
                    GridBoxDividers -> {
                    "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                    GridBoxItemSize -> {
                    "Columns" -> {{All}}, "Rows" -> {{All}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{0.3}}, "Rows" -> {{0.5}}}], "Grid"]}}, 
                 GridBoxAlignment -> {
                  "Columns" -> {{Left}}, "Rows" -> {{Top}}}, AutoDelete -> 
                 False, GridBoxItemSize -> {
                  "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                 GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
                "Grid"], Alignment -> Left, AppearanceElements -> None, 
               ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
               "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
             FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
             False], TraditionalForm]& ), 
          InterpretationFunction :> (RowBox[{"SwatchLegend", "[", 
             RowBox[{
               RowBox[{"{", 
                 RowBox[{
                   RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"EdgeForm", "[", 
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    
                    TemplateBox[<|"color" -> GrayLevel[0]|>, 
                    "GrayLevelColorSwatchTemplate"], ",", 
                    RowBox[{"Opacity", "[", "0.5`", "]"}]}], "]"}], "]"}], 
                    ",", 
                    
                    TemplateBox[<|
                    "color" -> RGBColor[0.982864, 0.7431472, 0.3262672]|>, 
                    "RGBColorSwatchTemplate"]}], "]"}], ",", 
                   RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"EdgeForm", "[", 
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    
                    TemplateBox[<|"color" -> GrayLevel[0]|>, 
                    "GrayLevelColorSwatchTemplate"], ",", 
                    RowBox[{"Opacity", "[", "0.5`", "]"}]}], "]"}], "]"}], 
                    ",", 
                    
                    TemplateBox[<|
                    "color" -> RGBColor[0.4992, 0.5552, 0.8309304]|>, 
                    "RGBColorSwatchTemplate"]}], "]"}]}], "}"}], ",", 
               RowBox[{"{", 
                 RowBox[{#, ",", #2}], "}"}], ",", 
               RowBox[{"LegendMarkers", "\[Rule]", 
                 RowBox[{"{", 
                   RowBox[{"{", 
                    RowBox[{"None", ",", "None"}], "}"}], "}"}]}], ",", 
               RowBox[{"LabelStyle", "\[Rule]", 
                 RowBox[{"{", "}"}]}], ",", 
               RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& ), 
          Editable -> True], TraditionalForm], TraditionalForm]},
      "Legended",
      DisplayFunction->(FormBox[
        GridBox[{{
           TagBox[
            ItemBox[
             PaneBox[
              TagBox[#, "SkipImageSizeLevel"], 
              Alignment -> {Center, Baseline}, BaselinePosition -> Baseline], 
             DefaultBaseStyle -> "Labeled"], "SkipImageSizeLevel"], 
           ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
         GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
         AutoDelete -> False, GridBoxItemSize -> Automatic, 
         BaselinePosition -> {1, 1}], TraditionalForm]& ),
      Editable->True,
      InterpretationFunction->(FormBox[
        RowBox[{"Legended", "(", 
          RowBox[{#, ",", 
            RowBox[{"Placed", "[", 
              RowBox[{#2, ",", "After"}], "]"}]}], ")"}], 
        TraditionalForm]& )], {1634.2083333333335, -197.4}, {
     Center, Center}, {431.0000000000002, 376.00000000000006},
     BaseStyle->{Graphics3DBoxOptions -> {SphericalRegion -> False}}], 
    InsetBox[
     TemplateBox[{
       GraphicsBox[{{}, {}, 
         DynamicModuleBox[{
          DynamicChart`click$75008$75402 = False, 
           DynamicChart`click$75014$75402 = False}, {{
            RGBColor[0.5, 0.5, 1.], 
            EdgeForm[{
              GrayLevel[0], 
              Opacity[0.5]}], {{{}, {{
                RGBColor[0.982864, 0.7431472, 0.3262672], 
                EdgeForm[{
                  GrayLevel[0], 
                  Opacity[0.5]}], 
                TagBox[
                 GeometricTransformationBox[
                  TagBox[
                   TagBox[
                    TooltipBox[
                    TagBox[
                    TagBox[
                    DynamicBox[{
                    FEPrivate`If[
                    CurrentValue["MouseOver"], 
                    EdgeForm[{
                    GrayLevel[0.5], 
                    AbsoluteThickness[2.5], 
                    Opacity[0.66]}], {}, {}], 
                    
                    DiskBox[{0, 0}, 1., {-2.3202495727172767`, 
                    3.141592653589793}]}, 
                    ImageSizeCache -> {{12.212833981817958`, 
                    136.44586650026602`}, {-57.44586650026599, 
                    66.78716601818209}}], "DelayedMouseEffectStyle"], 
                    StatusArea[#, 0.8692791887048127]& , TagBoxNote -> 
                    "0.8692791887048127"], 
                    StyleBox[
                    "0.8692791887048127`", {}, StripOnInput -> False]], 
                    Annotation[#, 
                    Style[0.8692791887048127, {}], "Tooltip"]& ], 
                   
                   EventHandlerTag[{
                    "MouseClicked" :> 
                    FEPrivate`Set[DynamicChart`click$75008$75402, 
                    FEPrivate`Not[DynamicChart`click$75008$75402]], 
                    PassEventsDown -> True, Method -> "Preemptive", 
                    PassEventsUp -> True}]], 
                  Dynamic[
                   FEPrivate`If[
                   DynamicChart`click$75008$75402, {{{1., 0.}, {0., 1.}}, {
                    0.18337058675186216`, 0.07984502435517066}}, {{1, 0}, {0, 
                    1}}, {{1, 0}, {0, 1}}], 
                   TrackedSymbols :> {DynamicChart`click$75008$75402}]], 
                 "DelayedClickEffect"]}, {
                RGBColor[0.4992, 0.5552, 0.8309304], 
                EdgeForm[{
                  GrayLevel[0], 
                  Opacity[0.5]}], 
                TagBox[
                 GeometricTransformationBox[
                  TagBox[
                   TagBox[
                    TooltipBox[
                    TagBox[
                    TagBox[
                    DynamicBox[{
                    FEPrivate`If[
                    CurrentValue["MouseOver"], 
                    EdgeForm[{
                    GrayLevel[0.5], 
                    AbsoluteThickness[2.5], 
                    Opacity[0.66]}], {}, {}], 
                    
                    DiskBox[{0, 0}, 
                    1., {-3.141592653589793, -2.3202495727172767`}]}, 
                    ImageSizeCache -> {{12.212833981817969`, 
                    75.7435638034151}, {3.25643619658495, 
                    50.52267894637872}}], "DelayedMouseEffectStyle"], 
                    StatusArea[#, 0.1307208112951873]& , TagBoxNote -> 
                    "0.1307208112951873"], 
                    StyleBox[
                    "0.1307208112951873`", {}, StripOnInput -> False]], 
                    Annotation[#, 
                    Style[0.1307208112951873, {}], "Tooltip"]& ], 
                   
                   EventHandlerTag[{
                    "MouseClicked" :> 
                    FEPrivate`Set[DynamicChart`click$75014$75402, 
                    FEPrivate`Not[DynamicChart`click$75014$75402]], 
                    PassEventsDown -> True, Method -> "Preemptive", 
                    PassEventsUp -> True}]], 
                  Dynamic[
                   FEPrivate`If[
                   DynamicChart`click$75014$75402, {{{1., 0.}, {0., 
                    1.}}, {-0.18337058675186216`, -0.07984502435517069}}, {{1,
                     0}, {0, 1}}, {{1, 0}, {0, 1}}], 
                   TrackedSymbols :> {DynamicChart`click$75014$75402}]], 
                 "DelayedClickEffect"]}}}, {}}, {}}, {{{
              TagBox[
               GeometricTransformationBox[
                TagBox[
                 TagBox[
                  TooltipBox[
                   
                   TagBox[{{}, {}}, StatusArea[#, 0.8692791887048127]& , 
                    TagBoxNote -> "0.8692791887048127"], 
                   StyleBox[
                   "0.8692791887048127`", {}, StripOnInput -> False]], 
                  Annotation[#, 
                   Style[0.8692791887048127, {}], "Tooltip"]& ], 
                 
                 EventHandlerTag[{
                  "MouseClicked" :> 
                   FEPrivate`Set[DynamicChart`click$75008$75402, 
                    FEPrivate`Not[DynamicChart`click$75008$75402]], 
                   PassEventsDown -> True, Method -> "Preemptive", 
                   PassEventsUp -> True}]], 
                Dynamic[
                 FEPrivate`If[
                 DynamicChart`click$75008$75402, {{{1., 0.}, {0., 1.}}, {
                   0.18337058675186216`, 0.07984502435517066}}, {{1, 0}, {0, 
                  1}}, {{1, 0}, {0, 1}}], 
                 TrackedSymbols :> {DynamicChart`click$75008$75402}]], 
               "DelayedClickEffect"], 
              TagBox[
               GeometricTransformationBox[
                TagBox[
                 TagBox[
                  TooltipBox[
                   
                   TagBox[{{}, {}}, StatusArea[#, 0.1307208112951873]& , 
                    TagBoxNote -> "0.1307208112951873"], 
                   StyleBox[
                   "0.1307208112951873`", {}, StripOnInput -> False]], 
                  Annotation[#, 
                   Style[0.1307208112951873, {}], "Tooltip"]& ], 
                 
                 EventHandlerTag[{
                  "MouseClicked" :> 
                   FEPrivate`Set[DynamicChart`click$75014$75402, 
                    FEPrivate`Not[DynamicChart`click$75014$75402]], 
                   PassEventsDown -> True, Method -> "Preemptive", 
                   PassEventsUp -> True}]], 
                Dynamic[
                 FEPrivate`If[
                 DynamicChart`click$75014$75402, {{{1., 0.}, {0., 
                   1.}}, {-0.18337058675186216`, -0.07984502435517069}}, {{1, 
                  0}, {0, 1}}, {{1, 0}, {0, 1}}], 
                 TrackedSymbols :> {DynamicChart`click$75014$75402}]], 
               "DelayedClickEffect"]}, {}}, {}}, {}, {}}, 
          DynamicModuleValues :> {}], {{}, {}}, {{{}, {}, {}, {}}, {}}}, 
        ContentSelectable -> False, DisplayFunction -> Identity, 
        GridLinesStyle -> Directive[
          GrayLevel[0.5, 0.4]], PlotLabel -> FormBox[
          RowBox[{"\"2022\"", " ", "\"Portugal\""}], TraditionalForm], 
        PlotRange -> {{-1., 1.}, {-1., 1.}}, PlotRangePadding -> 
        Scaled[0.09166666666666669]], 
       FormBox[
        FormBox[
         TemplateBox[{"\"moski\"", "\"zenske\""}, "SwatchLegend", 
          DisplayFunction -> (FormBox[
            StyleBox[
             StyleBox[
              PaneBox[
               TagBox[
                GridBox[{{
                   TagBox[
                    GridBox[{{
                    GraphicsBox[{
                    Directive[
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    EdgeForm[
                    Directive[
                    GrayLevel[0], 
                    Opacity[0.5]]], 
                    RGBColor[0.982864, 0.7431472, 0.3262672]], 
                    RectangleBox[{0, 0}, {10, 10}, "RoundingRadius" -> 0]}, 
                    AspectRatio -> Full, ImageSize -> {10, 10}, 
                    PlotRangePadding -> None, ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}, {
                    GraphicsBox[{
                    Directive[
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    EdgeForm[
                    Directive[
                    GrayLevel[0], 
                    Opacity[0.5]]], 
                    RGBColor[0.4992, 0.5552, 0.8309304]], 
                    RectangleBox[{0, 0}, {10, 10}, "RoundingRadius" -> 0]}, 
                    AspectRatio -> Full, ImageSize -> {10, 10}, 
                    PlotRangePadding -> None, ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #2}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                    AutoDelete -> False, 
                    GridBoxDividers -> {
                    "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                    GridBoxItemSize -> {
                    "Columns" -> {{All}}, "Rows" -> {{All}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{0.3}}, "Rows" -> {{0.5}}}], "Grid"]}}, 
                 GridBoxAlignment -> {
                  "Columns" -> {{Left}}, "Rows" -> {{Top}}}, AutoDelete -> 
                 False, GridBoxItemSize -> {
                  "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                 GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
                "Grid"], Alignment -> Left, AppearanceElements -> None, 
               ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
               "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
             FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
             False], TraditionalForm]& ), 
          InterpretationFunction :> (RowBox[{"SwatchLegend", "[", 
             RowBox[{
               RowBox[{"{", 
                 RowBox[{
                   RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"EdgeForm", "[", 
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    
                    TemplateBox[<|"color" -> GrayLevel[0]|>, 
                    "GrayLevelColorSwatchTemplate"], ",", 
                    RowBox[{"Opacity", "[", "0.5`", "]"}]}], "]"}], "]"}], 
                    ",", 
                    
                    TemplateBox[<|
                    "color" -> RGBColor[0.982864, 0.7431472, 0.3262672]|>, 
                    "RGBColorSwatchTemplate"]}], "]"}], ",", 
                   RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"EdgeForm", "[", 
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    
                    TemplateBox[<|"color" -> GrayLevel[0]|>, 
                    "GrayLevelColorSwatchTemplate"], ",", 
                    RowBox[{"Opacity", "[", "0.5`", "]"}]}], "]"}], "]"}], 
                    ",", 
                    
                    TemplateBox[<|
                    "color" -> RGBColor[0.4992, 0.5552, 0.8309304]|>, 
                    "RGBColorSwatchTemplate"]}], "]"}]}], "}"}], ",", 
               RowBox[{"{", 
                 RowBox[{#, ",", #2}], "}"}], ",", 
               RowBox[{"LegendMarkers", "\[Rule]", 
                 RowBox[{"{", 
                   RowBox[{"{", 
                    RowBox[{"None", ",", "None"}], "}"}], "}"}]}], ",", 
               RowBox[{"LabelStyle", "\[Rule]", 
                 RowBox[{"{", "}"}]}], ",", 
               RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& ), 
          Editable -> True], TraditionalForm], TraditionalForm]},
      "Legended",
      DisplayFunction->(FormBox[
        GridBox[{{
           TagBox[
            ItemBox[
             PaneBox[
              TagBox[#, "SkipImageSizeLevel"], 
              Alignment -> {Center, Baseline}, BaselinePosition -> Baseline], 
             DefaultBaseStyle -> "Labeled"], "SkipImageSizeLevel"], 
           ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
         GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
         AutoDelete -> False, GridBoxItemSize -> Automatic, 
         BaselinePosition -> {1, 1}], TraditionalForm]& ),
      Editable->True,
      InterpretationFunction->(FormBox[
        RowBox[{"Legended", "(", 
          RowBox[{#, ",", 
            RowBox[{"Placed", "[", 
              RowBox[{#2, ",", "After"}], "]"}]}], ")"}], 
        TraditionalForm]& )], {2101.125, -197.4}, {Center, Center}, {431., 376.00000000000006},
     BaseStyle->{Graphics3DBoxOptions -> {SphericalRegion -> False}}]}, {}},
  ImageSize->Full,
  PlotRange->{{0, 2334.5833333333335`}, {-394.8, 0}},
  PlotRangePadding->{6, 5}]], "Output",
 CellChangeTimes->{{3.9339052294008503`*^9, 3.9339052779724903`*^9}, {
  3.9339053592653923`*^9, 3.9339053908636703`*^9}},
 CellLabel->
  "Out[269]=",ExpressionUUID->"5e9955c2-714b-a24b-8399-e801c4cd31f9"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"\[IndentingNewLine]", 
  RowBox[{
   RowBox[{
    RowBox[{"tur", "=", 
     RowBox[{"AssociationThread", "[", 
      RowBox[{"\"\<Turcija\>\"", ",", 
       RowBox[{
        RowBox[{"tabRazmerjiSpolov", "[", 
         RowBox[{"[", "\"\<T\[UDoubleDot]rkiye\>\"", "]"}], "]"}], "[", 
        RowBox[{"[", "\"\<2022\>\"", "]"}], "]"}]}], "]"}]}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"swe", "=", 
     RowBox[{"AssociationThread", "[", 
      RowBox[{"\"\<Svedska\>\"", ",", 
       RowBox[{
        RowBox[{"tabRazmerjiSpolov", "[", 
         RowBox[{"[", "\"\<Sweden\>\"", "]"}], "]"}], "[", 
        RowBox[{"[", "\"\<2022\>\"", "]"}], "]"}]}], "]"}]}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{"Dataset", "[", 
    RowBox[{"Join", "[", 
     RowBox[{"tur", ",", "swe"}], "]"}], "]"}]}]}]], "Input",
 CellChangeTimes->{{3.933817400729858*^9, 3.933817515060444*^9}, {
  3.933817557731261*^9, 3.9338176640553093`*^9}, {3.9338177232232046`*^9, 
  3.933817735443609*^9}, {3.93381795986047*^9, 3.933818058361967*^9}},
 CellLabel->
  "In[270]:=",ExpressionUUID->"29bcf9fb-f46d-1a40-aba6-7c0f35a62e7c"],

Cell[BoxData[
 TagBox[
  TagBox[
   DynamicModuleBox[{TypeSystem`NestedGrid`PackagePrivate`$state$$ = <|
    "InitialData" -> <|
      "Turcija" -> 0.930807425015608, "Svedska" -> 0.83711310611201|>, 
     "AllowEmbedding" -> True, "InitialShape" -> 
     TypeSystem`PackageScope`Limited[
       TypeSystem`PackageScope`ColumnShape[
        TypeSystem`PackageScope`KeyValueShape[
         TypeSystem`PackageScope`AtomShape[73.5], 
         TypeSystem`PackageScope`AtomShape[60]]], 2, 
       DirectedInfinity[1], {}], "InitialType" -> TypeSystem`Assoc[
       TypeSystem`Atom[
        TypeSystem`Enumeration["Svedska", "Turcija"]], 
       TypeSystem`Atom[Real], 2], "Meta" -> <||>, "RowTarget" -> 20, 
     "ColumnTarget" -> 10, "Shape" -> TypeSystem`PackageScope`Limited[
       TypeSystem`PackageScope`ColumnShape[
        TypeSystem`PackageScope`KeyValueShape[
         TypeSystem`PackageScope`AtomShape[73.5], 
         TypeSystem`PackageScope`AtomShape[60]]], 2, 
       DirectedInfinity[1], {}], "Type" -> TypeSystem`Assoc[
       TypeSystem`Atom[
        TypeSystem`Enumeration["Svedska", "Turcija"]], 
       TypeSystem`Atom[Real], 2], "Path" -> {}, "DisplayedRowCount" -> 2, 
     "DisplayedColumnCount" -> 1, "DataRowCount" -> 2, "DataColumnCount" -> 1,
      "SortPaths" -> {}, "SortDirections" -> {}, "HiddenItemsMap" -> Null, 
     "UpdateType" -> 1|>, TypeSystem`NestedGrid`PackagePrivate`$outputID$$, 
    TypeSystem`NestedGrid`PackagePrivate`$path$$ = {}, 
    TypeSystem`NestedGrid`PackagePrivate`$vPos$$ = 1, 
    TypeSystem`NestedGrid`PackagePrivate`$hPos$$ = 1, 
    TypeSystem`NestedGrid`PackagePrivate`$grid$$ = 
    DynamicModule[{TypeSystem`NestedGrid`PackagePrivate`renderedGrid = Deploy[
        Style[
         Grid[{{
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["Turcija", 
                  Style[
                  "Turcija", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    Key["Turcija"]}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["Turcija"]}, "RowHeader", False], "Mouse"], 
              ImageSize -> {{73.5, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["0.930807"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["Turcija"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["Svedska", 
                  Style[
                  "Svedska", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    Key["Svedska"]}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["Svedska"]}, "RowHeader", False], "Mouse"], 
              ImageSize -> {{73.5, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["0.837113"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["Svedska"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}}, 
          BaseStyle -> {
           ContextMenu -> 
            Dynamic[TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger; 
              Which[TypeSystem`NestedGrid`PackagePrivate`$lastOutputID =!= 
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                 TypeSystem`NestedGrid`PackagePrivate`$outputID$$], {}, 
                TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger === 
                TypeSystem`NestedGrid`PackagePrivate`$lastContextMenuTrigger, 
                TypeSystem`NestedGrid`PackagePrivate`$lastContextMenu, True, 
                TypeSystem`NestedGrid`PackagePrivate`$lastContextMenuTrigger = 
                 TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger; 
                TypeSystem`NestedGrid`PackagePrivate`$lastContextMenu = 
                 Block[{TypeSystem`NestedGrid`PackagePrivate`$globalScrollPos = \
{TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$}}, 
                   
                   With[{TypeSystem`NestedGrid`PackagePrivate`lastPath$ = 
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ = 
                    TypeSystem`NestedGrid`PackagePrivate`$lastPathType, 
                    TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$ = 
                    TypeSystem`NestedGrid`PackagePrivate`$\
lastPathIsLeafHeader, TypeSystem`NestedGrid`PackagePrivate`headerHidden$ = And[
                    MatchQ[TypeSystem`NestedGrid`PackagePrivate`$lastPathType, 
                    Alternatives["RowHeader", "ColumnHeader"]], 
                    TypeSystem`NestedGrid`PackagePrivate`headerHiddenQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$]], 
                    TypeSystem`NestedGrid`PackagePrivate`allHidden$ = 
                    TypeSystem`NestedGrid`PackagePrivate`allHiddenQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`anyHidden$ = 
                    TypeSystem`NestedGrid`PackagePrivate`anyHiddenQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`sortDirection$ = 
                    TypeSystem`NestedGrid`PackagePrivate`columnSortDirection[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$[
                    "SortPaths"], 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$[
                    "SortDirections"]], 
                    TypeSystem`NestedGrid`PackagePrivate`haveData$ = Not[
                    FailureQ[
                    TypeSystem`NestedGrid`PackagePrivate`datasetInitialData[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$]]], 
                    TypeSystem`NestedGrid`PackagePrivate`isKeyDummy$ = Not[
                    FreeQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, Keys]]}, 
                    Join[{
                    If[
                    Or[
                    Not[TypeSystem`NestedGrid`PackagePrivate`haveData$], 
                    Not[TypeSystem`NestedGrid`PackagePrivate`anyHidden$], 
                    TypeSystem`NestedGrid`PackagePrivate`isKeyDummy$], 
                    Nothing, 
                    MenuItem[
                    "Show " <> 
                    Which[TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "Item", "", 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "RowHeader", "Row", 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "ColumnHeader", "Column", True, ""], 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateHiddenItems[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, 
                    "remove"]], MenuEvaluator -> Automatic]], 
                    If[
                    Or[
                    Not[TypeSystem`NestedGrid`PackagePrivate`haveData$], 
                    TypeSystem`NestedGrid`PackagePrivate`pathEmptyQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`isKeyDummy$, 
                    And[
                    TypeSystem`NestedGrid`PackagePrivate`allHidden$, 
                    TypeSystem`NestedGrid`PackagePrivate`headerHidden$]], 
                    Nothing, 
                    MenuItem[
                    "Hide " <> 
                    Which[TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "Item", "", 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "RowHeader", "Row", 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "ColumnHeader", "Column", True, ""], 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateHiddenItems[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, "add"]], 
                    MenuEvaluator -> Automatic]], Delimiter}, 
                    If[
                    And[TypeSystem`NestedGrid`PackagePrivate`haveData$, 
                    MatchQ[TypeSystem`NestedGrid`PackagePrivate`lastPathType$, 
                    Alternatives["ColumnHeader", "KeyDummy"]], 
                    TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$, 
                    Not[TypeSystem`NestedGrid`PackagePrivate`allHidden$]], {
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`sortDirection$ =!= 
                    "Ascending", 
                    MenuItem["Sort", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateSort[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, 
                    "Ascending"]], MenuEvaluator -> Automatic], Nothing], 
                    If[TypeSystem`NestedGrid`PackagePrivate`sortDirection$ =!= 
                    "Descending", 
                    MenuItem["Reverse Sort", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateSort[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, 
                    "Descending"]], MenuEvaluator -> Automatic], Nothing], 
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`sortDirection$ =!= 
                    None, 
                    MenuItem["Unsort", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateSort[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, None]], 
                    MenuEvaluator -> Automatic], Nothing], Delimiter}, {}], {
                    MenuItem["Copy Position to Clipboard", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentPosition[
                    TypeSystem`NestedGrid`PackagePrivate`copyClip]], 
                    MenuEvaluator -> Automatic], 
                    If[TypeSystem`NestedGrid`PackagePrivate`haveData$, 
                    MenuItem["Copy Data to Clipboard", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentData[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`copyClip]], 
                    MenuEvaluator -> Automatic], Nothing], Delimiter, 
                    MenuItem["Paste Position in New Cell", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentPosition[
                    TypeSystem`NestedGrid`PackagePrivate`cellPaste]], 
                    MenuEvaluator -> Automatic], 
                    If[TypeSystem`NestedGrid`PackagePrivate`haveData$, 
                    MenuItem["Paste Data in New Cell", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentData[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`cellPaste]], 
                    MenuEvaluator -> Automatic], Nothing]}]]]]], FontFamily -> 
            "Source Sans Pro", FontSize -> 14, FontWeight -> Plain}, Dividers -> 
          All, FrameStyle -> GrayLevel[0.7490196078431373], 
          Spacings -> {0, 0}, Alignment -> Left, 
          BaseStyle -> {
           FontFamily -> "Source Sans Pro", FontSize -> 14, FontWeight -> 
            Plain}], LineBreakWithin -> False, ContextMenu -> {}, NumberMarks -> 
         False, ShowAutoStyles -> False]], 
      TypeSystem`NestedGrid`PackagePrivate`initialQ = True}, 
     Dynamic[
      TypeSystem`NestedGrid`PackagePrivate`setupViewPath[
      TypeSystem`NestedGrid`PackagePrivate`$path$$, If[
         Not[TypeSystem`NestedGrid`PackagePrivate`initialQ], 
         Module[{
          TypeSystem`NestedGrid`PackagePrivate`tmpGrid$ = $Failed, 
           TypeSystem`NestedGrid`PackagePrivate`tmpData$ = 
           TypeSystem`NestedGrid`PackagePrivate`datasetData[
            TypeSystem`NestedGrid`PackagePrivate`$state$$]}, 
          TypeSystem`NestedGrid`PackagePrivate`tmpGrid$ = If[
             FailureQ[TypeSystem`NestedGrid`PackagePrivate`tmpData$], 
             TypeSystem`NestedGrid`PackagePrivate`renderedGrid, 
             TypeSystem`NestedGrid`PackagePrivate`renderGrid[
             TypeSystem`NestedGrid`PackagePrivate`$state$$, 
              TypeSystem`NestedGrid`PackagePrivate`$path$$, 
              TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
              TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
              TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
              TypeSystem`NestedGrid`PackagePrivate`localHold[
              TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
             TypeSystem`NestedGrid`PackagePrivate`tmpData$]]; If[
            Not[
             FailureQ[TypeSystem`NestedGrid`PackagePrivate`tmpGrid$]], 
            TypeSystem`NestedGrid`PackagePrivate`renderedGrid = 
            TypeSystem`NestedGrid`PackagePrivate`tmpGrid$]; Null]]; 
       TypeSystem`NestedGrid`PackagePrivate`initialQ = False; 
       TypeSystem`NestedGrid`PackagePrivate`$vPos$$; 
       TypeSystem`NestedGrid`PackagePrivate`$hPos$$; If[
         FailureQ[TypeSystem`NestedGrid`PackagePrivate`renderedGrid], 
         TypeSystem`SparseGrid[
          TypeSystem`H["(data no longer present)"]], 
         TypeSystem`NestedGrid`PackagePrivate`renderedGrid]], 
      TrackedSymbols :> {
       TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
        TypeSystem`NestedGrid`PackagePrivate`$hPos$$}], 
     DynamicModuleValues :> {}], 
    TypeSystem`NestedGrid`PackagePrivate`$topBar$$ = Dynamic[
     TypeSystem`NestedGrid`PackagePrivate`makeFramedBar[
      TypeSystem`PackageScope`SubViewPathbar[
      TypeSystem`NestedGrid`PackagePrivate`$path$$, 
       TypeSystem`NestedGrid`PackagePrivate`updateState[
       TypeSystem`NestedGrid`PackagePrivate`$state$$, 
        TypeSystem`NestedGrid`PackagePrivate`$path$$, 
        TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
        TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
        TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
        TypeSystem`NestedGrid`PackagePrivate`localHold[
        TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]]], 
     TrackedSymbols :> {TypeSystem`NestedGrid`PackagePrivate`$path$$}], 
    TypeSystem`NestedGrid`PackagePrivate`$bottomBar$$ = Style[
     Framed[
      Dynamic[
       Replace[
       TypeSystem`NestedGrid`PackagePrivate`mouseAnnotation$$, {
        TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
           TypeSystem`NestedGrid`PackagePrivate`localHold[
           TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][Null, 
           Blank[]] -> "", TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
           TypeSystem`NestedGrid`PackagePrivate`localHold[
           TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
           Pattern[TypeSystem`NestedGrid`PackagePrivate`path$, 
            Blank[]], 
           Pattern[TypeSystem`NestedGrid`PackagePrivate`pathType$, 
            Blank[]], 
           Pattern[TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$, 
            Blank[]]] :> (
          Increment[TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger]; 
          TypeSystem`NestedGrid`PackagePrivate`$lastPath = 
           TypeSystem`NestedGrid`PackagePrivate`path$; 
          TypeSystem`NestedGrid`PackagePrivate`$lastPathType = 
           TypeSystem`NestedGrid`PackagePrivate`pathType$; 
          TypeSystem`NestedGrid`PackagePrivate`$lastPathIsLeafHeader = 
           TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$; 
          TypeSystem`NestedGrid`PackagePrivate`$lastOutputID = 
           TypeSystem`NestedGrid`PackagePrivate`localHold[
            TypeSystem`NestedGrid`PackagePrivate`$outputID$$]; 
          TypeSystem`NestedGrid`PackagePrivate`makePathTrail[
           TypeSystem`NestedGrid`PackagePrivate`path$, 
            TypeSystem`NestedGrid`PackagePrivate`makePathElements]), Null :> 
         Spacer[10], Blank[] :> Spacer[10]}], 
       TrackedSymbols :> {
        TypeSystem`NestedGrid`PackagePrivate`mouseAnnotation$$}], FrameStyle -> 
      None, ImageMargins -> 0, FrameMargins -> 0, Alignment -> Top, 
      ImageSize -> {Automatic, 15}], FontSize -> 1], 
    TypeSystem`NestedGrid`PackagePrivate`mouseAnnotation$$ = Null}, 
    DynamicWrapperBox[
     DynamicBox[ToBoxes[
       Dataset`DatasetContent[
       2, "Path" -> Hold[TypeSystem`NestedGrid`PackagePrivate`$path$$], 
        "Grid" -> Hold[TypeSystem`NestedGrid`PackagePrivate`$grid$$], "State" -> 
        Hold[TypeSystem`NestedGrid`PackagePrivate`$state$$], "VPos" -> 
        Hold[TypeSystem`NestedGrid`PackagePrivate`$vPos$$], "HPos" -> 
        Hold[TypeSystem`NestedGrid`PackagePrivate`$hPos$$], "TopBar" -> 
        Hold[TypeSystem`NestedGrid`PackagePrivate`$topBar$$], "BottomBar" -> 
        Hold[TypeSystem`NestedGrid`PackagePrivate`$bottomBar$$], "OutputID" -> 
        Hold[
          TypeSystem`NestedGrid`PackagePrivate`localHold[
          TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]], StandardForm],
      ImageSizeCache->{152.2, {37.29743637626525, 43.60256362373475}},
      TrackedSymbols:>{
       TypeSystem`NestedGrid`PackagePrivate`$state$$, 
        TypeSystem`NestedGrid`PackagePrivate`$grid$$}], 
     TypeSystem`NestedGrid`PackagePrivate`mouseAnnotation$$ = 
     MouseAnnotation[],
     ImageSizeCache->{152.2, {37.29743637626525, 43.60256362373475}}],
    BaseStyle->{LineBreakWithin -> False},
    DynamicModuleValues:>{},
    Initialization:>(TypeSystem`NestedGrid`PackagePrivate`$outputID$$ = 
     CreateUUID[]),
    UnsavedVariables:>{TypeSystem`NestedGrid`PackagePrivate`$outputID$$}],
   Deploy,
   DefaultBaseStyle->"Deploy"],
  Dataset`InterpretDataset[1],
  Editable->False,
  SelectWithContents->True,
  Selectable->False]], "Output",
 CellChangeTimes->{
  3.933817429427894*^9, {3.9338174691263084`*^9, 3.9338175162712383`*^9}, {
   3.9338175673876734`*^9, 3.933817596462372*^9}, {3.933817626947548*^9, 
   3.9338176662395687`*^9}, {3.933817974642153*^9, 3.933818021328497*^9}, 
   3.9338180592954464`*^9, 3.9338198657487693`*^9, 3.933903901290598*^9, 
   3.933905406157305*^9},
 CellLabel->
  "Out[272]=",ExpressionUUID->"2f16fcda-d9f0-ea42-96ad-7a2b0db013c3"]
}, Open  ]],

Cell["\<\
Z grafa lahko bolje vidimo to, da mo\[SHacek]ki ostajajo glavni del \
obsojenih. Prav tako lahko opazimo, da se razmerje med mo\[SHacek]kimi in \
\[ZHacek]enskami v nekaterih dr\[ZHacek]avah razlikuje za skoraj 10%.\
\>", "Text",
 CellChangeTimes->{{3.933817266759386*^9, 3.93381738917297*^9}, 
   3.933817529407053*^9, {3.9338180710281925`*^9, 3.9338180986770763`*^9}, {
   3.9338200102168674`*^9, 
   3.933820040692461*^9}},ExpressionUUID->"2a8575f8-8a65-af40-a06e-\
50f510f58f80"]
}, Open  ]],

Cell[CellGroupData[{

Cell["Primerjava obsojenih glede na starost", "Subtitle",
 CellChangeTimes->{{3.933807575943556*^9, 3.9338075842315617`*^9}, 
   3.9338172286601048`*^9, {3.9339111028211403`*^9, 
   3.933911120640232*^9}},ExpressionUUID->"e783ab6a-a0ac-664e-9baf-\
2e939fa7667d"],

Cell["Primerjal bom \[SHacek]tevilo mladoletnih in polnoletnih obsojencev.", \
"Text",
 CellChangeTimes->{{3.9338075924544983`*^9, 3.933807636482174*^9}, {
   3.9338103915744133`*^9, 3.9338104040220814`*^9}, 
   3.9338181099653397`*^9},ExpressionUUID->"38d2afb0-0ed5-3742-9a1d-\
defd1dd409a2"],

Cell["\<\
Naredil sem funkcijo, ki za izbrano dr\[ZHacek]avo nari\[SHacek]e tabelarni \
graf obsojenih na 100.000 oseb glede na starost.\
\>", "Text",
 CellChangeTimes->{{3.93381841378619*^9, 
  3.9338185105426064`*^9}},ExpressionUUID->"5ee971c7-e340-8c4d-a5e7-\
a42b0020333f"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"PrimerjavaPoStarosti", "[", "izbranaDrzava_", "]"}], ":=", 
   "\[IndentingNewLine]", 
   RowBox[{"Module", "[", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
      "Mladi", ",", " ", "Stari", ",", " ", "leta", ",", " ", "tabela"}], 
      "}"}], ",", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"Mladi", " ", "=", " ", "MladoletniObsojeni"}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"Stari", " ", "=", " ", "PolnoletniObsojeni"}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"leta", " ", "=", " ", 
       RowBox[{"Normal", "[", 
        RowBox[{"Keys", "[", 
         RowBox[{"Mladi", "[", "izbranaDrzava", "]"}], "]"}], "]"}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"tabela", " ", "=", " ", 
       RowBox[{"Table", "[", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{
           RowBox[{
            RowBox[{"Mladi", "[", "izbranaDrzava", "]"}], "[", "leto", "]"}], 
           ",", " ", 
           RowBox[{
            RowBox[{"Stari", "[", "izbranaDrzava", "]"}], "[", "leto", 
            "]"}]}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{"leto", " ", ",", " ", "leta"}], "}"}]}], "]"}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"BarChart", "[", 
       RowBox[{"tabela", ",", "\[IndentingNewLine]", 
        RowBox[{"ChartLabels", "->", 
         RowBox[{"{", 
          RowBox[{"leta", ",", 
           RowBox[{"{", 
            RowBox[{"\"\<\>\"", ",", "\"\<\>\""}], "}"}]}], "}"}]}], ",", 
        "\[IndentingNewLine]", 
        RowBox[{"ChartLegends", "->", 
         RowBox[{"{", 
          RowBox[{"\"\<mladoletni\>\"", ",", "\"\<polnoletni\>\""}], "}"}]}], 
        ",", "\[IndentingNewLine]", 
        RowBox[{"BarSpacing", "->", 
         RowBox[{"-", "0.1"}]}], ",", "\[IndentingNewLine]", 
        RowBox[{"ImageSize", "->", "Large"}], ",", "\[IndentingNewLine]", 
        RowBox[{
        "PlotLabel", "->", 
         "\"\<Primerjava polnoletnih in mladoletni na 100 000 \
polnoletnih/mladolenih\>\""}]}], "\[IndentingNewLine]", "]"}]}]}], "]"}]}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{"PrimerjavaPoStarosti", "[", "\"\<Slovenia\>\"", 
  "]"}], "\[IndentingNewLine]", 
 RowBox[{"PrimerjavaPoStarosti", "[", "\"\<Latvia\>\"", "]"}]}], "Input",
 CellChangeTimes->{
  3.933807587993742*^9, {3.933807704781733*^9, 3.9338077775439644`*^9}, {
   3.9338078507508125`*^9, 3.933807862894701*^9}, {3.933807916472679*^9, 
   3.9338079530466747`*^9}, {3.933808284758949*^9, 3.9338082996963024`*^9}, 
   3.9338083586877575`*^9, {3.933808562121269*^9, 3.933808774811779*^9}, {
   3.933808988679348*^9, 3.93380898902173*^9}, {3.9338090738924026`*^9, 
   3.933809085670341*^9}, {3.9338091217125664`*^9, 3.933809133246431*^9}, {
   3.933809184799814*^9, 3.933809190892958*^9}, {3.9338093313799934`*^9, 
   3.933809402282673*^9}, {3.9338095889948463`*^9, 3.9338097724515495`*^9}, {
   3.933810187172867*^9, 3.933810560092339*^9}, {3.933810606895729*^9, 
   3.933810617947691*^9}, {3.933810649894804*^9, 3.933810708439705*^9}, {
   3.9338107645335007`*^9, 3.9338108875337944`*^9}, {3.933810938669718*^9, 
   3.9338109584968414`*^9}, {3.9338110340296326`*^9, 3.933811039711675*^9}, {
   3.9338111044391766`*^9, 3.933811105793917*^9}, {3.933811234121916*^9, 
   3.93381123504488*^9}, 3.9338112711924353`*^9, {3.933811809004223*^9, 
   3.9338118134606457`*^9}, {3.933818548347733*^9, 3.933818568628891*^9}, {
   3.93381911755834*^9, 3.933819121305519*^9}, {3.9339115694429016`*^9, 
   3.9339116258876762`*^9}},
 CellLabel->
  "In[355]:=",ExpressionUUID->"9526dd65-dfb7-5244-a115-07d362d5853c"],

Cell[BoxData[
 TemplateBox[{
   GraphicsBox[{{
      Opacity[0], 
      PointBox[{{-0.4159999999999999, 0.}, {20.799999999999997`, 
       0.}}]}, {{}, {{{}, {{}, {{
           Directive[
            EdgeForm[
             Directive[
              Thickness[Small], 
              Opacity[0.5599999999999999]]], 
            RGBColor[0.982864, 0.7431472, 0.3262672]], 
           TagBox[
            TooltipBox[
             TagBox[
              RectangleBox[{0., 0.}, {1., 122.75}, "RoundingRadius" -> 0], 
              StatusArea[#, 122.75]& , TagBoxNote -> "122.75"], 
             StyleBox["122.75`", {}, StripOnInput -> False]], Annotation[#, 
             Style[122.75, {}], "Tooltip"]& ]}, {
           Directive[
            EdgeForm[
             Directive[
              Thickness[Small], 
              Opacity[0.5599999999999999]]], 
            RGBColor[0.4992, 0.5552, 0.8309304]], 
           TagBox[
            TooltipBox[
             TagBox[
              RectangleBox[{0.9, 0.}, {1.9, 664.84}, "RoundingRadius" -> 0], 
              StatusArea[#, 664.84]& , TagBoxNote -> "664.84"], 
             StyleBox["664.84`", {}, StripOnInput -> False]], Annotation[#, 
             Style[664.84, {}], "Tooltip"]& ]}}}, {}, {}}, {{}, {{}, {{
           Directive[
            EdgeForm[
             Directive[
              Thickness[Small], 
              Opacity[0.5599999999999999]]], 
            RGBColor[0.982864, 0.7431472, 0.3262672]], 
           TagBox[
            TooltipBox[
             TagBox[
              RectangleBox[{2.1, 0.}, {3.1, 89.11}, "RoundingRadius" -> 0], 
              StatusArea[#, 89.11]& , TagBoxNote -> "89.11"], 
             StyleBox["89.11`", {}, StripOnInput -> False]], Annotation[#, 
             Style[89.11, {}], "Tooltip"]& ]}, {
           Directive[
            EdgeForm[
             Directive[
              Thickness[Small], 
              Opacity[0.5599999999999999]]], 
            RGBColor[0.4992, 0.5552, 0.8309304]], 
           TagBox[
            TooltipBox[
             TagBox[
              RectangleBox[{3., 0.}, {4., 552.53}, "RoundingRadius" -> 0], 
              StatusArea[#, 552.53]& , TagBoxNote -> "552.53"], 
             StyleBox["552.53`", {}, StripOnInput -> False]], Annotation[#, 
             Style[552.53, {}], "Tooltip"]& ]}}}, {}, {}}, {{}, {{}, {{
           Directive[
            EdgeForm[
             Directive[
              Thickness[Small], 
              Opacity[0.5599999999999999]]], 
            RGBColor[0.982864, 0.7431472, 0.3262672]], 
           TagBox[
            TooltipBox[
             TagBox[
              RectangleBox[{4.2, 0.}, {5.2, 87.52}, "RoundingRadius" -> 0], 
              StatusArea[#, 87.52]& , TagBoxNote -> "87.52"], 
             StyleBox["87.52`", {}, StripOnInput -> False]], Annotation[#, 
             Style[87.52, {}], "Tooltip"]& ]}, {
           Directive[
            EdgeForm[
             Directive[
              Thickness[Small], 
              Opacity[0.5599999999999999]]], 
            RGBColor[0.4992, 0.5552, 0.8309304]], 
           TagBox[
            TooltipBox[
             TagBox[
              
              RectangleBox[{5.1000000000000005`, 0.}, {6.1000000000000005`, 
               465.42}, "RoundingRadius" -> 0], StatusArea[#, 465.42]& , 
              TagBoxNote -> "465.42"], 
             StyleBox["465.42`", {}, StripOnInput -> False]], Annotation[#, 
             Style[465.42, {}], "Tooltip"]& ]}}}, {}, {}}, {{}, {{}, {{
           Directive[
            EdgeForm[
             Directive[
              Thickness[Small], 
              Opacity[0.5599999999999999]]], 
            RGBColor[0.982864, 0.7431472, 0.3262672]], 
           TagBox[
            TooltipBox[
             TagBox[
              
              RectangleBox[{6.300000000000001, 0.}, {7.300000000000001, 
               88.07}, "RoundingRadius" -> 0], StatusArea[#, 88.07]& , 
              TagBoxNote -> "88.07"], 
             StyleBox["88.07`", {}, StripOnInput -> False]], Annotation[#, 
             Style[88.07, {}], "Tooltip"]& ]}, {
           Directive[
            EdgeForm[
             Directive[
              Thickness[Small], 
              Opacity[0.5599999999999999]]], 
            RGBColor[0.4992, 0.5552, 0.8309304]], 
           TagBox[
            TooltipBox[
             TagBox[
              
              RectangleBox[{7.200000000000001, 0.}, {8.200000000000001, 
               399.79}, "RoundingRadius" -> 0], StatusArea[#, 399.79]& , 
              TagBoxNote -> "399.79"], 
             StyleBox["399.79`", {}, StripOnInput -> False]], Annotation[#, 
             Style[399.79, {}], "Tooltip"]& ]}}}, {}, {}}, {{}, {{}, {{
           Directive[
            EdgeForm[
             Directive[
              Thickness[Small], 
              Opacity[0.5599999999999999]]], 
            RGBColor[0.982864, 0.7431472, 0.3262672]], 
           TagBox[
            TooltipBox[
             TagBox[
              RectangleBox[{8.4, 0.}, {9.4, 73.85}, "RoundingRadius" -> 0], 
              StatusArea[#, 73.85]& , TagBoxNote -> "73.85"], 
             StyleBox["73.85`", {}, StripOnInput -> False]], Annotation[#, 
             Style[73.85, {}], "Tooltip"]& ]}, {
           Directive[
            EdgeForm[
             Directive[
              Thickness[Small], 
              Opacity[0.5599999999999999]]], 
            RGBColor[0.4992, 0.5552, 0.8309304]], 
           TagBox[
            TooltipBox[
             TagBox[
              RectangleBox[{9.3, 0.}, {10.3, 367.41}, "RoundingRadius" -> 0], 
              StatusArea[#, 367.41]& , TagBoxNote -> "367.41"], 
             StyleBox["367.41`", {}, StripOnInput -> False]], Annotation[#, 
             Style[367.41, {}], "Tooltip"]& ]}}}, {}, {}}, {{}, {{}, {{
           Directive[
            EdgeForm[
             Directive[
              Thickness[Small], 
              Opacity[0.5599999999999999]]], 
            RGBColor[0.982864, 0.7431472, 0.3262672]], 
           TagBox[
            TooltipBox[
             TagBox[
              RectangleBox[{10.5, 0.}, {11.5, 61.66}, "RoundingRadius" -> 0], 
              StatusArea[#, 61.66]& , TagBoxNote -> "61.66"], 
             StyleBox["61.66`", {}, StripOnInput -> False]], Annotation[#, 
             Style[61.66, {}], "Tooltip"]& ]}, {
           Directive[
            EdgeForm[
             Directive[
              Thickness[Small], 
              Opacity[0.5599999999999999]]], 
            RGBColor[0.4992, 0.5552, 0.8309304]], 
           TagBox[
            TooltipBox[
             TagBox[
              RectangleBox[{11.4, 0.}, {12.4, 358.63}, "RoundingRadius" -> 0],
               StatusArea[#, 358.63]& , TagBoxNote -> "358.63"], 
             StyleBox["358.63`", {}, StripOnInput -> False]], Annotation[#, 
             Style[358.63, {}], "Tooltip"]& ]}}}, {}, {}}, {{}, {{}, {{
           Directive[
            EdgeForm[
             Directive[
              Thickness[Small], 
              Opacity[0.5599999999999999]]], 
            RGBColor[0.982864, 0.7431472, 0.3262672]], 
           TagBox[
            TooltipBox[
             TagBox[
              RectangleBox[{12.6, 0.}, {13.6, 59.66}, "RoundingRadius" -> 0], 
              StatusArea[#, 59.66]& , TagBoxNote -> "59.66"], 
             StyleBox["59.66`", {}, StripOnInput -> False]], Annotation[#, 
             Style[59.66, {}], "Tooltip"]& ]}, {
           Directive[
            EdgeForm[
             Directive[
              Thickness[Small], 
              Opacity[0.5599999999999999]]], 
            RGBColor[0.4992, 0.5552, 0.8309304]], 
           TagBox[
            TooltipBox[
             TagBox[
              RectangleBox[{13.5, 0.}, {14.5, 352.53}, "RoundingRadius" -> 0],
               StatusArea[#, 352.53]& , TagBoxNote -> "352.53"], 
             StyleBox["352.53`", {}, StripOnInput -> False]], Annotation[#, 
             Style[352.53, {}], "Tooltip"]& ]}}}, {}, {}}, {{}, {{}, {{
           Directive[
            EdgeForm[
             Directive[
              Thickness[Small], 
              Opacity[0.5599999999999999]]], 
            RGBColor[0.982864, 0.7431472, 0.3262672]], 
           TagBox[
            TooltipBox[
             TagBox[
              RectangleBox[{14.7, 0.}, {15.7, 51.97}, "RoundingRadius" -> 0], 
              StatusArea[#, 51.97]& , TagBoxNote -> "51.97"], 
             StyleBox["51.97`", {}, StripOnInput -> False]], Annotation[#, 
             Style[51.97, {}], "Tooltip"]& ]}, {
           Directive[
            EdgeForm[
             Directive[
              Thickness[Small], 
              Opacity[0.5599999999999999]]], 
            RGBColor[0.4992, 0.5552, 0.8309304]], 
           TagBox[
            TooltipBox[
             TagBox[
              RectangleBox[{15.6, 0.}, {16.6, 279.16}, "RoundingRadius" -> 0],
               StatusArea[#, 279.16]& , TagBoxNote -> "279.16"], 
             StyleBox["279.16`", {}, StripOnInput -> False]], Annotation[#, 
             Style[279.16, {}], "Tooltip"]& ]}}}, {}, {}}, {{}, {{}, {{
           Directive[
            EdgeForm[
             Directive[
              Thickness[Small], 
              Opacity[0.5599999999999999]]], 
            RGBColor[0.982864, 0.7431472, 0.3262672]], 
           TagBox[
            TooltipBox[
             TagBox[
              RectangleBox[{16.8, 0.}, {17.8, 63.6}, "RoundingRadius" -> 0], 
              StatusArea[#, 63.6]& , TagBoxNote -> "63.6"], 
             StyleBox["63.6`", {}, StripOnInput -> False]], Annotation[#, 
             Style[63.6, {}], "Tooltip"]& ]}, {
           Directive[
            EdgeForm[
             Directive[
              Thickness[Small], 
              Opacity[0.5599999999999999]]], 
            RGBColor[0.4992, 0.5552, 0.8309304]], 
           TagBox[
            TooltipBox[
             TagBox[
              RectangleBox[{17.7, 0.}, {18.7, 330.7}, "RoundingRadius" -> 0], 
              StatusArea[#, 330.7]& , TagBoxNote -> "330.7"], 
             StyleBox["330.7`", {}, StripOnInput -> False]], Annotation[#, 
             Style[330.7, {}], "Tooltip"]& ]}}}, {}, {}}, {{}, {{}, {{
           Directive[
            EdgeForm[
             Directive[
              Thickness[Small], 
              Opacity[0.5599999999999999]]], 
            RGBColor[0.982864, 0.7431472, 0.3262672]], 
           TagBox[
            TooltipBox[
             TagBox[
              RectangleBox[{18.9, 0.}, {19.9, 51.54}, "RoundingRadius" -> 0], 
              StatusArea[#, 51.54]& , TagBoxNote -> "51.54"], 
             StyleBox["51.54`", {}, StripOnInput -> False]], Annotation[#, 
             Style[51.54, {}], "Tooltip"]& ]}, {
           Directive[
            EdgeForm[
             Directive[
              Thickness[Small], 
              Opacity[0.5599999999999999]]], 
            RGBColor[0.4992, 0.5552, 0.8309304]], 
           TagBox[
            TooltipBox[
             TagBox[
              
              RectangleBox[{19.799999999999997`, 0.}, {20.799999999999997`, 
               310.49}, "RoundingRadius" -> 0], StatusArea[#, 310.49]& , 
              TagBoxNote -> "310.49"], 
             StyleBox["310.49`", {}, StripOnInput -> False]], Annotation[#, 
             Style[310.49, {}], 
             "Tooltip"]& ]}}}, {}, {}}}, {}, {}}, {}, {}, {}, {}, {
      StyleBox[{Antialiasing -> False, {
         Directive[
          Thickness[Tiny]], {
          LineBox[{{-0.4159999999999999, 0.}, {21.224319999999995`, 0.}}]}, 
         StyleBox[{}, {"GraphicsLabel"}, StripOnInput -> False]}, 
        StyleBox[{{
           Directive[
            Thickness[Tiny]], 
           LineBox[{{0., 0.}, 
             Offset[{-1.102182119232618*^-15, -6.}, {0., 0.}]}], 
           LineBox[{{20.799999999999994`, 0.}, 
             
             Offset[{-1.102182119232618*^-15, -6.}, {20.799999999999994`, 
              
              0.}]}], {{}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, \
{}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {
             LineBox[{{1.8999999999999997`, 0.}, 
               
               Offset[{-1.102182119232618*^-15, -6.}, {1.8999999999999997`, 
                0.}]}], 
             LineBox[{{2.0999999999999996`, 0.}, 
               
               Offset[{-1.102182119232618*^-15, -6.}, {2.0999999999999996`, 
                0.}]}], 
             LineBox[{{3.9999999999999996`, 0.}, 
               
               Offset[{-1.102182119232618*^-15, -6.}, {3.9999999999999996`, 
                0.}]}], 
             LineBox[{{4.199999999999999, 0.}, 
               
               Offset[{-1.102182119232618*^-15, -6.}, {4.199999999999999, 
                0.}]}], 
             LineBox[{{6.1, 0.}, 
               Offset[{-1.102182119232618*^-15, -6.}, {6.1, 0.}]}], 
             LineBox[{{6.3, 0.}, 
               Offset[{-1.102182119232618*^-15, -6.}, {6.3, 0.}]}], 
             LineBox[{{8.2, 0.}, 
               Offset[{-1.102182119232618*^-15, -6.}, {8.2, 0.}]}], 
             LineBox[{{8.399999999999999, 0.}, 
               
               Offset[{-1.102182119232618*^-15, -6.}, {8.399999999999999, 
                0.}]}], 
             LineBox[{{10.299999999999999`, 0.}, 
               
               Offset[{-1.102182119232618*^-15, -6.}, {10.299999999999999`, 
                0.}]}], 
             LineBox[{{10.499999999999998`, 0.}, 
               
               Offset[{-1.102182119232618*^-15, -6.}, {10.499999999999998`, 
                0.}]}], 
             LineBox[{{12.399999999999999`, 0.}, 
               
               Offset[{-1.102182119232618*^-15, -6.}, {12.399999999999999`, 
                0.}]}], 
             LineBox[{{12.599999999999998`, 0.}, 
               
               Offset[{-1.102182119232618*^-15, -6.}, {12.599999999999998`, 
                0.}]}], 
             LineBox[{{14.499999999999998`, 0.}, 
               
               Offset[{-1.102182119232618*^-15, -6.}, {14.499999999999998`, 
                0.}]}], 
             LineBox[{{14.699999999999998`, 0.}, 
               
               Offset[{-1.102182119232618*^-15, -6.}, {14.699999999999998`, 
                0.}]}], 
             LineBox[{{16.599999999999998`, 0.}, 
               
               Offset[{-1.102182119232618*^-15, -6.}, {16.599999999999998`, 
                0.}]}], 
             LineBox[{{16.799999999999997`, 0.}, 
               
               Offset[{-1.102182119232618*^-15, -6.}, {16.799999999999997`, 
                0.}]}], 
             LineBox[{{18.699999999999996`, 0.}, 
               
               Offset[{-1.102182119232618*^-15, -6.}, {18.699999999999996`, 
                0.}]}], 
             LineBox[{{18.899999999999995`, 0.}, 
               
               Offset[{-1.102182119232618*^-15, -6.}, {18.899999999999995`, 
                0.}]}]}}}, 
          StyleBox[{
            Directive[
             Thickness[Tiny]], 
            Directive[
             Thickness[Tiny]], 
            StyleBox[{
              InsetBox[
               FormBox["\"2013\"", TraditionalForm], 
               Offset[{0, -2}, {0.9499999999999998, 0.}], 
               NCache[
                ImageScaled[{
                  Rational[1, 2], 1}], 
                ImageScaled[{0.5, 1}]], Automatic, {1, 0}], 
              InsetBox[
               FormBox["\"2014\"", TraditionalForm], 
               Offset[{0, -2}, {3.0499999999999994`, 0.}], 
               NCache[
                ImageScaled[{
                  Rational[1, 2], 1}], 
                ImageScaled[{0.5, 1}]], Automatic, {1, 0}], 
              InsetBox[
               FormBox["\"2015\"", TraditionalForm], 
               Offset[{0, -2}, {5.1499999999999995`, 0.}], 
               NCache[
                ImageScaled[{
                  Rational[1, 2], 1}], 
                ImageScaled[{0.5, 1}]], Automatic, {1, 0}], 
              InsetBox[
               FormBox["\"2016\"", TraditionalForm], 
               Offset[{0, -2}, {7.25, 0.}], 
               NCache[
                ImageScaled[{
                  Rational[1, 2], 1}], 
                ImageScaled[{0.5, 1}]], Automatic, {1, 0}], 
              InsetBox[
               FormBox["\"2017\"", TraditionalForm], 
               Offset[{0, -2}, {9.35, 0.}], 
               NCache[
                ImageScaled[{
                  Rational[1, 2], 1}], 
                ImageScaled[{0.5, 1}]], Automatic, {1, 0}], 
              InsetBox[
               FormBox["\"2018\"", TraditionalForm], 
               Offset[{0, -2}, {11.449999999999998`, 0.}], 
               NCache[
                ImageScaled[{
                  Rational[1, 2], 1}], 
                ImageScaled[{0.5, 1}]], Automatic, {1, 0}], 
              InsetBox[
               FormBox["\"2019\"", TraditionalForm], 
               Offset[{0, -2}, {13.549999999999999`, 0.}], 
               NCache[
                ImageScaled[{
                  Rational[1, 2], 1}], 
                ImageScaled[{0.5, 1}]], Automatic, {1, 0}], 
              InsetBox[
               FormBox["\"2020\"", TraditionalForm], 
               Offset[{0, -2}, {15.649999999999999`, 0.}], 
               NCache[
                ImageScaled[{
                  Rational[1, 2], 1}], 
                ImageScaled[{0.5, 1}]], Automatic, {1, 0}], 
              InsetBox[
               FormBox["\"2021\"", TraditionalForm], 
               Offset[{0, -2}, {17.749999999999996`, 0.}], 
               NCache[
                ImageScaled[{
                  Rational[1, 2], 1}], 
                ImageScaled[{0.5, 1}]], Automatic, {1, 0}], 
              InsetBox[
               FormBox["\"2022\"", TraditionalForm], 
               Offset[{0, -2}, {19.849999999999994`, 0.}], 
               NCache[
                ImageScaled[{
                  Rational[1, 2], 1}], 
                ImageScaled[{0.5, 1}]], Automatic, {1, 0}]}, {{}}, 
             StripOnInput -> False]}, {"GraphicsLabel"}, StripOnInput -> 
           False]}, {"GraphicsTicks"}, StripOnInput -> False]}, {
       "GraphicsAxes"}, StripOnInput -> False]}}, {
    DisplayFunction -> Identity, AspectRatio -> 
     NCache[GoldenRatio^(-1), 0.6180339887498948], Axes -> {False, True}, 
     AxesLabel -> {None, None}, AxesOrigin -> {-0.4159999999999999, 0.}, 
     CoordinatesToolOptions -> {"DisplayFunction" -> ({
         Identity[
          Part[#, 1]], 
         Identity[
          Part[#, 2]]}& ), "CopiedValueFunction" -> ({
         Identity[
          Part[#, 1]], 
         Identity[
          Part[#, 2]]}& )}, FrameLabel -> {{None, None}, {None, None}}, 
     FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
     GridLines -> {None, None}, GridLinesStyle -> Directive[
       GrayLevel[0.5, 0.4]], ImageSize -> Large, PlotLabel -> 
     FormBox["\"Primerjava polnoletnih in mladoletni na 100 000 \
polnoletnih/mladolenih\"", TraditionalForm], 
     PlotRange -> {{All, All}, {All, All}}, PlotRangePadding -> {{
        Scaled[0.02], 
        Scaled[0.02]}, {
        Scaled[0.02], 
        Scaled[0.05]}}, Ticks -> {None, Automatic}}], 
   FormBox[
    FormBox[
     TemplateBox[{"\"mladoletni\"", "\"polnoletni\""}, "SwatchLegend", 
      DisplayFunction -> (FormBox[
        StyleBox[
         StyleBox[
          PaneBox[
           TagBox[
            GridBox[{{
               TagBox[
                GridBox[{{
                   GraphicsBox[{
                    Directive[
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    EdgeForm[
                    Directive[
                    GrayLevel[0], 
                    Thickness[Small], 
                    Opacity[0.5599999999999999]]], 
                    RGBColor[0.982864, 0.7431472, 0.3262672]], 
                    RectangleBox[{0, 0}, {10, 10}, "RoundingRadius" -> 0]}, 
                    AspectRatio -> Full, ImageSize -> {10, 10}, 
                    PlotRangePadding -> None, ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}, {
                   GraphicsBox[{
                    Directive[
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    EdgeForm[
                    Directive[
                    GrayLevel[0], 
                    Thickness[Small], 
                    Opacity[0.5599999999999999]]], 
                    RGBColor[0.4992, 0.5552, 0.8309304]], 
                    RectangleBox[{0, 0}, {10, 10}, "RoundingRadius" -> 0]}, 
                    AspectRatio -> Full, ImageSize -> {10, 10}, 
                    PlotRangePadding -> None, ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #2}}, 
                 GridBoxAlignment -> {
                  "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                 AutoDelete -> False, 
                 GridBoxDividers -> {
                  "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                 GridBoxItemSize -> {"Columns" -> {{All}}, "Rows" -> {{All}}},
                  GridBoxSpacings -> {
                  "Columns" -> {{0.3}}, "Rows" -> {{0.5}}}], "Grid"]}}, 
             GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
             AutoDelete -> False, 
             GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
            "Grid"], Alignment -> Left, AppearanceElements -> None, 
           ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
           "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
         FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
         False], TraditionalForm]& ), 
      InterpretationFunction :> (RowBox[{"SwatchLegend", "[", 
         RowBox[{
           RowBox[{"{", 
             RowBox[{
               RowBox[{"{", 
                 RowBox[{
                   RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"EdgeForm", "[", 
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Thickness", "[", "Small", "]"}], ",", 
                    RowBox[{"Opacity", "[", "0.5599999999999999`", "]"}]}], 
                    "]"}], "]"}], ",", 
                    
                    TemplateBox[<|"color" -> GrayLevel[1]|>, 
                    "GrayLevelColorSwatchTemplate"]}], "]"}], ",", 
                   RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"EdgeForm", "[", 
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Thickness", "[", "Small", "]"}], ",", 
                    RowBox[{"Opacity", "[", "0.5599999999999999`", "]"}]}], 
                    "]"}], "]"}], ",", 
                    
                    TemplateBox[<|"color" -> GrayLevel[1]|>, 
                    "GrayLevelColorSwatchTemplate"]}], "]"}], ",", 
                   RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"EdgeForm", "[", 
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Thickness", "[", "Small", "]"}], ",", 
                    RowBox[{"Opacity", "[", "0.5599999999999999`", "]"}]}], 
                    "]"}], "]"}], ",", 
                    
                    TemplateBox[<|"color" -> GrayLevel[1]|>, 
                    "GrayLevelColorSwatchTemplate"]}], "]"}], ",", 
                   RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"EdgeForm", "[", 
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Thickness", "[", "Small", "]"}], ",", 
                    RowBox[{"Opacity", "[", "0.5599999999999999`", "]"}]}], 
                    "]"}], "]"}], ",", 
                    
                    TemplateBox[<|"color" -> GrayLevel[1]|>, 
                    "GrayLevelColorSwatchTemplate"]}], "]"}], ",", 
                   RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"EdgeForm", "[", 
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Thickness", "[", "Small", "]"}], ",", 
                    RowBox[{"Opacity", "[", "0.5599999999999999`", "]"}]}], 
                    "]"}], "]"}], ",", 
                    TemplateBox[<|"color" -> GrayLevel[1]|>, 
                    "GrayLevelColorSwatchTemplate"]}], "]"}], ",", 
                   RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"EdgeForm", "[", 
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Thickness", "[", "Small", "]"}], ",", 
                    RowBox[{"Opacity", "[", "0.5599999999999999`", "]"}]}], 
                    "]"}], "]"}], ",", 
                    
                    TemplateBox[<|"color" -> GrayLevel[1]|>, 
                    "GrayLevelColorSwatchTemplate"]}], "]"}], ",", 
                   RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"EdgeForm", "[", 
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Thickness", "[", "Small", "]"}], ",", 
                    RowBox[{"Opacity", "[", "0.5599999999999999`", "]"}]}], 
                    "]"}], "]"}], ",", 
                    
                    TemplateBox[<|"color" -> GrayLevel[1]|>, 
                    "GrayLevelColorSwatchTemplate"]}], "]"}], ",", 
                   RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"EdgeForm", "[", 
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Thickness", "[", "Small", "]"}], ",", 
                    RowBox[{"Opacity", "[", "0.5599999999999999`", "]"}]}], 
                    "]"}], "]"}], ",", 
                    
                    TemplateBox[<|"color" -> GrayLevel[1]|>, 
                    "GrayLevelColorSwatchTemplate"]}], "]"}], ",", 
                   RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"EdgeForm", "[", 
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Thickness", "[", "Small", "]"}], ",", 
                    RowBox[{"Opacity", "[", "0.5599999999999999`", "]"}]}], 
                    "]"}], "]"}], ",", 
                    
                    TemplateBox[<|"color" -> GrayLevel[1]|>, 
                    "GrayLevelColorSwatchTemplate"]}], "]"}], ",", 
                   RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"EdgeForm", "[", 
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Thickness", "[", "Small", "]"}], ",", 
                    RowBox[{"Opacity", "[", "0.5599999999999999`", "]"}]}], 
                    "]"}], "]"}], ",", 
                    
                    TemplateBox[<|"color" -> GrayLevel[1]|>, 
                    "GrayLevelColorSwatchTemplate"]}], "]"}]}], "}"}], ",", 
               RowBox[{"{", 
                 RowBox[{
                   RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"EdgeForm", "[", 
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Thickness", "[", "Small", "]"}], ",", 
                    RowBox[{"Opacity", "[", "0.5599999999999999`", "]"}]}], 
                    "]"}], "]"}], ",", 
                    
                    TemplateBox[<|
                    "color" -> RGBColor[0.982864, 0.7431472, 0.3262672]|>, 
                    "RGBColorSwatchTemplate"]}], "]"}], ",", 
                   RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"EdgeForm", "[", 
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Thickness", "[", "Small", "]"}], ",", 
                    RowBox[{"Opacity", "[", "0.5599999999999999`", "]"}]}], 
                    "]"}], "]"}], ",", 
                    
                    TemplateBox[<|
                    "color" -> RGBColor[0.4992, 0.5552, 0.8309304]|>, 
                    "RGBColorSwatchTemplate"]}], "]"}]}], "}"}]}], "}"}], ",", 
           RowBox[{"{", 
             RowBox[{
               RowBox[{"{", "}"}], ",", 
               RowBox[{"{", 
                 RowBox[{#, ",", #2}], "}"}]}], "}"}], ",", 
           RowBox[{"LegendMarkers", "\[Rule]", 
             RowBox[{"{", 
               RowBox[{
                 RowBox[{"{", "None", "}"}], ",", 
                 RowBox[{"{", 
                   RowBox[{"Automatic", ",", "Automatic"}], "}"}]}], "}"}]}], 
           ",", 
           RowBox[{"LabelStyle", "\[Rule]", 
             RowBox[{"{", 
               RowBox[{
                 RowBox[{"{", "}"}], ",", 
                 RowBox[{"{", "}"}]}], "}"}]}], ",", 
           RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& ), 
      Editable -> True], TraditionalForm], TraditionalForm]},
  "Legended",
  DisplayFunction->(GridBox[{{
      TagBox[
       ItemBox[
        PaneBox[
         TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
         BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
       "SkipImageSizeLevel"], 
      ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
    GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
    AutoDelete -> False, GridBoxItemSize -> Automatic, 
    BaselinePosition -> {1, 1}]& ),
  Editable->True,
  InterpretationFunction->(RowBox[{"Legended", "[", 
     RowBox[{#, ",", 
       RowBox[{"Placed", "[", 
         RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& )]], "Output",
 CellChangeTimes->{
  3.9338198659022903`*^9, 3.9339039018083897`*^9, {3.9339115933583927`*^9, 
   3.9339116272894287`*^9}},
 CellLabel->
  "Out[356]=",ExpressionUUID->"91e46f23-aed8-8244-b365-c3438dc642c4"],

Cell[BoxData[
 TemplateBox[{
   GraphicsBox[{{
      Opacity[0], 
      PointBox[{{-0.4159999999999999, 0.}, {20.799999999999997`, 
       0.}}]}, {{}, {{{}, {{}, {{
           Directive[
            EdgeForm[
             Directive[
              Thickness[Small], 
              Opacity[0.5599999999999999]]], 
            RGBColor[0.982864, 0.7431472, 0.3262672]], 
           TagBox[
            TooltipBox[
             TagBox[
              RectangleBox[{0., 0.}, {1., 173.19}, "RoundingRadius" -> 0], 
              StatusArea[#, 173.19]& , TagBoxNote -> "173.19"], 
             StyleBox["173.19`", {}, StripOnInput -> False]], Annotation[#, 
             Style[173.19, {}], "Tooltip"]& ]}, {
           Directive[
            EdgeForm[
             Directive[
              Thickness[Small], 
              Opacity[0.5599999999999999]]], 
            RGBColor[0.4992, 0.5552, 0.8309304]], 
           TagBox[
            TooltipBox[
             TagBox[
              RectangleBox[{0.9, 0.}, {1.9, 478.59}, "RoundingRadius" -> 0], 
              StatusArea[#, 478.59]& , TagBoxNote -> "478.59"], 
             StyleBox["478.59`", {}, StripOnInput -> False]], Annotation[#, 
             Style[478.59, {}], "Tooltip"]& ]}}}, {}, {}}, {{}, {{}, {{
           Directive[
            EdgeForm[
             Directive[
              Thickness[Small], 
              Opacity[0.5599999999999999]]], 
            RGBColor[0.982864, 0.7431472, 0.3262672]], 
           TagBox[
            TooltipBox[
             TagBox[
              RectangleBox[{2.1, 0.}, {3.1, 153.83}, "RoundingRadius" -> 0], 
              StatusArea[#, 153.83]& , TagBoxNote -> "153.83"], 
             StyleBox["153.83`", {}, StripOnInput -> False]], Annotation[#, 
             Style[153.83, {}], "Tooltip"]& ]}, {
           Directive[
            EdgeForm[
             Directive[
              Thickness[Small], 
              Opacity[0.5599999999999999]]], 
            RGBColor[0.4992, 0.5552, 0.8309304]], 
           TagBox[
            TooltipBox[
             TagBox[
              RectangleBox[{3., 0.}, {4., 524.33}, "RoundingRadius" -> 0], 
              StatusArea[#, 524.33]& , TagBoxNote -> "524.33"], 
             StyleBox["524.33`", {}, StripOnInput -> False]], Annotation[#, 
             Style[524.33, {}], "Tooltip"]& ]}}}, {}, {}}, {{}, {{}, {{
           Directive[
            EdgeForm[
             Directive[
              Thickness[Small], 
              Opacity[0.5599999999999999]]], 
            RGBColor[0.982864, 0.7431472, 0.3262672]], 
           TagBox[
            TooltipBox[
             TagBox[
              RectangleBox[{4.2, 0.}, {5.2, 118.74}, "RoundingRadius" -> 0], 
              StatusArea[#, 118.74]& , TagBoxNote -> "118.74"], 
             StyleBox["118.74`", {}, StripOnInput -> False]], Annotation[#, 
             Style[118.74, {}], "Tooltip"]& ]}, {
           Directive[
            EdgeForm[
             Directive[
              Thickness[Small], 
              Opacity[0.5599999999999999]]], 
            RGBColor[0.4992, 0.5552, 0.8309304]], 
           TagBox[
            TooltipBox[
             TagBox[
              
              RectangleBox[{5.1000000000000005`, 0.}, {6.1000000000000005`, 
               558.43}, "RoundingRadius" -> 0], StatusArea[#, 558.43]& , 
              TagBoxNote -> "558.43"], 
             StyleBox["558.43`", {}, StripOnInput -> False]], Annotation[#, 
             Style[558.43, {}], "Tooltip"]& ]}}}, {}, {}}, {{}, {{}, {{
           Directive[
            EdgeForm[
             Directive[
              Thickness[Small], 
              Opacity[0.5599999999999999]]], 
            RGBColor[0.982864, 0.7431472, 0.3262672]], 
           TagBox[
            TooltipBox[
             TagBox[
              
              RectangleBox[{6.300000000000001, 0.}, {7.300000000000001, 109.},
                "RoundingRadius" -> 0], StatusArea[#, 109.]& , TagBoxNote -> 
              "109."], 
             StyleBox["109.`", {}, StripOnInput -> False]], Annotation[#, 
             Style[109., {}], "Tooltip"]& ]}, {
           Directive[
            EdgeForm[
             Directive[
              Thickness[Small], 
              Opacity[0.5599999999999999]]], 
            RGBColor[0.4992, 0.5552, 0.8309304]], 
           TagBox[
            TooltipBox[
             TagBox[
              
              RectangleBox[{7.200000000000001, 0.}, {8.200000000000001, 
               529.55}, "RoundingRadius" -> 0], StatusArea[#, 529.55]& , 
              TagBoxNote -> "529.55"], 
             StyleBox["529.55`", {}, StripOnInput -> False]], Annotation[#, 
             Style[529.55, {}], "Tooltip"]& ]}}}, {}, {}}, {{}, {{}, {{
           Directive[
            EdgeForm[
             Directive[
              Thickness[Small], 
              Opacity[0.5599999999999999]]], 
            RGBColor[0.982864, 0.7431472, 0.3262672]], 
           TagBox[
            TooltipBox[
             TagBox[
              RectangleBox[{8.4, 0.}, {9.4, 114.72}, "RoundingRadius" -> 0], 
              StatusArea[#, 114.72]& , TagBoxNote -> "114.72"], 
             StyleBox["114.72`", {}, StripOnInput -> False]], Annotation[#, 
             Style[114.72, {}], "Tooltip"]& ]}, {
           Directive[
            EdgeForm[
             Directive[
              Thickness[Small], 
              Opacity[0.5599999999999999]]], 
            RGBColor[0.4992, 0.5552, 0.8309304]], 
           TagBox[
            TooltipBox[
             TagBox[
              RectangleBox[{9.3, 0.}, {10.3, 555.54}, "RoundingRadius" -> 0], 
              StatusArea[#, 555.54]& , TagBoxNote -> "555.54"], 
             StyleBox["555.54`", {}, StripOnInput -> False]], Annotation[#, 
             Style[555.54, {}], "Tooltip"]& ]}}}, {}, {}}, {{}, {{}, {{
           Directive[
            EdgeForm[
             Directive[
              Thickness[Small], 
              Opacity[0.5599999999999999]]], 
            RGBColor[0.982864, 0.7431472, 0.3262672]], 
           TagBox[
            TooltipBox[
             TagBox[
              RectangleBox[{10.5, 0.}, {11.5, 92.54}, "RoundingRadius" -> 0], 
              StatusArea[#, 92.54]& , TagBoxNote -> "92.54"], 
             StyleBox["92.54`", {}, StripOnInput -> False]], Annotation[#, 
             Style[92.54, {}], "Tooltip"]& ]}, {
           Directive[
            EdgeForm[
             Directive[
              Thickness[Small], 
              Opacity[0.5599999999999999]]], 
            RGBColor[0.4992, 0.5552, 0.8309304]], 
           TagBox[
            TooltipBox[
             TagBox[
              RectangleBox[{11.4, 0.}, {12.4, 523.92}, "RoundingRadius" -> 0],
               StatusArea[#, 523.92]& , TagBoxNote -> "523.92"], 
             StyleBox["523.92`", {}, StripOnInput -> False]], Annotation[#, 
             Style[523.92, {}], "Tooltip"]& ]}}}, {}, {}}, {{}, {{}, {{
           Directive[
            EdgeForm[
             Directive[
              Thickness[Small], 
              Opacity[0.5599999999999999]]], 
            RGBColor[0.982864, 0.7431472, 0.3262672]], 
           TagBox[
            TooltipBox[
             TagBox[
              RectangleBox[{12.6, 0.}, {13.6, 87.79}, "RoundingRadius" -> 0], 
              StatusArea[#, 87.79]& , TagBoxNote -> "87.79"], 
             StyleBox["87.79`", {}, StripOnInput -> False]], Annotation[#, 
             Style[87.79, {}], "Tooltip"]& ]}, {
           Directive[
            EdgeForm[
             Directive[
              Thickness[Small], 
              Opacity[0.5599999999999999]]], 
            RGBColor[0.4992, 0.5552, 0.8309304]], 
           TagBox[
            TooltipBox[
             TagBox[
              RectangleBox[{13.5, 0.}, {14.5, 498.65}, "RoundingRadius" -> 0],
               StatusArea[#, 498.65]& , TagBoxNote -> "498.65"], 
             StyleBox["498.65`", {}, StripOnInput -> False]], Annotation[#, 
             Style[498.65, {}], "Tooltip"]& ]}}}, {}, {}}, {{}, {{}, {{
           Directive[
            EdgeForm[
             Directive[
              Thickness[Small], 
              Opacity[0.5599999999999999]]], 
            RGBColor[0.982864, 0.7431472, 0.3262672]], 
           TagBox[
            TooltipBox[
             TagBox[
              RectangleBox[{14.7, 0.}, {15.7, 73.17}, "RoundingRadius" -> 0], 
              StatusArea[#, 73.17]& , TagBoxNote -> "73.17"], 
             StyleBox["73.17`", {}, StripOnInput -> False]], Annotation[#, 
             Style[73.17, {}], "Tooltip"]& ]}, {
           Directive[
            EdgeForm[
             Directive[
              Thickness[Small], 
              Opacity[0.5599999999999999]]], 
            RGBColor[0.4992, 0.5552, 0.8309304]], 
           TagBox[
            TooltipBox[
             TagBox[
              RectangleBox[{15.6, 0.}, {16.6, 441.2}, "RoundingRadius" -> 0], 
              StatusArea[#, 441.2]& , TagBoxNote -> "441.2"], 
             StyleBox["441.2`", {}, StripOnInput -> False]], Annotation[#, 
             Style[441.2, {}], "Tooltip"]& ]}}}, {}, {}}, {{}, {{}, {{
           Directive[
            EdgeForm[
             Directive[
              Thickness[Small], 
              Opacity[0.5599999999999999]]], 
            RGBColor[0.982864, 0.7431472, 0.3262672]], 
           TagBox[
            TooltipBox[
             TagBox[
              RectangleBox[{16.8, 0.}, {17.8, 73.91}, "RoundingRadius" -> 0], 
              StatusArea[#, 73.91]& , TagBoxNote -> "73.91"], 
             StyleBox["73.91`", {}, StripOnInput -> False]], Annotation[#, 
             Style[73.91, {}], "Tooltip"]& ]}, {
           Directive[
            EdgeForm[
             Directive[
              Thickness[Small], 
              Opacity[0.5599999999999999]]], 
            RGBColor[0.4992, 0.5552, 0.8309304]], 
           TagBox[
            TooltipBox[
             TagBox[
              RectangleBox[{17.7, 0.}, {18.7, 429.07}, "RoundingRadius" -> 0],
               StatusArea[#, 429.07]& , TagBoxNote -> "429.07"], 
             StyleBox["429.07`", {}, StripOnInput -> False]], Annotation[#, 
             Style[429.07, {}], "Tooltip"]& ]}}}, {}, {}}, {{}, {{}, {{
           Directive[
            EdgeForm[
             Directive[
              Thickness[Small], 
              Opacity[0.5599999999999999]]], 
            RGBColor[0.982864, 0.7431472, 0.3262672]], 
           TagBox[
            TooltipBox[
             TagBox[
              RectangleBox[{18.9, 0.}, {19.9, 46.24}, "RoundingRadius" -> 0], 
              StatusArea[#, 46.24]& , TagBoxNote -> "46.24"], 
             StyleBox["46.24`", {}, StripOnInput -> False]], Annotation[#, 
             Style[46.24, {}], "Tooltip"]& ]}, {
           Directive[
            EdgeForm[
             Directive[
              Thickness[Small], 
              Opacity[0.5599999999999999]]], 
            RGBColor[0.4992, 0.5552, 0.8309304]], 
           TagBox[
            TooltipBox[
             TagBox[
              
              RectangleBox[{19.799999999999997`, 0.}, {20.799999999999997`, 
               306.31}, "RoundingRadius" -> 0], StatusArea[#, 306.31]& , 
              TagBoxNote -> "306.31"], 
             StyleBox["306.31`", {}, StripOnInput -> False]], Annotation[#, 
             Style[306.31, {}], 
             "Tooltip"]& ]}}}, {}, {}}}, {}, {}}, {}, {}, {}, {}, {
      StyleBox[{Antialiasing -> False, {
         Directive[
          Thickness[Tiny]], {
          LineBox[{{-0.4159999999999999, 0.}, {21.224319999999995`, 0.}}]}, 
         StyleBox[{}, {"GraphicsLabel"}, StripOnInput -> False]}, 
        StyleBox[{{
           Directive[
            Thickness[Tiny]], 
           LineBox[{{0., 0.}, 
             Offset[{-1.102182119232618*^-15, -6.}, {0., 0.}]}], 
           LineBox[{{20.799999999999994`, 0.}, 
             
             Offset[{-1.102182119232618*^-15, -6.}, {20.799999999999994`, 
              
              0.}]}], {{}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, \
{}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {
             LineBox[{{1.8999999999999997`, 0.}, 
               
               Offset[{-1.102182119232618*^-15, -6.}, {1.8999999999999997`, 
                0.}]}], 
             LineBox[{{2.0999999999999996`, 0.}, 
               
               Offset[{-1.102182119232618*^-15, -6.}, {2.0999999999999996`, 
                0.}]}], 
             LineBox[{{3.9999999999999996`, 0.}, 
               
               Offset[{-1.102182119232618*^-15, -6.}, {3.9999999999999996`, 
                0.}]}], 
             LineBox[{{4.199999999999999, 0.}, 
               
               Offset[{-1.102182119232618*^-15, -6.}, {4.199999999999999, 
                0.}]}], 
             LineBox[{{6.1, 0.}, 
               Offset[{-1.102182119232618*^-15, -6.}, {6.1, 0.}]}], 
             LineBox[{{6.3, 0.}, 
               Offset[{-1.102182119232618*^-15, -6.}, {6.3, 0.}]}], 
             LineBox[{{8.2, 0.}, 
               Offset[{-1.102182119232618*^-15, -6.}, {8.2, 0.}]}], 
             LineBox[{{8.399999999999999, 0.}, 
               
               Offset[{-1.102182119232618*^-15, -6.}, {8.399999999999999, 
                0.}]}], 
             LineBox[{{10.299999999999999`, 0.}, 
               
               Offset[{-1.102182119232618*^-15, -6.}, {10.299999999999999`, 
                0.}]}], 
             LineBox[{{10.499999999999998`, 0.}, 
               
               Offset[{-1.102182119232618*^-15, -6.}, {10.499999999999998`, 
                0.}]}], 
             LineBox[{{12.399999999999999`, 0.}, 
               
               Offset[{-1.102182119232618*^-15, -6.}, {12.399999999999999`, 
                0.}]}], 
             LineBox[{{12.599999999999998`, 0.}, 
               
               Offset[{-1.102182119232618*^-15, -6.}, {12.599999999999998`, 
                0.}]}], 
             LineBox[{{14.499999999999998`, 0.}, 
               
               Offset[{-1.102182119232618*^-15, -6.}, {14.499999999999998`, 
                0.}]}], 
             LineBox[{{14.699999999999998`, 0.}, 
               
               Offset[{-1.102182119232618*^-15, -6.}, {14.699999999999998`, 
                0.}]}], 
             LineBox[{{16.599999999999998`, 0.}, 
               
               Offset[{-1.102182119232618*^-15, -6.}, {16.599999999999998`, 
                0.}]}], 
             LineBox[{{16.799999999999997`, 0.}, 
               
               Offset[{-1.102182119232618*^-15, -6.}, {16.799999999999997`, 
                0.}]}], 
             LineBox[{{18.699999999999996`, 0.}, 
               
               Offset[{-1.102182119232618*^-15, -6.}, {18.699999999999996`, 
                0.}]}], 
             LineBox[{{18.899999999999995`, 0.}, 
               
               Offset[{-1.102182119232618*^-15, -6.}, {18.899999999999995`, 
                0.}]}]}}}, 
          StyleBox[{
            Directive[
             Thickness[Tiny]], 
            Directive[
             Thickness[Tiny]], 
            StyleBox[{
              InsetBox[
               FormBox["\"2013\"", TraditionalForm], 
               Offset[{0, -2}, {0.9499999999999998, 0.}], 
               NCache[
                ImageScaled[{
                  Rational[1, 2], 1}], 
                ImageScaled[{0.5, 1}]], Automatic, {1, 0}], 
              InsetBox[
               FormBox["\"2014\"", TraditionalForm], 
               Offset[{0, -2}, {3.0499999999999994`, 0.}], 
               NCache[
                ImageScaled[{
                  Rational[1, 2], 1}], 
                ImageScaled[{0.5, 1}]], Automatic, {1, 0}], 
              InsetBox[
               FormBox["\"2015\"", TraditionalForm], 
               Offset[{0, -2}, {5.1499999999999995`, 0.}], 
               NCache[
                ImageScaled[{
                  Rational[1, 2], 1}], 
                ImageScaled[{0.5, 1}]], Automatic, {1, 0}], 
              InsetBox[
               FormBox["\"2016\"", TraditionalForm], 
               Offset[{0, -2}, {7.25, 0.}], 
               NCache[
                ImageScaled[{
                  Rational[1, 2], 1}], 
                ImageScaled[{0.5, 1}]], Automatic, {1, 0}], 
              InsetBox[
               FormBox["\"2017\"", TraditionalForm], 
               Offset[{0, -2}, {9.35, 0.}], 
               NCache[
                ImageScaled[{
                  Rational[1, 2], 1}], 
                ImageScaled[{0.5, 1}]], Automatic, {1, 0}], 
              InsetBox[
               FormBox["\"2018\"", TraditionalForm], 
               Offset[{0, -2}, {11.449999999999998`, 0.}], 
               NCache[
                ImageScaled[{
                  Rational[1, 2], 1}], 
                ImageScaled[{0.5, 1}]], Automatic, {1, 0}], 
              InsetBox[
               FormBox["\"2019\"", TraditionalForm], 
               Offset[{0, -2}, {13.549999999999999`, 0.}], 
               NCache[
                ImageScaled[{
                  Rational[1, 2], 1}], 
                ImageScaled[{0.5, 1}]], Automatic, {1, 0}], 
              InsetBox[
               FormBox["\"2020\"", TraditionalForm], 
               Offset[{0, -2}, {15.649999999999999`, 0.}], 
               NCache[
                ImageScaled[{
                  Rational[1, 2], 1}], 
                ImageScaled[{0.5, 1}]], Automatic, {1, 0}], 
              InsetBox[
               FormBox["\"2021\"", TraditionalForm], 
               Offset[{0, -2}, {17.749999999999996`, 0.}], 
               NCache[
                ImageScaled[{
                  Rational[1, 2], 1}], 
                ImageScaled[{0.5, 1}]], Automatic, {1, 0}], 
              InsetBox[
               FormBox["\"2022\"", TraditionalForm], 
               Offset[{0, -2}, {19.849999999999994`, 0.}], 
               NCache[
                ImageScaled[{
                  Rational[1, 2], 1}], 
                ImageScaled[{0.5, 1}]], Automatic, {1, 0}]}, {{}}, 
             StripOnInput -> False]}, {"GraphicsLabel"}, StripOnInput -> 
           False]}, {"GraphicsTicks"}, StripOnInput -> False]}, {
       "GraphicsAxes"}, StripOnInput -> False]}}, {
    DisplayFunction -> Identity, AspectRatio -> 
     NCache[GoldenRatio^(-1), 0.6180339887498948], Axes -> {False, True}, 
     AxesLabel -> {None, None}, AxesOrigin -> {-0.4159999999999999, 0.}, 
     CoordinatesToolOptions -> {"DisplayFunction" -> ({
         Identity[
          Part[#, 1]], 
         Identity[
          Part[#, 2]]}& ), "CopiedValueFunction" -> ({
         Identity[
          Part[#, 1]], 
         Identity[
          Part[#, 2]]}& )}, FrameLabel -> {{None, None}, {None, None}}, 
     FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
     GridLines -> {None, None}, GridLinesStyle -> Directive[
       GrayLevel[0.5, 0.4]], ImageSize -> Large, PlotLabel -> 
     FormBox["\"Primerjava polnoletnih in mladoletni na 100 000 \
polnoletnih/mladolenih\"", TraditionalForm], 
     PlotRange -> {{All, All}, {All, All}}, PlotRangePadding -> {{
        Scaled[0.02], 
        Scaled[0.02]}, {
        Scaled[0.02], 
        Scaled[0.05]}}, Ticks -> {None, Automatic}}], 
   FormBox[
    FormBox[
     TemplateBox[{"\"mladoletni\"", "\"polnoletni\""}, "SwatchLegend", 
      DisplayFunction -> (FormBox[
        StyleBox[
         StyleBox[
          PaneBox[
           TagBox[
            GridBox[{{
               TagBox[
                GridBox[{{
                   GraphicsBox[{
                    Directive[
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    EdgeForm[
                    Directive[
                    GrayLevel[0], 
                    Thickness[Small], 
                    Opacity[0.5599999999999999]]], 
                    RGBColor[0.982864, 0.7431472, 0.3262672]], 
                    RectangleBox[{0, 0}, {10, 10}, "RoundingRadius" -> 0]}, 
                    AspectRatio -> Full, ImageSize -> {10, 10}, 
                    PlotRangePadding -> None, ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}, {
                   GraphicsBox[{
                    Directive[
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    EdgeForm[
                    Directive[
                    GrayLevel[0], 
                    Thickness[Small], 
                    Opacity[0.5599999999999999]]], 
                    RGBColor[0.4992, 0.5552, 0.8309304]], 
                    RectangleBox[{0, 0}, {10, 10}, "RoundingRadius" -> 0]}, 
                    AspectRatio -> Full, ImageSize -> {10, 10}, 
                    PlotRangePadding -> None, ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #2}}, 
                 GridBoxAlignment -> {
                  "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                 AutoDelete -> False, 
                 GridBoxDividers -> {
                  "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                 GridBoxItemSize -> {"Columns" -> {{All}}, "Rows" -> {{All}}},
                  GridBoxSpacings -> {
                  "Columns" -> {{0.3}}, "Rows" -> {{0.5}}}], "Grid"]}}, 
             GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
             AutoDelete -> False, 
             GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
            "Grid"], Alignment -> Left, AppearanceElements -> None, 
           ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
           "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
         FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
         False], TraditionalForm]& ), 
      InterpretationFunction :> (RowBox[{"SwatchLegend", "[", 
         RowBox[{
           RowBox[{"{", 
             RowBox[{
               RowBox[{"{", 
                 RowBox[{
                   RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"EdgeForm", "[", 
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Thickness", "[", "Small", "]"}], ",", 
                    RowBox[{"Opacity", "[", "0.5599999999999999`", "]"}]}], 
                    "]"}], "]"}], ",", 
                    
                    TemplateBox[<|"color" -> GrayLevel[1]|>, 
                    "GrayLevelColorSwatchTemplate"]}], "]"}], ",", 
                   RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"EdgeForm", "[", 
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Thickness", "[", "Small", "]"}], ",", 
                    RowBox[{"Opacity", "[", "0.5599999999999999`", "]"}]}], 
                    "]"}], "]"}], ",", 
                    
                    TemplateBox[<|"color" -> GrayLevel[1]|>, 
                    "GrayLevelColorSwatchTemplate"]}], "]"}], ",", 
                   RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"EdgeForm", "[", 
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Thickness", "[", "Small", "]"}], ",", 
                    RowBox[{"Opacity", "[", "0.5599999999999999`", "]"}]}], 
                    "]"}], "]"}], ",", 
                    
                    TemplateBox[<|"color" -> GrayLevel[1]|>, 
                    "GrayLevelColorSwatchTemplate"]}], "]"}], ",", 
                   RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"EdgeForm", "[", 
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Thickness", "[", "Small", "]"}], ",", 
                    RowBox[{"Opacity", "[", "0.5599999999999999`", "]"}]}], 
                    "]"}], "]"}], ",", 
                    
                    TemplateBox[<|"color" -> GrayLevel[1]|>, 
                    "GrayLevelColorSwatchTemplate"]}], "]"}], ",", 
                   RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"EdgeForm", "[", 
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Thickness", "[", "Small", "]"}], ",", 
                    RowBox[{"Opacity", "[", "0.5599999999999999`", "]"}]}], 
                    "]"}], "]"}], ",", 
                    TemplateBox[<|"color" -> GrayLevel[1]|>, 
                    "GrayLevelColorSwatchTemplate"]}], "]"}], ",", 
                   RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"EdgeForm", "[", 
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Thickness", "[", "Small", "]"}], ",", 
                    RowBox[{"Opacity", "[", "0.5599999999999999`", "]"}]}], 
                    "]"}], "]"}], ",", 
                    
                    TemplateBox[<|"color" -> GrayLevel[1]|>, 
                    "GrayLevelColorSwatchTemplate"]}], "]"}], ",", 
                   RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"EdgeForm", "[", 
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Thickness", "[", "Small", "]"}], ",", 
                    RowBox[{"Opacity", "[", "0.5599999999999999`", "]"}]}], 
                    "]"}], "]"}], ",", 
                    
                    TemplateBox[<|"color" -> GrayLevel[1]|>, 
                    "GrayLevelColorSwatchTemplate"]}], "]"}], ",", 
                   RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"EdgeForm", "[", 
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Thickness", "[", "Small", "]"}], ",", 
                    RowBox[{"Opacity", "[", "0.5599999999999999`", "]"}]}], 
                    "]"}], "]"}], ",", 
                    
                    TemplateBox[<|"color" -> GrayLevel[1]|>, 
                    "GrayLevelColorSwatchTemplate"]}], "]"}], ",", 
                   RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"EdgeForm", "[", 
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Thickness", "[", "Small", "]"}], ",", 
                    RowBox[{"Opacity", "[", "0.5599999999999999`", "]"}]}], 
                    "]"}], "]"}], ",", 
                    
                    TemplateBox[<|"color" -> GrayLevel[1]|>, 
                    "GrayLevelColorSwatchTemplate"]}], "]"}], ",", 
                   RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"EdgeForm", "[", 
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Thickness", "[", "Small", "]"}], ",", 
                    RowBox[{"Opacity", "[", "0.5599999999999999`", "]"}]}], 
                    "]"}], "]"}], ",", 
                    
                    TemplateBox[<|"color" -> GrayLevel[1]|>, 
                    "GrayLevelColorSwatchTemplate"]}], "]"}]}], "}"}], ",", 
               RowBox[{"{", 
                 RowBox[{
                   RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"EdgeForm", "[", 
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Thickness", "[", "Small", "]"}], ",", 
                    RowBox[{"Opacity", "[", "0.5599999999999999`", "]"}]}], 
                    "]"}], "]"}], ",", 
                    
                    TemplateBox[<|
                    "color" -> RGBColor[0.982864, 0.7431472, 0.3262672]|>, 
                    "RGBColorSwatchTemplate"]}], "]"}], ",", 
                   RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"EdgeForm", "[", 
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Thickness", "[", "Small", "]"}], ",", 
                    RowBox[{"Opacity", "[", "0.5599999999999999`", "]"}]}], 
                    "]"}], "]"}], ",", 
                    
                    TemplateBox[<|
                    "color" -> RGBColor[0.4992, 0.5552, 0.8309304]|>, 
                    "RGBColorSwatchTemplate"]}], "]"}]}], "}"}]}], "}"}], ",", 
           RowBox[{"{", 
             RowBox[{
               RowBox[{"{", "}"}], ",", 
               RowBox[{"{", 
                 RowBox[{#, ",", #2}], "}"}]}], "}"}], ",", 
           RowBox[{"LegendMarkers", "\[Rule]", 
             RowBox[{"{", 
               RowBox[{
                 RowBox[{"{", "None", "}"}], ",", 
                 RowBox[{"{", 
                   RowBox[{"Automatic", ",", "Automatic"}], "}"}]}], "}"}]}], 
           ",", 
           RowBox[{"LabelStyle", "\[Rule]", 
             RowBox[{"{", 
               RowBox[{
                 RowBox[{"{", "}"}], ",", 
                 RowBox[{"{", "}"}]}], "}"}]}], ",", 
           RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& ), 
      Editable -> True], TraditionalForm], TraditionalForm]},
  "Legended",
  DisplayFunction->(GridBox[{{
      TagBox[
       ItemBox[
        PaneBox[
         TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
         BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
       "SkipImageSizeLevel"], 
      ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
    GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
    AutoDelete -> False, GridBoxItemSize -> Automatic, 
    BaselinePosition -> {1, 1}]& ),
  Editable->True,
  InterpretationFunction->(RowBox[{"Legended", "[", 
     RowBox[{#, ",", 
       RowBox[{"Placed", "[", 
         RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& )]], "Output",
 CellChangeTimes->{
  3.9338198659022903`*^9, 3.9339039018083897`*^9, {3.9339115933583927`*^9, 
   3.933911627395445*^9}},
 CellLabel->
  "Out[357]=",ExpressionUUID->"311ab5d9-6237-2044-9bf0-686863663b26"]
}, Open  ]],

Cell[BoxData[""], "Input",
 CellChangeTimes->{{3.933819534180292*^9, 3.9338195367190647`*^9}},
 CellLabel->"In[60]:=",ExpressionUUID->"de62a3e9-2ac0-a544-bbe2-863a7705b259"],

Cell["\<\
Opazimo lahko, da \[SHacek]tevilo obsojenih v Sloveniji in Latviji pada ne \
glede na starost.\
\>", "Text",
 CellChangeTimes->{{3.933819187313431*^9, 3.9338192252068977`*^9}, {
  3.9338195207527256`*^9, 
  3.9338195229869137`*^9}},ExpressionUUID->"d5a054a5-7e6c-154b-93a8-\
495dde8138a5"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"\[IndentingNewLine]", 
  RowBox[{
  "PrimerjavaPoStarosti", "[", "\"\<T\[UDoubleDot]rkiye\>\"", 
   "]"}]}]], "Input",
 CellChangeTimes->{{3.933811010061341*^9, 3.9338110145588446`*^9}, {
   3.9338111136855965`*^9, 3.933811148954874*^9}, {3.933811192999012*^9, 
   3.933811193966076*^9}, {3.933811291083729*^9, 3.9338113015025067`*^9}, {
   3.9338185877851353`*^9, 3.933818633194017*^9}, 3.9338186688807755`*^9},
 CellLabel->"In[61]:=",ExpressionUUID->"0f6e3e32-bfc2-3942-b6da-43ae9ade0375"],

Cell[BoxData[
 TemplateBox[{
   GraphicsBox[{{
      Opacity[0], 
      PointBox[{{-0.4159999999999999, 0.}, {20.799999999999997`, 
       0.}}]}, {{}, {{{}, {{}, {{
           Directive[
            EdgeForm[
             Directive[
              Thickness[Small], 
              Opacity[0.5599999999999999]]], 
            RGBColor[0.982864, 0.7431472, 0.3262672]], 
           TagBox[
            TooltipBox[
             TagBox[
              RectangleBox[{0., 0.}, {1., 129.31}, "RoundingRadius" -> 0], 
              StatusArea[#, 129.31]& , TagBoxNote -> "129.31"], 
             StyleBox["129.31`", {}, StripOnInput -> False]], Annotation[#, 
             Style[129.31, {}], "Tooltip"]& ]}, {
           Directive[
            EdgeForm[
             Directive[
              Thickness[Small], 
              Opacity[0.5599999999999999]]], 
            RGBColor[0.4992, 0.5552, 0.8309304]], 
           TagBox[
            TooltipBox[
             TagBox[
              RectangleBox[{0.9, 0.}, {1.9, 889.58}, "RoundingRadius" -> 0], 
              StatusArea[#, 889.58]& , TagBoxNote -> "889.58"], 
             StyleBox["889.58`", {}, StripOnInput -> False]], Annotation[#, 
             Style[889.58, {}], "Tooltip"]& ]}}}, {}, {}}, {{}, {{}, {{
           Directive[
            EdgeForm[
             Directive[
              Thickness[Small], 
              Opacity[0.5599999999999999]]], 
            RGBColor[0.982864, 0.7431472, 0.3262672]], 
           TagBox[
            TooltipBox[
             TagBox[
              RectangleBox[{2.1, 0.}, {3.1, 142.62}, "RoundingRadius" -> 0], 
              StatusArea[#, 142.62]& , TagBoxNote -> "142.62"], 
             StyleBox["142.62`", {}, StripOnInput -> False]], Annotation[#, 
             Style[142.62, {}], "Tooltip"]& ]}, {
           Directive[
            EdgeForm[
             Directive[
              Thickness[Small], 
              Opacity[0.5599999999999999]]], 
            RGBColor[0.4992, 0.5552, 0.8309304]], 
           TagBox[
            TooltipBox[
             TagBox[
              RectangleBox[{3., 0.}, {4., 853.7}, "RoundingRadius" -> 0], 
              StatusArea[#, 853.7]& , TagBoxNote -> "853.7"], 
             StyleBox["853.7`", {}, StripOnInput -> False]], Annotation[#, 
             Style[853.7, {}], "Tooltip"]& ]}}}, {}, {}}, {{}, {{}, {{
           Directive[
            EdgeForm[
             Directive[
              Thickness[Small], 
              Opacity[0.5599999999999999]]], 
            RGBColor[0.982864, 0.7431472, 0.3262672]], 
           TagBox[
            TooltipBox[
             TagBox[
              RectangleBox[{4.2, 0.}, {5.2, 140.25}, "RoundingRadius" -> 0], 
              StatusArea[#, 140.25]& , TagBoxNote -> "140.25"], 
             StyleBox["140.25`", {}, StripOnInput -> False]], Annotation[#, 
             Style[140.25, {}], "Tooltip"]& ]}, {
           Directive[
            EdgeForm[
             Directive[
              Thickness[Small], 
              Opacity[0.5599999999999999]]], 
            RGBColor[0.4992, 0.5552, 0.8309304]], 
           TagBox[
            TooltipBox[
             TagBox[
              
              RectangleBox[{5.1000000000000005`, 0.}, {6.1000000000000005`, 
               891.23}, "RoundingRadius" -> 0], StatusArea[#, 891.23]& , 
              TagBoxNote -> "891.23"], 
             StyleBox["891.23`", {}, StripOnInput -> False]], Annotation[#, 
             Style[891.23, {}], "Tooltip"]& ]}}}, {}, {}}, {{}, {{}, {{
           Directive[
            EdgeForm[
             Directive[
              Thickness[Small], 
              Opacity[0.5599999999999999]]], 
            RGBColor[0.982864, 0.7431472, 0.3262672]], 
           TagBox[
            TooltipBox[
             TagBox[
              
              RectangleBox[{6.300000000000001, 0.}, {7.300000000000001, 
               127.64}, "RoundingRadius" -> 0], StatusArea[#, 127.64]& , 
              TagBoxNote -> "127.64"], 
             StyleBox["127.64`", {}, StripOnInput -> False]], Annotation[#, 
             Style[127.64, {}], "Tooltip"]& ]}, {
           Directive[
            EdgeForm[
             Directive[
              Thickness[Small], 
              Opacity[0.5599999999999999]]], 
            RGBColor[0.4992, 0.5552, 0.8309304]], 
           TagBox[
            TooltipBox[
             TagBox[
              
              RectangleBox[{7.200000000000001, 0.}, {8.200000000000001, 
               769.64}, "RoundingRadius" -> 0], StatusArea[#, 769.64]& , 
              TagBoxNote -> "769.64"], 
             StyleBox["769.64`", {}, StripOnInput -> False]], Annotation[#, 
             Style[769.64, {}], "Tooltip"]& ]}}}, {}, {}}, {{}, {{}, {{
           Directive[
            EdgeForm[
             Directive[
              Thickness[Small], 
              Opacity[0.5599999999999999]]], 
            RGBColor[0.982864, 0.7431472, 0.3262672]], 
           TagBox[
            TooltipBox[
             TagBox[
              RectangleBox[{8.4, 0.}, {9.4, 104.41}, "RoundingRadius" -> 0], 
              StatusArea[#, 104.41]& , TagBoxNote -> "104.41"], 
             StyleBox["104.41`", {}, StripOnInput -> False]], Annotation[#, 
             Style[104.41, {}], "Tooltip"]& ]}, {
           Directive[
            EdgeForm[
             Directive[
              Thickness[Small], 
              Opacity[0.5599999999999999]]], 
            RGBColor[0.4992, 0.5552, 0.8309304]], 
           TagBox[
            TooltipBox[
             TagBox[
              RectangleBox[{9.3, 0.}, {10.3, 740.52}, "RoundingRadius" -> 0], 
              StatusArea[#, 740.52]& , TagBoxNote -> "740.52"], 
             StyleBox["740.52`", {}, StripOnInput -> False]], Annotation[#, 
             Style[740.52, {}], "Tooltip"]& ]}}}, {}, {}}, {{}, {{}, {{
           Directive[
            EdgeForm[
             Directive[
              Thickness[Small], 
              Opacity[0.5599999999999999]]], 
            RGBColor[0.982864, 0.7431472, 0.3262672]], 
           TagBox[
            TooltipBox[
             TagBox[
              RectangleBox[{10.5, 0.}, {11.5, 123.23}, "RoundingRadius" -> 0],
               StatusArea[#, 123.23]& , TagBoxNote -> "123.23"], 
             StyleBox["123.23`", {}, StripOnInput -> False]], Annotation[#, 
             Style[123.23, {}], "Tooltip"]& ]}, {
           Directive[
            EdgeForm[
             Directive[
              Thickness[Small], 
              Opacity[0.5599999999999999]]], 
            RGBColor[0.4992, 0.5552, 0.8309304]], 
           TagBox[
            TooltipBox[
             TagBox[
              RectangleBox[{11.4, 0.}, {12.4, 910.05}, "RoundingRadius" -> 0],
               StatusArea[#, 910.05]& , TagBoxNote -> "910.05"], 
             StyleBox["910.05`", {}, StripOnInput -> False]], Annotation[#, 
             Style[910.05, {}], "Tooltip"]& ]}}}, {}, {}}, {{}, {{}, {{
           Directive[
            EdgeForm[
             Directive[
              Thickness[Small], 
              Opacity[0.5599999999999999]]], 
            RGBColor[0.982864, 0.7431472, 0.3262672]], 
           TagBox[
            TooltipBox[
             TagBox[
              RectangleBox[{12.6, 0.}, {13.6, 125.41}, "RoundingRadius" -> 0],
               StatusArea[#, 125.41]& , TagBoxNote -> "125.41"], 
             StyleBox["125.41`", {}, StripOnInput -> False]], Annotation[#, 
             Style[125.41, {}], "Tooltip"]& ]}, {
           Directive[
            EdgeForm[
             Directive[
              Thickness[Small], 
              Opacity[0.5599999999999999]]], 
            RGBColor[0.4992, 0.5552, 0.8309304]], 
           TagBox[
            TooltipBox[
             TagBox[
              RectangleBox[{13.5, 0.}, {14.5, 953.98}, "RoundingRadius" -> 0],
               StatusArea[#, 953.98]& , TagBoxNote -> "953.98"], 
             StyleBox["953.98`", {}, StripOnInput -> False]], Annotation[#, 
             Style[953.98, {}], "Tooltip"]& ]}}}, {}, {}}, {{}, {{}, {{
           Directive[
            EdgeForm[
             Directive[
              Thickness[Small], 
              Opacity[0.5599999999999999]]], 
            RGBColor[0.982864, 0.7431472, 0.3262672]], 
           TagBox[
            TooltipBox[
             TagBox[
              RectangleBox[{14.7, 0.}, {15.7, 95.7}, "RoundingRadius" -> 0], 
              StatusArea[#, 95.7]& , TagBoxNote -> "95.7"], 
             StyleBox["95.7`", {}, StripOnInput -> False]], Annotation[#, 
             Style[95.7, {}], "Tooltip"]& ]}, {
           Directive[
            EdgeForm[
             Directive[
              Thickness[Small], 
              Opacity[0.5599999999999999]]], 
            RGBColor[0.4992, 0.5552, 0.8309304]], 
           TagBox[
            TooltipBox[
             TagBox[
              RectangleBox[{15.6, 0.}, {16.6, 780.43}, "RoundingRadius" -> 0],
               StatusArea[#, 780.43]& , TagBoxNote -> "780.43"], 
             StyleBox["780.43`", {}, StripOnInput -> False]], Annotation[#, 
             Style[780.43, {}], "Tooltip"]& ]}}}, {}, {}}, {{}, {{}, {{
           Directive[
            EdgeForm[
             Directive[
              Thickness[Small], 
              Opacity[0.5599999999999999]]], 
            RGBColor[0.982864, 0.7431472, 0.3262672]], 
           TagBox[
            TooltipBox[
             TagBox[
              RectangleBox[{16.8, 0.}, {17.8, 128.48}, "RoundingRadius" -> 0],
               StatusArea[#, 128.48]& , TagBoxNote -> "128.48"], 
             StyleBox["128.48`", {}, StripOnInput -> False]], Annotation[#, 
             Style[128.48, {}], "Tooltip"]& ]}, {
           Directive[
            EdgeForm[
             Directive[
              Thickness[Small], 
              Opacity[0.5599999999999999]]], 
            RGBColor[0.4992, 0.5552, 0.8309304]], 
           TagBox[
            TooltipBox[
             TagBox[
              
              RectangleBox[{17.7, 0.}, {18.7, 1089.51}, "RoundingRadius" -> 
               0], StatusArea[#, 1089.51]& , TagBoxNote -> "1089.51"], 
             StyleBox["1089.51`", {}, StripOnInput -> False]], Annotation[#, 
             Style[1089.51, {}], "Tooltip"]& ]}}}, {}, {}}, {{}, {{}, {{
           Directive[
            EdgeForm[
             Directive[
              Thickness[Small], 
              Opacity[0.5599999999999999]]], 
            RGBColor[0.982864, 0.7431472, 0.3262672]], 
           TagBox[
            TooltipBox[
             TagBox[
              RectangleBox[{18.9, 0.}, {19.9, 142.1}, "RoundingRadius" -> 0], 
              StatusArea[#, 142.1]& , TagBoxNote -> "142.1"], 
             StyleBox["142.1`", {}, StripOnInput -> False]], Annotation[#, 
             Style[142.1, {}], "Tooltip"]& ]}, {
           Directive[
            EdgeForm[
             Directive[
              Thickness[Small], 
              Opacity[0.5599999999999999]]], 
            RGBColor[0.4992, 0.5552, 0.8309304]], 
           TagBox[
            TooltipBox[
             TagBox[
              
              RectangleBox[{19.799999999999997`, 0.}, {20.799999999999997`, 
               1049.52}, "RoundingRadius" -> 0], StatusArea[#, 1049.52]& , 
              TagBoxNote -> "1049.52"], 
             StyleBox["1049.52`", {}, StripOnInput -> False]], Annotation[#, 
             Style[1049.52, {}], 
             "Tooltip"]& ]}}}, {}, {}}}, {}, {}}, {}, {}, {}, {}, {
      StyleBox[{Antialiasing -> False, {
         Directive[
          Thickness[Tiny]], {
          LineBox[{{-0.4159999999999999, 0.}, {21.224319999999995`, 0.}}]}, 
         StyleBox[{}, {"GraphicsLabel"}, StripOnInput -> False]}, 
        StyleBox[{{
           Directive[
            Thickness[Tiny]], 
           LineBox[{{0., 0.}, 
             Offset[{-1.102182119232618*^-15, -6.}, {0., 0.}]}], 
           LineBox[{{20.799999999999994`, 0.}, 
             
             Offset[{-1.102182119232618*^-15, -6.}, {20.799999999999994`, 
              0.}]}], {{}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, \
{}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {
             LineBox[{{1.8999999999999997`, 0.}, 
               
               Offset[{-1.102182119232618*^-15, -6.}, {1.8999999999999997`, 
                0.}]}], 
             LineBox[{{2.0999999999999996`, 0.}, 
               
               Offset[{-1.102182119232618*^-15, -6.}, {2.0999999999999996`, 
                0.}]}], 
             LineBox[{{3.9999999999999996`, 0.}, 
               
               Offset[{-1.102182119232618*^-15, -6.}, {3.9999999999999996`, 
                0.}]}], 
             LineBox[{{4.199999999999999, 0.}, 
               
               Offset[{-1.102182119232618*^-15, -6.}, {4.199999999999999, 
                0.}]}], 
             LineBox[{{6.1, 0.}, 
               Offset[{-1.102182119232618*^-15, -6.}, {6.1, 0.}]}], 
             LineBox[{{6.3, 0.}, 
               Offset[{-1.102182119232618*^-15, -6.}, {6.3, 0.}]}], 
             LineBox[{{8.2, 0.}, 
               Offset[{-1.102182119232618*^-15, -6.}, {8.2, 0.}]}], 
             LineBox[{{8.399999999999999, 0.}, 
               
               Offset[{-1.102182119232618*^-15, -6.}, {8.399999999999999, 
                0.}]}], 
             LineBox[{{10.299999999999999`, 0.}, 
               
               Offset[{-1.102182119232618*^-15, -6.}, {10.299999999999999`, 
                0.}]}], 
             LineBox[{{10.499999999999998`, 0.}, 
               
               Offset[{-1.102182119232618*^-15, -6.}, {10.499999999999998`, 
                0.}]}], 
             LineBox[{{12.399999999999999`, 0.}, 
               
               Offset[{-1.102182119232618*^-15, -6.}, {12.399999999999999`, 
                0.}]}], 
             LineBox[{{12.599999999999998`, 0.}, 
               
               Offset[{-1.102182119232618*^-15, -6.}, {12.599999999999998`, 
                0.}]}], 
             LineBox[{{14.499999999999998`, 0.}, 
               
               Offset[{-1.102182119232618*^-15, -6.}, {14.499999999999998`, 
                0.}]}], 
             LineBox[{{14.699999999999998`, 0.}, 
               
               Offset[{-1.102182119232618*^-15, -6.}, {14.699999999999998`, 
                0.}]}], 
             LineBox[{{16.599999999999998`, 0.}, 
               
               Offset[{-1.102182119232618*^-15, -6.}, {16.599999999999998`, 
                0.}]}], 
             LineBox[{{16.799999999999997`, 0.}, 
               
               Offset[{-1.102182119232618*^-15, -6.}, {16.799999999999997`, 
                0.}]}], 
             LineBox[{{18.699999999999996`, 0.}, 
               
               Offset[{-1.102182119232618*^-15, -6.}, {18.699999999999996`, 
                0.}]}], 
             LineBox[{{18.899999999999995`, 0.}, 
               
               Offset[{-1.102182119232618*^-15, -6.}, {18.899999999999995`, 
                0.}]}]}}}, 
          StyleBox[{
            Directive[
             Thickness[Tiny]], 
            Directive[
             Thickness[Tiny]], 
            StyleBox[{
              InsetBox[
               FormBox["\"2013\"", TraditionalForm], 
               Offset[{0, -2}, {0.9499999999999998, 0.}], 
               NCache[
                ImageScaled[{
                  Rational[1, 2], 1}], 
                ImageScaled[{0.5, 1}]], Automatic, {1, 0}], 
              InsetBox[
               FormBox["\"2014\"", TraditionalForm], 
               Offset[{0, -2}, {3.0499999999999994`, 0.}], 
               NCache[
                ImageScaled[{
                  Rational[1, 2], 1}], 
                ImageScaled[{0.5, 1}]], Automatic, {1, 0}], 
              InsetBox[
               FormBox["\"2015\"", TraditionalForm], 
               Offset[{0, -2}, {5.1499999999999995`, 0.}], 
               NCache[
                ImageScaled[{
                  Rational[1, 2], 1}], 
                ImageScaled[{0.5, 1}]], Automatic, {1, 0}], 
              InsetBox[
               FormBox["\"2016\"", TraditionalForm], 
               Offset[{0, -2}, {7.25, 0.}], 
               NCache[
                ImageScaled[{
                  Rational[1, 2], 1}], 
                ImageScaled[{0.5, 1}]], Automatic, {1, 0}], 
              InsetBox[
               FormBox["\"2017\"", TraditionalForm], 
               Offset[{0, -2}, {9.35, 0.}], 
               NCache[
                ImageScaled[{
                  Rational[1, 2], 1}], 
                ImageScaled[{0.5, 1}]], Automatic, {1, 0}], 
              InsetBox[
               FormBox["\"2018\"", TraditionalForm], 
               Offset[{0, -2}, {11.449999999999998`, 0.}], 
               NCache[
                ImageScaled[{
                  Rational[1, 2], 1}], 
                ImageScaled[{0.5, 1}]], Automatic, {1, 0}], 
              InsetBox[
               FormBox["\"2019\"", TraditionalForm], 
               Offset[{0, -2}, {13.549999999999999`, 0.}], 
               NCache[
                ImageScaled[{
                  Rational[1, 2], 1}], 
                ImageScaled[{0.5, 1}]], Automatic, {1, 0}], 
              InsetBox[
               FormBox["\"2020\"", TraditionalForm], 
               Offset[{0, -2}, {15.649999999999999`, 0.}], 
               NCache[
                ImageScaled[{
                  Rational[1, 2], 1}], 
                ImageScaled[{0.5, 1}]], Automatic, {1, 0}], 
              InsetBox[
               FormBox["\"2021\"", TraditionalForm], 
               Offset[{0, -2}, {17.749999999999996`, 0.}], 
               NCache[
                ImageScaled[{
                  Rational[1, 2], 1}], 
                ImageScaled[{0.5, 1}]], Automatic, {1, 0}], 
              InsetBox[
               FormBox["\"2022\"", TraditionalForm], 
               Offset[{0, -2}, {19.849999999999994`, 0.}], 
               NCache[
                ImageScaled[{
                  Rational[1, 2], 1}], 
                ImageScaled[{0.5, 1}]], Automatic, {1, 0}]}, {{}}, 
             StripOnInput -> False]}, {"GraphicsLabel"}, StripOnInput -> 
           False]}, {"GraphicsTicks"}, StripOnInput -> False]}, {
       "GraphicsAxes"}, StripOnInput -> False]}}, {
    DisplayFunction -> Identity, AspectRatio -> 
     NCache[GoldenRatio^(-1), 0.6180339887498948], Axes -> {False, True}, 
     AxesLabel -> {None, None}, AxesOrigin -> {-0.4159999999999999, 0.}, 
     CoordinatesToolOptions -> {"DisplayFunction" -> ({
         Identity[
          Part[#, 1]], 
         Identity[
          Part[#, 2]]}& ), "CopiedValueFunction" -> ({
         Identity[
          Part[#, 1]], 
         Identity[
          Part[#, 2]]}& )}, FrameLabel -> {{None, None}, {None, None}}, 
     FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
     GridLines -> {None, None}, GridLinesStyle -> Directive[
       GrayLevel[0.5, 0.4]], ImageSize -> Large, PlotLabel -> 
     FormBox["\"Primerjava polnoletnih in mladoletni na 100 000 \
polnoletnih/mladolenih\"", TraditionalForm], 
     PlotRange -> {{All, All}, {All, All}}, PlotRangePadding -> {{
        Scaled[0.02], 
        Scaled[0.02]}, {
        Scaled[0.02], 
        Scaled[0.05]}}, Ticks -> {None, Automatic}}], 
   FormBox[
    FormBox[
     TemplateBox[{"\"mladoletni\"", "\"polnoletni\""}, "SwatchLegend", 
      DisplayFunction -> (FormBox[
        StyleBox[
         StyleBox[
          PaneBox[
           TagBox[
            GridBox[{{
               TagBox[
                GridBox[{{
                   GraphicsBox[{
                    Directive[
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    EdgeForm[
                    Directive[
                    GrayLevel[0], 
                    Thickness[Small], 
                    Opacity[0.5599999999999999]]], 
                    RGBColor[0.982864, 0.7431472, 0.3262672]], 
                    RectangleBox[{0, 0}, {10, 10}, "RoundingRadius" -> 0]}, 
                    AspectRatio -> Full, ImageSize -> {10, 10}, 
                    PlotRangePadding -> None, ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}, {
                   GraphicsBox[{
                    Directive[
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    EdgeForm[
                    Directive[
                    GrayLevel[0], 
                    Thickness[Small], 
                    Opacity[0.5599999999999999]]], 
                    RGBColor[0.4992, 0.5552, 0.8309304]], 
                    RectangleBox[{0, 0}, {10, 10}, "RoundingRadius" -> 0]}, 
                    AspectRatio -> Full, ImageSize -> {10, 10}, 
                    PlotRangePadding -> None, ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #2}}, 
                 GridBoxAlignment -> {
                  "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                 AutoDelete -> False, 
                 GridBoxDividers -> {
                  "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                 GridBoxItemSize -> {"Columns" -> {{All}}, "Rows" -> {{All}}},
                  GridBoxSpacings -> {
                  "Columns" -> {{0.3}}, "Rows" -> {{0.5}}}], "Grid"]}}, 
             GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
             AutoDelete -> False, 
             GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
            "Grid"], Alignment -> Left, AppearanceElements -> None, 
           ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
           "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
         FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
         False], TraditionalForm]& ), 
      InterpretationFunction :> (RowBox[{"SwatchLegend", "[", 
         RowBox[{
           RowBox[{"{", 
             RowBox[{
               RowBox[{"{", 
                 RowBox[{
                   RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"EdgeForm", "[", 
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Thickness", "[", "Small", "]"}], ",", 
                    RowBox[{"Opacity", "[", "0.5599999999999999`", "]"}]}], 
                    "]"}], "]"}], ",", 
                    
                    TemplateBox[<|"color" -> GrayLevel[1]|>, 
                    "GrayLevelColorSwatchTemplate"]}], "]"}], ",", 
                   RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"EdgeForm", "[", 
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Thickness", "[", "Small", "]"}], ",", 
                    RowBox[{"Opacity", "[", "0.5599999999999999`", "]"}]}], 
                    "]"}], "]"}], ",", 
                    
                    TemplateBox[<|"color" -> GrayLevel[1]|>, 
                    "GrayLevelColorSwatchTemplate"]}], "]"}], ",", 
                   RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"EdgeForm", "[", 
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Thickness", "[", "Small", "]"}], ",", 
                    RowBox[{"Opacity", "[", "0.5599999999999999`", "]"}]}], 
                    "]"}], "]"}], ",", 
                    
                    TemplateBox[<|"color" -> GrayLevel[1]|>, 
                    "GrayLevelColorSwatchTemplate"]}], "]"}], ",", 
                   RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"EdgeForm", "[", 
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Thickness", "[", "Small", "]"}], ",", 
                    RowBox[{"Opacity", "[", "0.5599999999999999`", "]"}]}], 
                    "]"}], "]"}], ",", 
                    
                    TemplateBox[<|"color" -> GrayLevel[1]|>, 
                    "GrayLevelColorSwatchTemplate"]}], "]"}], ",", 
                   RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"EdgeForm", "[", 
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Thickness", "[", "Small", "]"}], ",", 
                    RowBox[{"Opacity", "[", "0.5599999999999999`", "]"}]}], 
                    "]"}], "]"}], ",", 
                    
                    TemplateBox[<|"color" -> GrayLevel[1]|>, 
                    "GrayLevelColorSwatchTemplate"]}], "]"}], ",", 
                   RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"EdgeForm", "[", 
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Thickness", "[", "Small", "]"}], ",", 
                    RowBox[{"Opacity", "[", "0.5599999999999999`", "]"}]}], 
                    "]"}], "]"}], ",", 
                    
                    TemplateBox[<|"color" -> GrayLevel[1]|>, 
                    "GrayLevelColorSwatchTemplate"]}], "]"}], ",", 
                   RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"EdgeForm", "[", 
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Thickness", "[", "Small", "]"}], ",", 
                    RowBox[{"Opacity", "[", "0.5599999999999999`", "]"}]}], 
                    "]"}], "]"}], ",", 
                    
                    TemplateBox[<|"color" -> GrayLevel[1]|>, 
                    "GrayLevelColorSwatchTemplate"]}], "]"}], ",", 
                   RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"EdgeForm", "[", 
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Thickness", "[", "Small", "]"}], ",", 
                    RowBox[{"Opacity", "[", "0.5599999999999999`", "]"}]}], 
                    "]"}], "]"}], ",", 
                    
                    TemplateBox[<|"color" -> GrayLevel[1]|>, 
                    "GrayLevelColorSwatchTemplate"]}], "]"}], ",", 
                   RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"EdgeForm", "[", 
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Thickness", "[", "Small", "]"}], ",", 
                    RowBox[{"Opacity", "[", "0.5599999999999999`", "]"}]}], 
                    "]"}], "]"}], ",", 
                    
                    TemplateBox[<|"color" -> GrayLevel[1]|>, 
                    "GrayLevelColorSwatchTemplate"]}], "]"}], ",", 
                   RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"EdgeForm", "[", 
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Thickness", "[", "Small", "]"}], ",", 
                    RowBox[{"Opacity", "[", "0.5599999999999999`", "]"}]}], 
                    "]"}], "]"}], ",", 
                    
                    TemplateBox[<|"color" -> GrayLevel[1]|>, 
                    "GrayLevelColorSwatchTemplate"]}], "]"}]}], "}"}], ",", 
               RowBox[{"{", 
                 RowBox[{
                   RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"EdgeForm", "[", 
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Thickness", "[", "Small", "]"}], ",", 
                    RowBox[{"Opacity", "[", "0.5599999999999999`", "]"}]}], 
                    "]"}], "]"}], ",", 
                    
                    TemplateBox[<|
                    "color" -> RGBColor[0.982864, 0.7431472, 0.3262672]|>, 
                    "RGBColorSwatchTemplate"]}], "]"}], ",", 
                   RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"EdgeForm", "[", 
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Thickness", "[", "Small", "]"}], ",", 
                    RowBox[{"Opacity", "[", "0.5599999999999999`", "]"}]}], 
                    "]"}], "]"}], ",", 
                    
                    TemplateBox[<|
                    "color" -> RGBColor[0.4992, 0.5552, 0.8309304]|>, 
                    "RGBColorSwatchTemplate"]}], "]"}]}], "}"}]}], "}"}], ",", 
           RowBox[{"{", 
             RowBox[{
               RowBox[{"{", "}"}], ",", 
               RowBox[{"{", 
                 RowBox[{#, ",", #2}], "}"}]}], "}"}], ",", 
           RowBox[{"LegendMarkers", "\[Rule]", 
             RowBox[{"{", 
               RowBox[{
                 RowBox[{"{", "None", "}"}], ",", 
                 RowBox[{"{", 
                   RowBox[{"Automatic", ",", "Automatic"}], "}"}]}], "}"}]}], 
           ",", 
           RowBox[{"LabelStyle", "\[Rule]", 
             RowBox[{"{", 
               RowBox[{
                 RowBox[{"{", "}"}], ",", 
                 RowBox[{"{", "}"}]}], "}"}]}], ",", 
           RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& ), 
      Editable -> True], TraditionalForm], TraditionalForm]},
  "Legended",
  DisplayFunction->(GridBox[{{
      TagBox[
       ItemBox[
        PaneBox[
         TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
         BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
       "SkipImageSizeLevel"], 
      ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
    GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
    AutoDelete -> False, GridBoxItemSize -> Automatic, 
    BaselinePosition -> {1, 1}]& ),
  Editable->True,
  InterpretationFunction->(RowBox[{"Legended", "[", 
     RowBox[{#, ",", 
       RowBox[{"Placed", "[", 
         RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& )]], "Output",
 CellChangeTimes->{
  3.933811015530348*^9, 3.9338110490645466`*^9, {3.93381111176396*^9, 
   3.933811149407643*^9}, 3.9338111946075535`*^9, 3.9338112438739815`*^9, {
   3.933811276714199*^9, 3.933811302738613*^9}, 3.9338118170289803`*^9, {
   3.933818589266666*^9, 3.93381863369103*^9}, 3.9338186699634433`*^9, 
   3.933819866235901*^9, 3.9339039020074215`*^9},
 CellLabel->"Out[61]=",ExpressionUUID->"ea08d2ad-3531-bb4d-9962-9596335476ff"]
}, Open  ]],

Cell["\<\
Opazimo lahko, da se \[SHacek]tevilo mladoletnih obsojenih ne spreminja, \
medtem ko se \[SHacek]tevilo polnoletnih nihajo\[CHacek]e.\
\>", "Text",
 CellChangeTimes->{{3.933819305295994*^9, 3.933819338577219*^9}, 
   3.933819449541759*^9, {3.933912279652933*^9, 
   3.9339122875864487`*^9}},ExpressionUUID->"458c1770-00a4-2a46-8471-\
0f98aa01eefb"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"\[IndentingNewLine]", 
  RowBox[{"PrimerjavaPoStarosti", "[", "\"\<Sweden\>\"", "]"}]}]], "Input",
 CellChangeTimes->{{3.933818679141559*^9, 3.9338186826586432`*^9}, {
  3.933819092855121*^9, 3.933819094998659*^9}},
 CellLabel->"In[62]:=",ExpressionUUID->"812ef3af-e5a2-134b-a20e-d5c87d83f55e"],

Cell[BoxData[
 TemplateBox[{
   GraphicsBox[{{
      Opacity[0], 
      PointBox[{{-0.4159999999999999, 0.}, {20.799999999999997`, 
       0.}}]}, {{}, {{{}, {{}, {{
           Directive[
            EdgeForm[
             Directive[
              Thickness[Small], 
              Opacity[0.5599999999999999]]], 
            RGBColor[0.982864, 0.7431472, 0.3262672]], 
           TagBox[
            TooltipBox[
             TagBox[
              RectangleBox[{0., 0.}, {1., 195.42}, "RoundingRadius" -> 0], 
              StatusArea[#, 195.42]& , TagBoxNote -> "195.42"], 
             StyleBox["195.42`", {}, StripOnInput -> False]], Annotation[#, 
             Style[195.42, {}], "Tooltip"]& ]}, {
           Directive[
            EdgeForm[
             Directive[
              Thickness[Small], 
              Opacity[0.5599999999999999]]], 
            RGBColor[0.4992, 0.5552, 0.8309304]], 
           TagBox[
            TooltipBox[
             TagBox[
              RectangleBox[{0.9, 0.}, {1.9, 794.75}, "RoundingRadius" -> 0], 
              StatusArea[#, 794.75]& , TagBoxNote -> "794.75"], 
             StyleBox["794.75`", {}, StripOnInput -> False]], Annotation[#, 
             Style[794.75, {}], "Tooltip"]& ]}}}, {}, {}}, {{}, {{}, {{
           Directive[
            EdgeForm[
             Directive[
              Thickness[Small], 
              Opacity[0.5599999999999999]]], 
            RGBColor[0.982864, 0.7431472, 0.3262672]], 
           TagBox[
            TooltipBox[
             TagBox[
              RectangleBox[{2.1, 0.}, {3.1, 193.4}, "RoundingRadius" -> 0], 
              StatusArea[#, 193.4]& , TagBoxNote -> "193.4"], 
             StyleBox["193.4`", {}, StripOnInput -> False]], Annotation[#, 
             Style[193.4, {}], "Tooltip"]& ]}, {
           Directive[
            EdgeForm[
             Directive[
              Thickness[Small], 
              Opacity[0.5599999999999999]]], 
            RGBColor[0.4992, 0.5552, 0.8309304]], 
           TagBox[
            TooltipBox[
             TagBox[
              RectangleBox[{3., 0.}, {4., 739.69}, "RoundingRadius" -> 0], 
              StatusArea[#, 739.69]& , TagBoxNote -> "739.69"], 
             StyleBox["739.69`", {}, StripOnInput -> False]], Annotation[#, 
             Style[739.69, {}], "Tooltip"]& ]}}}, {}, {}}, {{}, {{}, {{
           Directive[
            EdgeForm[
             Directive[
              Thickness[Small], 
              Opacity[0.5599999999999999]]], 
            RGBColor[0.982864, 0.7431472, 0.3262672]], 
           TagBox[
            TooltipBox[
             TagBox[
              RectangleBox[{4.2, 0.}, {5.2, 190.96}, "RoundingRadius" -> 0], 
              StatusArea[#, 190.96]& , TagBoxNote -> "190.96"], 
             StyleBox["190.96`", {}, StripOnInput -> False]], Annotation[#, 
             Style[190.96, {}], "Tooltip"]& ]}, {
           Directive[
            EdgeForm[
             Directive[
              Thickness[Small], 
              Opacity[0.5599999999999999]]], 
            RGBColor[0.4992, 0.5552, 0.8309304]], 
           TagBox[
            TooltipBox[
             TagBox[
              
              RectangleBox[{5.1000000000000005`, 0.}, {6.1000000000000005`, 
               715.88}, "RoundingRadius" -> 0], StatusArea[#, 715.88]& , 
              TagBoxNote -> "715.88"], 
             StyleBox["715.88`", {}, StripOnInput -> False]], Annotation[#, 
             Style[715.88, {}], "Tooltip"]& ]}}}, {}, {}}, {{}, {{}, {{
           Directive[
            EdgeForm[
             Directive[
              Thickness[Small], 
              Opacity[0.5599999999999999]]], 
            RGBColor[0.982864, 0.7431472, 0.3262672]], 
           TagBox[
            TooltipBox[
             TagBox[
              
              RectangleBox[{6.300000000000001, 0.}, {7.300000000000001, 
               189.77}, "RoundingRadius" -> 0], StatusArea[#, 189.77]& , 
              TagBoxNote -> "189.77"], 
             StyleBox["189.77`", {}, StripOnInput -> False]], Annotation[#, 
             Style[189.77, {}], "Tooltip"]& ]}, {
           Directive[
            EdgeForm[
             Directive[
              Thickness[Small], 
              Opacity[0.5599999999999999]]], 
            RGBColor[0.4992, 0.5552, 0.8309304]], 
           TagBox[
            TooltipBox[
             TagBox[
              
              RectangleBox[{7.200000000000001, 0.}, {8.200000000000001, 
               675.05}, "RoundingRadius" -> 0], StatusArea[#, 675.05]& , 
              TagBoxNote -> "675.05"], 
             StyleBox["675.05`", {}, StripOnInput -> False]], Annotation[#, 
             Style[675.05, {}], "Tooltip"]& ]}}}, {}, {}}, {{}, {{}, {{
           Directive[
            EdgeForm[
             Directive[
              Thickness[Small], 
              Opacity[0.5599999999999999]]], 
            RGBColor[0.982864, 0.7431472, 0.3262672]], 
           TagBox[
            TooltipBox[
             TagBox[
              RectangleBox[{8.4, 0.}, {9.4, 192.45}, "RoundingRadius" -> 0], 
              StatusArea[#, 192.45]& , TagBoxNote -> "192.45"], 
             StyleBox["192.45`", {}, StripOnInput -> False]], Annotation[#, 
             Style[192.45, {}], "Tooltip"]& ]}, {
           Directive[
            EdgeForm[
             Directive[
              Thickness[Small], 
              Opacity[0.5599999999999999]]], 
            RGBColor[0.4992, 0.5552, 0.8309304]], 
           TagBox[
            TooltipBox[
             TagBox[
              RectangleBox[{9.3, 0.}, {10.3, 684.07}, "RoundingRadius" -> 0], 
              StatusArea[#, 684.07]& , TagBoxNote -> "684.07"], 
             StyleBox["684.07`", {}, StripOnInput -> False]], Annotation[#, 
             Style[684.07, {}], "Tooltip"]& ]}}}, {}, {}}, {{}, {{}, {{
           Directive[
            EdgeForm[
             Directive[
              Thickness[Small], 
              Opacity[0.5599999999999999]]], 
            RGBColor[0.982864, 0.7431472, 0.3262672]], 
           TagBox[
            TooltipBox[
             TagBox[
              RectangleBox[{10.5, 0.}, {11.5, 185.52}, "RoundingRadius" -> 0],
               StatusArea[#, 185.52]& , TagBoxNote -> "185.52"], 
             StyleBox["185.52`", {}, StripOnInput -> False]], Annotation[#, 
             Style[185.52, {}], "Tooltip"]& ]}, {
           Directive[
            EdgeForm[
             Directive[
              Thickness[Small], 
              Opacity[0.5599999999999999]]], 
            RGBColor[0.4992, 0.5552, 0.8309304]], 
           TagBox[
            TooltipBox[
             TagBox[
              RectangleBox[{11.4, 0.}, {12.4, 707.98}, "RoundingRadius" -> 0],
               StatusArea[#, 707.98]& , TagBoxNote -> "707.98"], 
             StyleBox["707.98`", {}, StripOnInput -> False]], Annotation[#, 
             Style[707.98, {}], "Tooltip"]& ]}}}, {}, {}}, {{}, {{}, {{
           Directive[
            EdgeForm[
             Directive[
              Thickness[Small], 
              Opacity[0.5599999999999999]]], 
            RGBColor[0.982864, 0.7431472, 0.3262672]], 
           TagBox[
            TooltipBox[
             TagBox[
              RectangleBox[{12.6, 0.}, {13.6, 185.81}, "RoundingRadius" -> 0],
               StatusArea[#, 185.81]& , TagBoxNote -> "185.81"], 
             StyleBox["185.81`", {}, StripOnInput -> False]], Annotation[#, 
             Style[185.81, {}], "Tooltip"]& ]}, {
           Directive[
            EdgeForm[
             Directive[
              Thickness[Small], 
              Opacity[0.5599999999999999]]], 
            RGBColor[0.4992, 0.5552, 0.8309304]], 
           TagBox[
            TooltipBox[
             TagBox[
              RectangleBox[{13.5, 0.}, {14.5, 726.99}, "RoundingRadius" -> 0],
               StatusArea[#, 726.99]& , TagBoxNote -> "726.99"], 
             StyleBox["726.99`", {}, StripOnInput -> False]], Annotation[#, 
             Style[726.99, {}], "Tooltip"]& ]}}}, {}, {}}, {{}, {{}, {{
           Directive[
            EdgeForm[
             Directive[
              Thickness[Small], 
              Opacity[0.5599999999999999]]], 
            RGBColor[0.982864, 0.7431472, 0.3262672]], 
           TagBox[
            TooltipBox[
             TagBox[
              RectangleBox[{14.7, 0.}, {15.7, 201.51}, "RoundingRadius" -> 0],
               StatusArea[#, 201.51]& , TagBoxNote -> "201.51"], 
             StyleBox["201.51`", {}, StripOnInput -> False]], Annotation[#, 
             Style[201.51, {}], "Tooltip"]& ]}, {
           Directive[
            EdgeForm[
             Directive[
              Thickness[Small], 
              Opacity[0.5599999999999999]]], 
            RGBColor[0.4992, 0.5552, 0.8309304]], 
           TagBox[
            TooltipBox[
             TagBox[
              RectangleBox[{15.6, 0.}, {16.6, 792.95}, "RoundingRadius" -> 0],
               StatusArea[#, 792.95]& , TagBoxNote -> "792.95"], 
             StyleBox["792.95`", {}, StripOnInput -> False]], Annotation[#, 
             Style[792.95, {}], "Tooltip"]& ]}}}, {}, {}}, {{}, {{}, {{
           Directive[
            EdgeForm[
             Directive[
              Thickness[Small], 
              Opacity[0.5599999999999999]]], 
            RGBColor[0.982864, 0.7431472, 0.3262672]], 
           TagBox[
            TooltipBox[
             TagBox[
              RectangleBox[{16.8, 0.}, {17.8, 197.45}, "RoundingRadius" -> 0],
               StatusArea[#, 197.45]& , TagBoxNote -> "197.45"], 
             StyleBox["197.45`", {}, StripOnInput -> False]], Annotation[#, 
             Style[197.45, {}], "Tooltip"]& ]}, {
           Directive[
            EdgeForm[
             Directive[
              Thickness[Small], 
              Opacity[0.5599999999999999]]], 
            RGBColor[0.4992, 0.5552, 0.8309304]], 
           TagBox[
            TooltipBox[
             TagBox[
              RectangleBox[{17.7, 0.}, {18.7, 858.12}, "RoundingRadius" -> 0],
               StatusArea[#, 858.12]& , TagBoxNote -> "858.12"], 
             StyleBox["858.12`", {}, StripOnInput -> False]], Annotation[#, 
             Style[858.12, {}], "Tooltip"]& ]}}}, {}, {}}, {{}, {{}, {{
           Directive[
            EdgeForm[
             Directive[
              Thickness[Small], 
              Opacity[0.5599999999999999]]], 
            RGBColor[0.982864, 0.7431472, 0.3262672]], 
           TagBox[
            TooltipBox[
             TagBox[
              RectangleBox[{18.9, 0.}, {19.9, 192.93}, "RoundingRadius" -> 0],
               StatusArea[#, 192.93]& , TagBoxNote -> "192.93"], 
             StyleBox["192.93`", {}, StripOnInput -> False]], Annotation[#, 
             Style[192.93, {}], "Tooltip"]& ]}, {
           Directive[
            EdgeForm[
             Directive[
              Thickness[Small], 
              Opacity[0.5599999999999999]]], 
            RGBColor[0.4992, 0.5552, 0.8309304]], 
           TagBox[
            TooltipBox[
             TagBox[
              
              RectangleBox[{19.799999999999997`, 0.}, {20.799999999999997`, 
               877.36}, "RoundingRadius" -> 0], StatusArea[#, 877.36]& , 
              TagBoxNote -> "877.36"], 
             StyleBox["877.36`", {}, StripOnInput -> False]], Annotation[#, 
             Style[877.36, {}], 
             "Tooltip"]& ]}}}, {}, {}}}, {}, {}}, {}, {}, {}, {}, {
      StyleBox[{Antialiasing -> False, {
         Directive[
          Thickness[Tiny]], {
          LineBox[{{-0.4159999999999999, 0.}, {21.224319999999995`, 0.}}]}, 
         StyleBox[{}, {"GraphicsLabel"}, StripOnInput -> False]}, 
        StyleBox[{{
           Directive[
            Thickness[Tiny]], 
           LineBox[{{0., 0.}, 
             Offset[{-1.102182119232618*^-15, -6.}, {0., 0.}]}], 
           LineBox[{{20.799999999999994`, 0.}, 
             
             Offset[{-1.102182119232618*^-15, -6.}, {20.799999999999994`, 
              0.}]}], {{}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, \
{}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {
             LineBox[{{1.8999999999999997`, 0.}, 
               
               Offset[{-1.102182119232618*^-15, -6.}, {1.8999999999999997`, 
                0.}]}], 
             LineBox[{{2.0999999999999996`, 0.}, 
               
               Offset[{-1.102182119232618*^-15, -6.}, {2.0999999999999996`, 
                0.}]}], 
             LineBox[{{3.9999999999999996`, 0.}, 
               
               Offset[{-1.102182119232618*^-15, -6.}, {3.9999999999999996`, 
                0.}]}], 
             LineBox[{{4.199999999999999, 0.}, 
               
               Offset[{-1.102182119232618*^-15, -6.}, {4.199999999999999, 
                0.}]}], 
             LineBox[{{6.1, 0.}, 
               Offset[{-1.102182119232618*^-15, -6.}, {6.1, 0.}]}], 
             LineBox[{{6.3, 0.}, 
               Offset[{-1.102182119232618*^-15, -6.}, {6.3, 0.}]}], 
             LineBox[{{8.2, 0.}, 
               Offset[{-1.102182119232618*^-15, -6.}, {8.2, 0.}]}], 
             LineBox[{{8.399999999999999, 0.}, 
               
               Offset[{-1.102182119232618*^-15, -6.}, {8.399999999999999, 
                0.}]}], 
             LineBox[{{10.299999999999999`, 0.}, 
               
               Offset[{-1.102182119232618*^-15, -6.}, {10.299999999999999`, 
                0.}]}], 
             LineBox[{{10.499999999999998`, 0.}, 
               
               Offset[{-1.102182119232618*^-15, -6.}, {10.499999999999998`, 
                0.}]}], 
             LineBox[{{12.399999999999999`, 0.}, 
               
               Offset[{-1.102182119232618*^-15, -6.}, {12.399999999999999`, 
                0.}]}], 
             LineBox[{{12.599999999999998`, 0.}, 
               
               Offset[{-1.102182119232618*^-15, -6.}, {12.599999999999998`, 
                0.}]}], 
             LineBox[{{14.499999999999998`, 0.}, 
               
               Offset[{-1.102182119232618*^-15, -6.}, {14.499999999999998`, 
                0.}]}], 
             LineBox[{{14.699999999999998`, 0.}, 
               
               Offset[{-1.102182119232618*^-15, -6.}, {14.699999999999998`, 
                0.}]}], 
             LineBox[{{16.599999999999998`, 0.}, 
               
               Offset[{-1.102182119232618*^-15, -6.}, {16.599999999999998`, 
                0.}]}], 
             LineBox[{{16.799999999999997`, 0.}, 
               
               Offset[{-1.102182119232618*^-15, -6.}, {16.799999999999997`, 
                0.}]}], 
             LineBox[{{18.699999999999996`, 0.}, 
               
               Offset[{-1.102182119232618*^-15, -6.}, {18.699999999999996`, 
                0.}]}], 
             LineBox[{{18.899999999999995`, 0.}, 
               
               Offset[{-1.102182119232618*^-15, -6.}, {18.899999999999995`, 
                0.}]}]}}}, 
          StyleBox[{
            Directive[
             Thickness[Tiny]], 
            Directive[
             Thickness[Tiny]], 
            StyleBox[{
              InsetBox[
               FormBox["\"2013\"", TraditionalForm], 
               Offset[{0, -2}, {0.9499999999999998, 0.}], 
               NCache[
                ImageScaled[{
                  Rational[1, 2], 1}], 
                ImageScaled[{0.5, 1}]], Automatic, {1, 0}], 
              InsetBox[
               FormBox["\"2014\"", TraditionalForm], 
               Offset[{0, -2}, {3.0499999999999994`, 0.}], 
               NCache[
                ImageScaled[{
                  Rational[1, 2], 1}], 
                ImageScaled[{0.5, 1}]], Automatic, {1, 0}], 
              InsetBox[
               FormBox["\"2015\"", TraditionalForm], 
               Offset[{0, -2}, {5.1499999999999995`, 0.}], 
               NCache[
                ImageScaled[{
                  Rational[1, 2], 1}], 
                ImageScaled[{0.5, 1}]], Automatic, {1, 0}], 
              InsetBox[
               FormBox["\"2016\"", TraditionalForm], 
               Offset[{0, -2}, {7.25, 0.}], 
               NCache[
                ImageScaled[{
                  Rational[1, 2], 1}], 
                ImageScaled[{0.5, 1}]], Automatic, {1, 0}], 
              InsetBox[
               FormBox["\"2017\"", TraditionalForm], 
               Offset[{0, -2}, {9.35, 0.}], 
               NCache[
                ImageScaled[{
                  Rational[1, 2], 1}], 
                ImageScaled[{0.5, 1}]], Automatic, {1, 0}], 
              InsetBox[
               FormBox["\"2018\"", TraditionalForm], 
               Offset[{0, -2}, {11.449999999999998`, 0.}], 
               NCache[
                ImageScaled[{
                  Rational[1, 2], 1}], 
                ImageScaled[{0.5, 1}]], Automatic, {1, 0}], 
              InsetBox[
               FormBox["\"2019\"", TraditionalForm], 
               Offset[{0, -2}, {13.549999999999999`, 0.}], 
               NCache[
                ImageScaled[{
                  Rational[1, 2], 1}], 
                ImageScaled[{0.5, 1}]], Automatic, {1, 0}], 
              InsetBox[
               FormBox["\"2020\"", TraditionalForm], 
               Offset[{0, -2}, {15.649999999999999`, 0.}], 
               NCache[
                ImageScaled[{
                  Rational[1, 2], 1}], 
                ImageScaled[{0.5, 1}]], Automatic, {1, 0}], 
              InsetBox[
               FormBox["\"2021\"", TraditionalForm], 
               Offset[{0, -2}, {17.749999999999996`, 0.}], 
               NCache[
                ImageScaled[{
                  Rational[1, 2], 1}], 
                ImageScaled[{0.5, 1}]], Automatic, {1, 0}], 
              InsetBox[
               FormBox["\"2022\"", TraditionalForm], 
               Offset[{0, -2}, {19.849999999999994`, 0.}], 
               NCache[
                ImageScaled[{
                  Rational[1, 2], 1}], 
                ImageScaled[{0.5, 1}]], Automatic, {1, 0}]}, {{}}, 
             StripOnInput -> False]}, {"GraphicsLabel"}, StripOnInput -> 
           False]}, {"GraphicsTicks"}, StripOnInput -> False]}, {
       "GraphicsAxes"}, StripOnInput -> False]}}, {
    DisplayFunction -> Identity, AspectRatio -> 
     NCache[GoldenRatio^(-1), 0.6180339887498948], Axes -> {False, True}, 
     AxesLabel -> {None, None}, AxesOrigin -> {-0.4159999999999999, 0.}, 
     CoordinatesToolOptions -> {"DisplayFunction" -> ({
         Identity[
          Part[#, 1]], 
         Identity[
          Part[#, 2]]}& ), "CopiedValueFunction" -> ({
         Identity[
          Part[#, 1]], 
         Identity[
          Part[#, 2]]}& )}, FrameLabel -> {{None, None}, {None, None}}, 
     FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
     GridLines -> {None, None}, GridLinesStyle -> Directive[
       GrayLevel[0.5, 0.4]], ImageSize -> Large, PlotLabel -> 
     FormBox["\"Primerjava polnoletnih in mladoletni na 100 000 \
polnoletnih/mladolenih\"", TraditionalForm], 
     PlotRange -> {{All, All}, {All, All}}, PlotRangePadding -> {{
        Scaled[0.02], 
        Scaled[0.02]}, {
        Scaled[0.02], 
        Scaled[0.05]}}, Ticks -> {None, Automatic}}], 
   FormBox[
    FormBox[
     TemplateBox[{"\"mladoletni\"", "\"polnoletni\""}, "SwatchLegend", 
      DisplayFunction -> (FormBox[
        StyleBox[
         StyleBox[
          PaneBox[
           TagBox[
            GridBox[{{
               TagBox[
                GridBox[{{
                   GraphicsBox[{
                    Directive[
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    EdgeForm[
                    Directive[
                    GrayLevel[0], 
                    Thickness[Small], 
                    Opacity[0.5599999999999999]]], 
                    RGBColor[0.982864, 0.7431472, 0.3262672]], 
                    RectangleBox[{0, 0}, {10, 10}, "RoundingRadius" -> 0]}, 
                    AspectRatio -> Full, ImageSize -> {10, 10}, 
                    PlotRangePadding -> None, ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}, {
                   GraphicsBox[{
                    Directive[
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    EdgeForm[
                    Directive[
                    GrayLevel[0], 
                    Thickness[Small], 
                    Opacity[0.5599999999999999]]], 
                    RGBColor[0.4992, 0.5552, 0.8309304]], 
                    RectangleBox[{0, 0}, {10, 10}, "RoundingRadius" -> 0]}, 
                    AspectRatio -> Full, ImageSize -> {10, 10}, 
                    PlotRangePadding -> None, ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #2}}, 
                 GridBoxAlignment -> {
                  "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                 AutoDelete -> False, 
                 GridBoxDividers -> {
                  "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                 GridBoxItemSize -> {"Columns" -> {{All}}, "Rows" -> {{All}}},
                  GridBoxSpacings -> {
                  "Columns" -> {{0.3}}, "Rows" -> {{0.5}}}], "Grid"]}}, 
             GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
             AutoDelete -> False, 
             GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
            "Grid"], Alignment -> Left, AppearanceElements -> None, 
           ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
           "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
         FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
         False], TraditionalForm]& ), 
      InterpretationFunction :> (RowBox[{"SwatchLegend", "[", 
         RowBox[{
           RowBox[{"{", 
             RowBox[{
               RowBox[{"{", 
                 RowBox[{
                   RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"EdgeForm", "[", 
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Thickness", "[", "Small", "]"}], ",", 
                    RowBox[{"Opacity", "[", "0.5599999999999999`", "]"}]}], 
                    "]"}], "]"}], ",", 
                    
                    TemplateBox[<|"color" -> GrayLevel[1]|>, 
                    "GrayLevelColorSwatchTemplate"]}], "]"}], ",", 
                   RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"EdgeForm", "[", 
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Thickness", "[", "Small", "]"}], ",", 
                    RowBox[{"Opacity", "[", "0.5599999999999999`", "]"}]}], 
                    "]"}], "]"}], ",", 
                    
                    TemplateBox[<|"color" -> GrayLevel[1]|>, 
                    "GrayLevelColorSwatchTemplate"]}], "]"}], ",", 
                   RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"EdgeForm", "[", 
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Thickness", "[", "Small", "]"}], ",", 
                    RowBox[{"Opacity", "[", "0.5599999999999999`", "]"}]}], 
                    "]"}], "]"}], ",", 
                    
                    TemplateBox[<|"color" -> GrayLevel[1]|>, 
                    "GrayLevelColorSwatchTemplate"]}], "]"}], ",", 
                   RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"EdgeForm", "[", 
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Thickness", "[", "Small", "]"}], ",", 
                    RowBox[{"Opacity", "[", "0.5599999999999999`", "]"}]}], 
                    "]"}], "]"}], ",", 
                    
                    TemplateBox[<|"color" -> GrayLevel[1]|>, 
                    "GrayLevelColorSwatchTemplate"]}], "]"}], ",", 
                   RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"EdgeForm", "[", 
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Thickness", "[", "Small", "]"}], ",", 
                    RowBox[{"Opacity", "[", "0.5599999999999999`", "]"}]}], 
                    "]"}], "]"}], ",", 
                    
                    TemplateBox[<|"color" -> GrayLevel[1]|>, 
                    "GrayLevelColorSwatchTemplate"]}], "]"}], ",", 
                   RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"EdgeForm", "[", 
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Thickness", "[", "Small", "]"}], ",", 
                    RowBox[{"Opacity", "[", "0.5599999999999999`", "]"}]}], 
                    "]"}], "]"}], ",", 
                    
                    TemplateBox[<|"color" -> GrayLevel[1]|>, 
                    "GrayLevelColorSwatchTemplate"]}], "]"}], ",", 
                   RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"EdgeForm", "[", 
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Thickness", "[", "Small", "]"}], ",", 
                    RowBox[{"Opacity", "[", "0.5599999999999999`", "]"}]}], 
                    "]"}], "]"}], ",", 
                    
                    TemplateBox[<|"color" -> GrayLevel[1]|>, 
                    "GrayLevelColorSwatchTemplate"]}], "]"}], ",", 
                   RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"EdgeForm", "[", 
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Thickness", "[", "Small", "]"}], ",", 
                    RowBox[{"Opacity", "[", "0.5599999999999999`", "]"}]}], 
                    "]"}], "]"}], ",", 
                    
                    TemplateBox[<|"color" -> GrayLevel[1]|>, 
                    "GrayLevelColorSwatchTemplate"]}], "]"}], ",", 
                   RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"EdgeForm", "[", 
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Thickness", "[", "Small", "]"}], ",", 
                    RowBox[{"Opacity", "[", "0.5599999999999999`", "]"}]}], 
                    "]"}], "]"}], ",", 
                    
                    TemplateBox[<|"color" -> GrayLevel[1]|>, 
                    "GrayLevelColorSwatchTemplate"]}], "]"}], ",", 
                   RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"EdgeForm", "[", 
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Thickness", "[", "Small", "]"}], ",", 
                    RowBox[{"Opacity", "[", "0.5599999999999999`", "]"}]}], 
                    "]"}], "]"}], ",", 
                    
                    TemplateBox[<|"color" -> GrayLevel[1]|>, 
                    "GrayLevelColorSwatchTemplate"]}], "]"}]}], "}"}], ",", 
               RowBox[{"{", 
                 RowBox[{
                   RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"EdgeForm", "[", 
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Thickness", "[", "Small", "]"}], ",", 
                    RowBox[{"Opacity", "[", "0.5599999999999999`", "]"}]}], 
                    "]"}], "]"}], ",", 
                    
                    TemplateBox[<|
                    "color" -> RGBColor[0.982864, 0.7431472, 0.3262672]|>, 
                    "RGBColorSwatchTemplate"]}], "]"}], ",", 
                   RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"EdgeForm", "[", 
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Thickness", "[", "Small", "]"}], ",", 
                    RowBox[{"Opacity", "[", "0.5599999999999999`", "]"}]}], 
                    "]"}], "]"}], ",", 
                    
                    TemplateBox[<|
                    "color" -> RGBColor[0.4992, 0.5552, 0.8309304]|>, 
                    "RGBColorSwatchTemplate"]}], "]"}]}], "}"}]}], "}"}], ",", 
           RowBox[{"{", 
             RowBox[{
               RowBox[{"{", "}"}], ",", 
               RowBox[{"{", 
                 RowBox[{#, ",", #2}], "}"}]}], "}"}], ",", 
           RowBox[{"LegendMarkers", "\[Rule]", 
             RowBox[{"{", 
               RowBox[{
                 RowBox[{"{", "None", "}"}], ",", 
                 RowBox[{"{", 
                   RowBox[{"Automatic", ",", "Automatic"}], "}"}]}], "}"}]}], 
           ",", 
           RowBox[{"LabelStyle", "\[Rule]", 
             RowBox[{"{", 
               RowBox[{
                 RowBox[{"{", "}"}], ",", 
                 RowBox[{"{", "}"}]}], "}"}]}], ",", 
           RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& ), 
      Editable -> True], TraditionalForm], TraditionalForm]},
  "Legended",
  DisplayFunction->(GridBox[{{
      TagBox[
       ItemBox[
        PaneBox[
         TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
         BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
       "SkipImageSizeLevel"], 
      ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
    GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
    AutoDelete -> False, GridBoxItemSize -> Automatic, 
    BaselinePosition -> {1, 1}]& ),
  Editable->True,
  InterpretationFunction->(RowBox[{"Legended", "[", 
     RowBox[{#, ",", 
       RowBox[{"Placed", "[", 
         RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& )]], "Output",
 CellChangeTimes->{3.933818683180971*^9, 3.9338198663541107`*^9, 
  3.9339039021152*^9},
 CellLabel->"Out[62]=",ExpressionUUID->"29ffad91-d856-924e-b59a-08e854510a80"]
}, Open  ]],

Cell["\<\
Za Portugalsko vidimo, da je \[SHacek]tevilo polnoletnih in mladoletnih \
obsojenih padalo do leta 2020, nato pa naraslo.\
\>", "Text",
 CellChangeTimes->{{3.93381937180834*^9, 
  3.933819433453436*^9}},ExpressionUUID->"63c62a40-c10b-9f4b-a790-\
0e2204856be6"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"\[IndentingNewLine]", 
  RowBox[{"PrimerjavaPoStarosti", "[", "\"\<Portugal\>\"", "]"}]}]], "Input",
 CellChangeTimes->{{3.933819142721672*^9, 3.933819147012884*^9}},
 CellLabel->"In[63]:=",ExpressionUUID->"289459a4-d271-1c42-9e8c-cc7ae06cfd0d"],

Cell[BoxData[
 TemplateBox[{
   GraphicsBox[{{
      Opacity[0], 
      PointBox[{{-0.4159999999999999, 0.}, {20.799999999999997`, 
       0.}}]}, {{}, {{{}, {{}, {{
           Directive[
            EdgeForm[
             Directive[
              Thickness[Small], 
              Opacity[0.5599999999999999]]], 
            RGBColor[0.982864, 0.7431472, 0.3262672]], 
           TagBox[
            TooltipBox[
             TagBox[
              RectangleBox[{0., 0.}, {1., 309.45}, "RoundingRadius" -> 0], 
              StatusArea[#, 309.45]& , TagBoxNote -> "309.45"], 
             StyleBox["309.45`", {}, StripOnInput -> False]], Annotation[#, 
             Style[309.45, {}], "Tooltip"]& ]}, {
           Directive[
            EdgeForm[
             Directive[
              Thickness[Small], 
              Opacity[0.5599999999999999]]], 
            RGBColor[0.4992, 0.5552, 0.8309304]], 
           TagBox[
            TooltipBox[
             TagBox[
              RectangleBox[{0.9, 0.}, {1.9, 759.25}, "RoundingRadius" -> 0], 
              StatusArea[#, 759.25]& , TagBoxNote -> "759.25"], 
             StyleBox["759.25`", {}, StripOnInput -> False]], Annotation[#, 
             Style[759.25, {}], "Tooltip"]& ]}}}, {}, {}}, {{}, {{}, {{
           Directive[
            EdgeForm[
             Directive[
              Thickness[Small], 
              Opacity[0.5599999999999999]]], 
            RGBColor[0.982864, 0.7431472, 0.3262672]], 
           TagBox[
            TooltipBox[
             TagBox[
              RectangleBox[{2.1, 0.}, {3.1, 226.83}, "RoundingRadius" -> 0], 
              StatusArea[#, 226.83]& , TagBoxNote -> "226.83"], 
             StyleBox["226.83`", {}, StripOnInput -> False]], Annotation[#, 
             Style[226.83, {}], "Tooltip"]& ]}, {
           Directive[
            EdgeForm[
             Directive[
              Thickness[Small], 
              Opacity[0.5599999999999999]]], 
            RGBColor[0.4992, 0.5552, 0.8309304]], 
           TagBox[
            TooltipBox[
             TagBox[
              RectangleBox[{3., 0.}, {4., 567.71}, "RoundingRadius" -> 0], 
              StatusArea[#, 567.71]& , TagBoxNote -> "567.71"], 
             StyleBox["567.71`", {}, StripOnInput -> False]], Annotation[#, 
             Style[567.71, {}], "Tooltip"]& ]}}}, {}, {}}, {{}, {{}, {{
           Directive[
            EdgeForm[
             Directive[
              Thickness[Small], 
              Opacity[0.5599999999999999]]], 
            RGBColor[0.982864, 0.7431472, 0.3262672]], 
           TagBox[
            TooltipBox[
             TagBox[
              RectangleBox[{4.2, 0.}, {5.2, 303.19}, "RoundingRadius" -> 0], 
              StatusArea[#, 303.19]& , TagBoxNote -> "303.19"], 
             StyleBox["303.19`", {}, StripOnInput -> False]], Annotation[#, 
             Style[303.19, {}], "Tooltip"]& ]}, {
           Directive[
            EdgeForm[
             Directive[
              Thickness[Small], 
              Opacity[0.5599999999999999]]], 
            RGBColor[0.4992, 0.5552, 0.8309304]], 
           TagBox[
            TooltipBox[
             TagBox[
              
              RectangleBox[{5.1000000000000005`, 0.}, {6.1000000000000005`, 
               630.78}, "RoundingRadius" -> 0], StatusArea[#, 630.78]& , 
              TagBoxNote -> "630.78"], 
             StyleBox["630.78`", {}, StripOnInput -> False]], Annotation[#, 
             Style[630.78, {}], "Tooltip"]& ]}}}, {}, {}}, {{}, {{}, {{
           Directive[
            EdgeForm[
             Directive[
              Thickness[Small], 
              Opacity[0.5599999999999999]]], 
            RGBColor[0.982864, 0.7431472, 0.3262672]], 
           TagBox[
            TooltipBox[
             TagBox[
              
              RectangleBox[{6.300000000000001, 0.}, {7.300000000000001, 
               308.29}, "RoundingRadius" -> 0], StatusArea[#, 308.29]& , 
              TagBoxNote -> "308.29"], 
             StyleBox["308.29`", {}, StripOnInput -> False]], Annotation[#, 
             Style[308.29, {}], "Tooltip"]& ]}, {
           Directive[
            EdgeForm[
             Directive[
              Thickness[Small], 
              Opacity[0.5599999999999999]]], 
            RGBColor[0.4992, 0.5552, 0.8309304]], 
           TagBox[
            TooltipBox[
             TagBox[
              
              RectangleBox[{7.200000000000001, 0.}, {8.200000000000001, 
               601.74}, "RoundingRadius" -> 0], StatusArea[#, 601.74]& , 
              TagBoxNote -> "601.74"], 
             StyleBox["601.74`", {}, StripOnInput -> False]], Annotation[#, 
             Style[601.74, {}], "Tooltip"]& ]}}}, {}, {}}, {{}, {{}, {{
           Directive[
            EdgeForm[
             Directive[
              Thickness[Small], 
              Opacity[0.5599999999999999]]], 
            RGBColor[0.982864, 0.7431472, 0.3262672]], 
           TagBox[
            TooltipBox[
             TagBox[
              RectangleBox[{8.4, 0.}, {9.4, 259.87}, "RoundingRadius" -> 0], 
              StatusArea[#, 259.87]& , TagBoxNote -> "259.87"], 
             StyleBox["259.87`", {}, StripOnInput -> False]], Annotation[#, 
             Style[259.87, {}], "Tooltip"]& ]}, {
           Directive[
            EdgeForm[
             Directive[
              Thickness[Small], 
              Opacity[0.5599999999999999]]], 
            RGBColor[0.4992, 0.5552, 0.8309304]], 
           TagBox[
            TooltipBox[
             TagBox[
              RectangleBox[{9.3, 0.}, {10.3, 555.04}, "RoundingRadius" -> 0], 
              StatusArea[#, 555.04]& , TagBoxNote -> "555.04"], 
             StyleBox["555.04`", {}, StripOnInput -> False]], Annotation[#, 
             Style[555.04, {}], "Tooltip"]& ]}}}, {}, {}}, {{}, {{}, {{
           Directive[
            EdgeForm[
             Directive[
              Thickness[Small], 
              Opacity[0.5599999999999999]]], 
            RGBColor[0.982864, 0.7431472, 0.3262672]], 
           TagBox[
            TooltipBox[
             TagBox[
              RectangleBox[{10.5, 0.}, {11.5, 224.9}, "RoundingRadius" -> 0], 
              StatusArea[#, 224.9]& , TagBoxNote -> "224.9"], 
             StyleBox["224.9`", {}, StripOnInput -> False]], Annotation[#, 
             Style[224.9, {}], "Tooltip"]& ]}, {
           Directive[
            EdgeForm[
             Directive[
              Thickness[Small], 
              Opacity[0.5599999999999999]]], 
            RGBColor[0.4992, 0.5552, 0.8309304]], 
           TagBox[
            TooltipBox[
             TagBox[
              RectangleBox[{11.4, 0.}, {12.4, 500.73}, "RoundingRadius" -> 0],
               StatusArea[#, 500.73]& , TagBoxNote -> "500.73"], 
             StyleBox["500.73`", {}, StripOnInput -> False]], Annotation[#, 
             Style[500.73, {}], "Tooltip"]& ]}}}, {}, {}}, {{}, {{}, {{
           Directive[
            EdgeForm[
             Directive[
              Thickness[Small], 
              Opacity[0.5599999999999999]]], 
            RGBColor[0.982864, 0.7431472, 0.3262672]], 
           TagBox[
            TooltipBox[
             TagBox[
              RectangleBox[{12.6, 0.}, {13.6, 219.}, "RoundingRadius" -> 0], 
              StatusArea[#, 219.]& , TagBoxNote -> "219."], 
             StyleBox["219.`", {}, StripOnInput -> False]], Annotation[#, 
             Style[219., {}], "Tooltip"]& ]}, {
           Directive[
            EdgeForm[
             Directive[
              Thickness[Small], 
              Opacity[0.5599999999999999]]], 
            RGBColor[0.4992, 0.5552, 0.8309304]], 
           TagBox[
            TooltipBox[
             TagBox[
              RectangleBox[{13.5, 0.}, {14.5, 485.83}, "RoundingRadius" -> 0],
               StatusArea[#, 485.83]& , TagBoxNote -> "485.83"], 
             StyleBox["485.83`", {}, StripOnInput -> False]], Annotation[#, 
             Style[485.83, {}], "Tooltip"]& ]}}}, {}, {}}, {{}, {{}, {{
           Directive[
            EdgeForm[
             Directive[
              Thickness[Small], 
              Opacity[0.5599999999999999]]], 
            RGBColor[0.982864, 0.7431472, 0.3262672]], 
           TagBox[
            TooltipBox[
             TagBox[
              RectangleBox[{14.7, 0.}, {15.7, 161.21}, "RoundingRadius" -> 0],
               StatusArea[#, 161.21]& , TagBoxNote -> "161.21"], 
             StyleBox["161.21`", {}, StripOnInput -> False]], Annotation[#, 
             Style[161.21, {}], "Tooltip"]& ]}, {
           Directive[
            EdgeForm[
             Directive[
              Thickness[Small], 
              Opacity[0.5599999999999999]]], 
            RGBColor[0.4992, 0.5552, 0.8309304]], 
           TagBox[
            TooltipBox[
             TagBox[
              RectangleBox[{15.6, 0.}, {16.6, 384.48}, "RoundingRadius" -> 0],
               StatusArea[#, 384.48]& , TagBoxNote -> "384.48"], 
             StyleBox["384.48`", {}, StripOnInput -> False]], Annotation[#, 
             Style[384.48, {}], "Tooltip"]& ]}}}, {}, {}}, {{}, {{}, {{
           Directive[
            EdgeForm[
             Directive[
              Thickness[Small], 
              Opacity[0.5599999999999999]]], 
            RGBColor[0.982864, 0.7431472, 0.3262672]], 
           TagBox[
            TooltipBox[
             TagBox[
              RectangleBox[{16.8, 0.}, {17.8, 192.51}, "RoundingRadius" -> 0],
               StatusArea[#, 192.51]& , TagBoxNote -> "192.51"], 
             StyleBox["192.51`", {}, StripOnInput -> False]], Annotation[#, 
             Style[192.51, {}], "Tooltip"]& ]}, {
           Directive[
            EdgeForm[
             Directive[
              Thickness[Small], 
              Opacity[0.5599999999999999]]], 
            RGBColor[0.4992, 0.5552, 0.8309304]], 
           TagBox[
            TooltipBox[
             TagBox[
              RectangleBox[{17.7, 0.}, {18.7, 458.59}, "RoundingRadius" -> 0],
               StatusArea[#, 458.59]& , TagBoxNote -> "458.59"], 
             StyleBox["458.59`", {}, StripOnInput -> False]], Annotation[#, 
             Style[458.59, {}], "Tooltip"]& ]}}}, {}, {}}, {{}, {{}, {{
           Directive[
            EdgeForm[
             Directive[
              Thickness[Small], 
              Opacity[0.5599999999999999]]], 
            RGBColor[0.982864, 0.7431472, 0.3262672]], 
           TagBox[
            TooltipBox[
             TagBox[
              RectangleBox[{18.9, 0.}, {19.9, 216.36}, "RoundingRadius" -> 0],
               StatusArea[#, 216.36]& , TagBoxNote -> "216.36"], 
             StyleBox["216.36`", {}, StripOnInput -> False]], Annotation[#, 
             Style[216.36, {}], "Tooltip"]& ]}, {
           Directive[
            EdgeForm[
             Directive[
              Thickness[Small], 
              Opacity[0.5599999999999999]]], 
            RGBColor[0.4992, 0.5552, 0.8309304]], 
           TagBox[
            TooltipBox[
             TagBox[
              
              RectangleBox[{19.799999999999997`, 0.}, {20.799999999999997`, 
               484.5}, "RoundingRadius" -> 0], StatusArea[#, 484.5]& , 
              TagBoxNote -> "484.5"], 
             StyleBox["484.5`", {}, StripOnInput -> False]], Annotation[#, 
             Style[484.5, {}], 
             "Tooltip"]& ]}}}, {}, {}}}, {}, {}}, {}, {}, {}, {}, {
      StyleBox[{Antialiasing -> False, {
         Directive[
          Thickness[Tiny]], {
          LineBox[{{-0.4159999999999999, 0.}, {21.224319999999995`, 0.}}]}, 
         StyleBox[{}, {"GraphicsLabel"}, StripOnInput -> False]}, 
        StyleBox[{{
           Directive[
            Thickness[Tiny]], 
           LineBox[{{0., 0.}, 
             Offset[{-1.102182119232618*^-15, -6.}, {0., 0.}]}], 
           LineBox[{{20.799999999999994`, 0.}, 
             
             Offset[{-1.102182119232618*^-15, -6.}, {20.799999999999994`, 
              0.}]}], {{}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, \
{}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {
             LineBox[{{1.8999999999999997`, 0.}, 
               
               Offset[{-1.102182119232618*^-15, -6.}, {1.8999999999999997`, 
                0.}]}], 
             LineBox[{{2.0999999999999996`, 0.}, 
               
               Offset[{-1.102182119232618*^-15, -6.}, {2.0999999999999996`, 
                0.}]}], 
             LineBox[{{3.9999999999999996`, 0.}, 
               
               Offset[{-1.102182119232618*^-15, -6.}, {3.9999999999999996`, 
                0.}]}], 
             LineBox[{{4.199999999999999, 0.}, 
               
               Offset[{-1.102182119232618*^-15, -6.}, {4.199999999999999, 
                0.}]}], 
             LineBox[{{6.1, 0.}, 
               Offset[{-1.102182119232618*^-15, -6.}, {6.1, 0.}]}], 
             LineBox[{{6.3, 0.}, 
               Offset[{-1.102182119232618*^-15, -6.}, {6.3, 0.}]}], 
             LineBox[{{8.2, 0.}, 
               Offset[{-1.102182119232618*^-15, -6.}, {8.2, 0.}]}], 
             LineBox[{{8.399999999999999, 0.}, 
               
               Offset[{-1.102182119232618*^-15, -6.}, {8.399999999999999, 
                0.}]}], 
             LineBox[{{10.299999999999999`, 0.}, 
               
               Offset[{-1.102182119232618*^-15, -6.}, {10.299999999999999`, 
                0.}]}], 
             LineBox[{{10.499999999999998`, 0.}, 
               
               Offset[{-1.102182119232618*^-15, -6.}, {10.499999999999998`, 
                0.}]}], 
             LineBox[{{12.399999999999999`, 0.}, 
               
               Offset[{-1.102182119232618*^-15, -6.}, {12.399999999999999`, 
                0.}]}], 
             LineBox[{{12.599999999999998`, 0.}, 
               
               Offset[{-1.102182119232618*^-15, -6.}, {12.599999999999998`, 
                0.}]}], 
             LineBox[{{14.499999999999998`, 0.}, 
               
               Offset[{-1.102182119232618*^-15, -6.}, {14.499999999999998`, 
                0.}]}], 
             LineBox[{{14.699999999999998`, 0.}, 
               
               Offset[{-1.102182119232618*^-15, -6.}, {14.699999999999998`, 
                0.}]}], 
             LineBox[{{16.599999999999998`, 0.}, 
               
               Offset[{-1.102182119232618*^-15, -6.}, {16.599999999999998`, 
                0.}]}], 
             LineBox[{{16.799999999999997`, 0.}, 
               
               Offset[{-1.102182119232618*^-15, -6.}, {16.799999999999997`, 
                0.}]}], 
             LineBox[{{18.699999999999996`, 0.}, 
               
               Offset[{-1.102182119232618*^-15, -6.}, {18.699999999999996`, 
                0.}]}], 
             LineBox[{{18.899999999999995`, 0.}, 
               
               Offset[{-1.102182119232618*^-15, -6.}, {18.899999999999995`, 
                0.}]}]}}}, 
          StyleBox[{
            Directive[
             Thickness[Tiny]], 
            Directive[
             Thickness[Tiny]], 
            StyleBox[{
              InsetBox[
               FormBox["\"2013\"", TraditionalForm], 
               Offset[{0, -2}, {0.9499999999999998, 0.}], 
               NCache[
                ImageScaled[{
                  Rational[1, 2], 1}], 
                ImageScaled[{0.5, 1}]], Automatic, {1, 0}], 
              InsetBox[
               FormBox["\"2014\"", TraditionalForm], 
               Offset[{0, -2}, {3.0499999999999994`, 0.}], 
               NCache[
                ImageScaled[{
                  Rational[1, 2], 1}], 
                ImageScaled[{0.5, 1}]], Automatic, {1, 0}], 
              InsetBox[
               FormBox["\"2015\"", TraditionalForm], 
               Offset[{0, -2}, {5.1499999999999995`, 0.}], 
               NCache[
                ImageScaled[{
                  Rational[1, 2], 1}], 
                ImageScaled[{0.5, 1}]], Automatic, {1, 0}], 
              InsetBox[
               FormBox["\"2016\"", TraditionalForm], 
               Offset[{0, -2}, {7.25, 0.}], 
               NCache[
                ImageScaled[{
                  Rational[1, 2], 1}], 
                ImageScaled[{0.5, 1}]], Automatic, {1, 0}], 
              InsetBox[
               FormBox["\"2017\"", TraditionalForm], 
               Offset[{0, -2}, {9.35, 0.}], 
               NCache[
                ImageScaled[{
                  Rational[1, 2], 1}], 
                ImageScaled[{0.5, 1}]], Automatic, {1, 0}], 
              InsetBox[
               FormBox["\"2018\"", TraditionalForm], 
               Offset[{0, -2}, {11.449999999999998`, 0.}], 
               NCache[
                ImageScaled[{
                  Rational[1, 2], 1}], 
                ImageScaled[{0.5, 1}]], Automatic, {1, 0}], 
              InsetBox[
               FormBox["\"2019\"", TraditionalForm], 
               Offset[{0, -2}, {13.549999999999999`, 0.}], 
               NCache[
                ImageScaled[{
                  Rational[1, 2], 1}], 
                ImageScaled[{0.5, 1}]], Automatic, {1, 0}], 
              InsetBox[
               FormBox["\"2020\"", TraditionalForm], 
               Offset[{0, -2}, {15.649999999999999`, 0.}], 
               NCache[
                ImageScaled[{
                  Rational[1, 2], 1}], 
                ImageScaled[{0.5, 1}]], Automatic, {1, 0}], 
              InsetBox[
               FormBox["\"2021\"", TraditionalForm], 
               Offset[{0, -2}, {17.749999999999996`, 0.}], 
               NCache[
                ImageScaled[{
                  Rational[1, 2], 1}], 
                ImageScaled[{0.5, 1}]], Automatic, {1, 0}], 
              InsetBox[
               FormBox["\"2022\"", TraditionalForm], 
               Offset[{0, -2}, {19.849999999999994`, 0.}], 
               NCache[
                ImageScaled[{
                  Rational[1, 2], 1}], 
                ImageScaled[{0.5, 1}]], Automatic, {1, 0}]}, {{}}, 
             StripOnInput -> False]}, {"GraphicsLabel"}, StripOnInput -> 
           False]}, {"GraphicsTicks"}, StripOnInput -> False]}, {
       "GraphicsAxes"}, StripOnInput -> False]}}, {
    DisplayFunction -> Identity, AspectRatio -> 
     NCache[GoldenRatio^(-1), 0.6180339887498948], Axes -> {False, True}, 
     AxesLabel -> {None, None}, AxesOrigin -> {-0.4159999999999999, 0.}, 
     CoordinatesToolOptions -> {"DisplayFunction" -> ({
         Identity[
          Part[#, 1]], 
         Identity[
          Part[#, 2]]}& ), "CopiedValueFunction" -> ({
         Identity[
          Part[#, 1]], 
         Identity[
          Part[#, 2]]}& )}, FrameLabel -> {{None, None}, {None, None}}, 
     FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
     GridLines -> {None, None}, GridLinesStyle -> Directive[
       GrayLevel[0.5, 0.4]], ImageSize -> Large, PlotLabel -> 
     FormBox["\"Primerjava polnoletnih in mladoletni na 100 000 \
polnoletnih/mladolenih\"", TraditionalForm], 
     PlotRange -> {{All, All}, {All, All}}, PlotRangePadding -> {{
        Scaled[0.02], 
        Scaled[0.02]}, {
        Scaled[0.02], 
        Scaled[0.05]}}, Ticks -> {None, Automatic}}], 
   FormBox[
    FormBox[
     TemplateBox[{"\"mladoletni\"", "\"polnoletni\""}, "SwatchLegend", 
      DisplayFunction -> (FormBox[
        StyleBox[
         StyleBox[
          PaneBox[
           TagBox[
            GridBox[{{
               TagBox[
                GridBox[{{
                   GraphicsBox[{
                    Directive[
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    EdgeForm[
                    Directive[
                    GrayLevel[0], 
                    Thickness[Small], 
                    Opacity[0.5599999999999999]]], 
                    RGBColor[0.982864, 0.7431472, 0.3262672]], 
                    RectangleBox[{0, 0}, {10, 10}, "RoundingRadius" -> 0]}, 
                    AspectRatio -> Full, ImageSize -> {10, 10}, 
                    PlotRangePadding -> None, ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}, {
                   GraphicsBox[{
                    Directive[
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    EdgeForm[
                    Directive[
                    GrayLevel[0], 
                    Thickness[Small], 
                    Opacity[0.5599999999999999]]], 
                    RGBColor[0.4992, 0.5552, 0.8309304]], 
                    RectangleBox[{0, 0}, {10, 10}, "RoundingRadius" -> 0]}, 
                    AspectRatio -> Full, ImageSize -> {10, 10}, 
                    PlotRangePadding -> None, ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #2}}, 
                 GridBoxAlignment -> {
                  "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                 AutoDelete -> False, 
                 GridBoxDividers -> {
                  "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                 GridBoxItemSize -> {"Columns" -> {{All}}, "Rows" -> {{All}}},
                  GridBoxSpacings -> {
                  "Columns" -> {{0.3}}, "Rows" -> {{0.5}}}], "Grid"]}}, 
             GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
             AutoDelete -> False, 
             GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
            "Grid"], Alignment -> Left, AppearanceElements -> None, 
           ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
           "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
         FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
         False], TraditionalForm]& ), 
      InterpretationFunction :> (RowBox[{"SwatchLegend", "[", 
         RowBox[{
           RowBox[{"{", 
             RowBox[{
               RowBox[{"{", 
                 RowBox[{
                   RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"EdgeForm", "[", 
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Thickness", "[", "Small", "]"}], ",", 
                    RowBox[{"Opacity", "[", "0.5599999999999999`", "]"}]}], 
                    "]"}], "]"}], ",", 
                    
                    TemplateBox[<|"color" -> GrayLevel[1]|>, 
                    "GrayLevelColorSwatchTemplate"]}], "]"}], ",", 
                   RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"EdgeForm", "[", 
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Thickness", "[", "Small", "]"}], ",", 
                    RowBox[{"Opacity", "[", "0.5599999999999999`", "]"}]}], 
                    "]"}], "]"}], ",", 
                    
                    TemplateBox[<|"color" -> GrayLevel[1]|>, 
                    "GrayLevelColorSwatchTemplate"]}], "]"}], ",", 
                   RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"EdgeForm", "[", 
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Thickness", "[", "Small", "]"}], ",", 
                    RowBox[{"Opacity", "[", "0.5599999999999999`", "]"}]}], 
                    "]"}], "]"}], ",", 
                    
                    TemplateBox[<|"color" -> GrayLevel[1]|>, 
                    "GrayLevelColorSwatchTemplate"]}], "]"}], ",", 
                   RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"EdgeForm", "[", 
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Thickness", "[", "Small", "]"}], ",", 
                    RowBox[{"Opacity", "[", "0.5599999999999999`", "]"}]}], 
                    "]"}], "]"}], ",", 
                    
                    TemplateBox[<|"color" -> GrayLevel[1]|>, 
                    "GrayLevelColorSwatchTemplate"]}], "]"}], ",", 
                   RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"EdgeForm", "[", 
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Thickness", "[", "Small", "]"}], ",", 
                    RowBox[{"Opacity", "[", "0.5599999999999999`", "]"}]}], 
                    "]"}], "]"}], ",", 
                    
                    TemplateBox[<|"color" -> GrayLevel[1]|>, 
                    "GrayLevelColorSwatchTemplate"]}], "]"}], ",", 
                   RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"EdgeForm", "[", 
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Thickness", "[", "Small", "]"}], ",", 
                    RowBox[{"Opacity", "[", "0.5599999999999999`", "]"}]}], 
                    "]"}], "]"}], ",", 
                    
                    TemplateBox[<|"color" -> GrayLevel[1]|>, 
                    "GrayLevelColorSwatchTemplate"]}], "]"}], ",", 
                   RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"EdgeForm", "[", 
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Thickness", "[", "Small", "]"}], ",", 
                    RowBox[{"Opacity", "[", "0.5599999999999999`", "]"}]}], 
                    "]"}], "]"}], ",", 
                    
                    TemplateBox[<|"color" -> GrayLevel[1]|>, 
                    "GrayLevelColorSwatchTemplate"]}], "]"}], ",", 
                   RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"EdgeForm", "[", 
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Thickness", "[", "Small", "]"}], ",", 
                    RowBox[{"Opacity", "[", "0.5599999999999999`", "]"}]}], 
                    "]"}], "]"}], ",", 
                    
                    TemplateBox[<|"color" -> GrayLevel[1]|>, 
                    "GrayLevelColorSwatchTemplate"]}], "]"}], ",", 
                   RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"EdgeForm", "[", 
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Thickness", "[", "Small", "]"}], ",", 
                    RowBox[{"Opacity", "[", "0.5599999999999999`", "]"}]}], 
                    "]"}], "]"}], ",", 
                    
                    TemplateBox[<|"color" -> GrayLevel[1]|>, 
                    "GrayLevelColorSwatchTemplate"]}], "]"}], ",", 
                   RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"EdgeForm", "[", 
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Thickness", "[", "Small", "]"}], ",", 
                    RowBox[{"Opacity", "[", "0.5599999999999999`", "]"}]}], 
                    "]"}], "]"}], ",", 
                    
                    TemplateBox[<|"color" -> GrayLevel[1]|>, 
                    "GrayLevelColorSwatchTemplate"]}], "]"}]}], "}"}], ",", 
               RowBox[{"{", 
                 RowBox[{
                   RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"EdgeForm", "[", 
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Thickness", "[", "Small", "]"}], ",", 
                    RowBox[{"Opacity", "[", "0.5599999999999999`", "]"}]}], 
                    "]"}], "]"}], ",", 
                    
                    TemplateBox[<|
                    "color" -> RGBColor[0.982864, 0.7431472, 0.3262672]|>, 
                    "RGBColorSwatchTemplate"]}], "]"}], ",", 
                   RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"EdgeForm", "[", 
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Thickness", "[", "Small", "]"}], ",", 
                    RowBox[{"Opacity", "[", "0.5599999999999999`", "]"}]}], 
                    "]"}], "]"}], ",", 
                    
                    TemplateBox[<|
                    "color" -> RGBColor[0.4992, 0.5552, 0.8309304]|>, 
                    "RGBColorSwatchTemplate"]}], "]"}]}], "}"}]}], "}"}], ",", 
           RowBox[{"{", 
             RowBox[{
               RowBox[{"{", "}"}], ",", 
               RowBox[{"{", 
                 RowBox[{#, ",", #2}], "}"}]}], "}"}], ",", 
           RowBox[{"LegendMarkers", "\[Rule]", 
             RowBox[{"{", 
               RowBox[{
                 RowBox[{"{", "None", "}"}], ",", 
                 RowBox[{"{", 
                   RowBox[{"Automatic", ",", "Automatic"}], "}"}]}], "}"}]}], 
           ",", 
           RowBox[{"LabelStyle", "\[Rule]", 
             RowBox[{"{", 
               RowBox[{
                 RowBox[{"{", "}"}], ",", 
                 RowBox[{"{", "}"}]}], "}"}]}], ",", 
           RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& ), 
      Editable -> True], TraditionalForm], TraditionalForm]},
  "Legended",
  DisplayFunction->(GridBox[{{
      TagBox[
       ItemBox[
        PaneBox[
         TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
         BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
       "SkipImageSizeLevel"], 
      ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
    GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
    AutoDelete -> False, GridBoxItemSize -> Automatic, 
    BaselinePosition -> {1, 1}]& ),
  Editable->True,
  InterpretationFunction->(RowBox[{"Legended", "[", 
     RowBox[{#, ",", 
       RowBox[{"Placed", "[", 
         RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& )]], "Output",
 CellChangeTimes->{3.933819148289524*^9, 3.9338198664786263`*^9, 
  3.9339039022157116`*^9},
 CellLabel->"Out[63]=",ExpressionUUID->"7e18b02a-fa59-0344-8dfe-d26646602d7f"]
}, Open  ]],

Cell[BoxData["  "], "Input",
 CellChangeTimes->{{3.933819017772387*^9, 3.9338190178338737`*^9}},
 CellLabel->"In[64]:=",ExpressionUUID->"1078469d-9d18-1c4b-861d-25cf2d18f9af"],

Cell["\<\
Naredil sem aplikacijo v oblaku, s katero lahko nari\[SHacek]ete tabelarni \
graf \[SHacek]tevila obsojenih glede na starost skozi \[CHacek]as za \
katerokoli dr\[ZHacek]avo EU.\
\>", "Text",
 CellChangeTimes->{{3.9338195525830746`*^9, 
  3.9338196415647335`*^9}},ExpressionUUID->"4bc5a671-1552-8f41-8ea9-\
3b9d48764a9e"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"\[IndentingNewLine]", 
  RowBox[{
   RowBox[{"vnos", " ", "=", " ", 
    RowBox[{"FormPage", "[", 
     RowBox[{
      RowBox[{"\"\<drzava\>\"", "\[Rule]", " ", 
       RowBox[{"Sort", "[", 
        RowBox[{"Normal", "[", 
         RowBox[{"Keys", "[", "vsiObsojeni", "]"}], "]"}], "]"}]}], ",", 
      "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"PrimerjavaPoStarosti", "[", "#drzava", "]"}], "&"}], ",", 
      "\[IndentingNewLine]", 
      RowBox[{"AppearanceRules", "\[Rule]", 
       RowBox[{"<|", 
        RowBox[{
         RowBox[{
         "\"\<Title\>\"", " ", "\[Rule]", " ", 
          "\"\<Graf mladoletnih in polnoletnih obsojenih\>\""}], ",", 
         "\[IndentingNewLine]", 
         RowBox[{
         "\"\<Description\>\"", "\[Rule]", " ", 
          "\"\<Generira graf mladoletnih obsojenih glede na 100 000 \
mladoletnih in polnoletnih obsojenih glede na 100 000 polnoletnih\>\""}], ",",
          "\[IndentingNewLine]", 
         RowBox[{
         "\"\<SubmitLabel\>\"", " ", "\[Rule]", " ", "\"\<Potrdi\>\""}]}], 
        "|>"}]}]}], "]"}]}], "\[IndentingNewLine]", 
   RowBox[{"CloudDeploy", "[", 
    RowBox[{
    "vnos", ",", "\"\<Graf-mladoletnih-in-polnoletnih-obsojenih\>\"", ",", 
     " ", 
     RowBox[{"Permissions", "->", "\"\<Public\>\""}]}], "]"}]}]}]], "Input",
 CellChangeTimes->{{3.9338115468566732`*^9, 3.933811763716067*^9}, {
   3.933811846029064*^9, 3.933811857693321*^9}, {3.933811907891018*^9, 
   3.933811927373575*^9}, {3.93381205110878*^9, 3.9338120814223595`*^9}, {
   3.9338121885754185`*^9, 3.93381224075396*^9}, {3.933812306377821*^9, 
   3.933812397735216*^9}, {3.933812524348871*^9, 3.9338125408522873`*^9}, {
   3.933812589806513*^9, 3.9338126047521973`*^9}, {3.933812638389982*^9, 
   3.933812678096546*^9}, {3.933812762562987*^9, 3.933812804217249*^9}, {
   3.9338131081065845`*^9, 3.933813137020458*^9}, {3.933813172546303*^9, 
   3.9338131742537537`*^9}, {3.933813333140608*^9, 3.933813486668577*^9}, 
   3.933905921031145*^9, {3.93390599690555*^9, 3.933906000230299*^9}, {
   3.9339061109191704`*^9, 3.9339061498923435`*^9}, {3.9339062383787518`*^9, 
   3.9339062498172264`*^9}, {3.933906290451952*^9, 3.933906354764948*^9}},
 CellLabel->
  "In[283]:=",ExpressionUUID->"7f77a3c9-b686-6648-b746-2b60d87167ac"],

Cell[BoxData[
 InterpretationBox[
  DynamicModuleBox[{Forms`FormPage`PackagePrivate`temp$$ = <|
   "drzava" -> <|
     "Interpreter" -> {
       "Albania", "Austria", "Belgium", "Bosnia and Herzegovina", "Bulgaria", 
        "Croatia", "Cyprus", "Czechia", "Denmark", "England and Wales", 
        "Estonia", "Finland", "France", "Germany", "Greece", "Hungary", 
        "Iceland", "Ireland", "Italy", "Kosovo*", "Latvia", "Liechtenstein", 
        "Lithuania", "Luxembourg", "Malta", "Montenegro", "Netherlands", 
        "Northern Ireland (UK) (NUTS 2021)", "North Macedonia", "Norway", 
        "Poland", "Portugal", "Romania", "Scotland (NUTS 2021)", "Serbia", 
        "Slovakia", "Slovenia", "Spain", "Sweden", "Switzerland", 
        "T\[UDoubleDot]rkiye"}, "Input" -> "~237457e4c8f96ea6"|>|>, 
   Forms`FormPage`PackagePrivate`vals$$ = <|"drzava" -> "Norway"|>, 
   Forms`FormPage`PackagePrivate`valid$$ = True, 
   Forms`FormPage`PackagePrivate`form2$$ = 
   FormObject[<|
    "drzava" -> <|
      "Interpreter" -> {
        "Albania", "Austria", "Belgium", "Bosnia and Herzegovina", "Bulgaria",
          "Croatia", "Cyprus", "Czechia", "Denmark", "England and Wales", 
         "Estonia", "Finland", "France", "Germany", "Greece", "Hungary", 
         "Iceland", "Ireland", "Italy", "Kosovo*", "Latvia", "Liechtenstein", 
         "Lithuania", "Luxembourg", "Malta", "Montenegro", "Netherlands", 
         "Northern Ireland (UK) (NUTS 2021)", "North Macedonia", "Norway", 
         "Poland", "Portugal", "Romania", "Scotland (NUTS 2021)", "Serbia", 
         "Slovakia", "Slovenia", "Spain", "Sweden", "Switzerland", 
         "T\[UDoubleDot]rkiye"}, "Input" -> "~237457e4c8f96ea6"|>|>, <|
    "drzava" -> "Norway"|>, 
    AppearanceRules -> <|
     "Title" -> "Graf mladoletnih in polnoletnih obsojenih", "Description" -> 
      "Generira graf mladoletnih obsojenih glede na 100 000 mladoletnih in \
polnoletnih obsojenih glede na 100 000 polnoletnih", "SubmitLabel" -> 
      "Potrdi"|>], Forms`FormPage`PackagePrivate`valid2$$}, 
   DynamicBox[ToBoxes[
     With[{
      Forms`FormPage`PackagePrivate`formpane$ = Forms`PackageScope`formPanel[
         Forms`FormPage`PackagePrivate`form2$$[
         AppearanceRules, "FormPanelStyle"]][
         Forms`getFormLayout[
          Forms`PackageScope`bindableForm[
          Forms`FormPage`PackagePrivate`temp$$, 
           Evaluate[Forms`FormPage`PackagePrivate`form2$$], None, None -> 
           Forms`PackageScope`completeAction[
            Forms`FormPage`PackagePrivate`form2$$, 
             Forms`FormPage`PackagePrivate`temp$$, 
             Forms`FormPage`PackagePrivate`vals$$, (
             Unset[Forms`FormPage`PackagePrivate`vals$$]; 
             Forms`FormPage`PackagePrivate`vals$$ = #; 
             Forms`FormPage`PackagePrivate`valid2$$ = Not[
                TrueQ[Forms`PackageScope`$DontComplete]])& , None, {
             AppearanceRules -> <|
               "Title" -> "Graf mladoletnih in polnoletnih obsojenih", 
                "Description" -> 
                "Generira graf mladoletnih obsojenih glede na 100 000 \
mladoletnih in polnoletnih obsojenih glede na 100 000 polnoletnih", 
                "SubmitLabel" -> "Potrdi"|>}]]]], 
       Forms`FormPage`PackagePrivate`resultpane$ = Column[{
          Forms`PackageScope`formPanel[
           Forms`FormPage`PackagePrivate`form2$$[
           AppearanceRules, "FormPanelStyle"]][
           If[
           Forms`FormPage`PackagePrivate`valid$$ = 
            And[Forms`FormPage`PackagePrivate`vals$$ =!= <||>, 
              FreeQ[
               Values[Forms`FormPage`PackagePrivate`vals$$], 
               Alternatives[
                Blank[Failure], Forms`PackageScope`fieldHidden]], 
              TrueQ[Forms`FormPage`PackagePrivate`valid2$$]], 
            Unset[Forms`FormPage`PackagePrivate`valid2$$]; Style[
              ($CellContext`PrimerjavaPoStarosti[
               Slot["drzava"]]& )[Forms`FormPage`PackagePrivate`vals$$], 
              "Output", 
              ToString[StandardForm]], 
            Style["Invalid form", "Message"]]]}]}, 
      Forms`PackageScope`formPanel[
       Forms`FormPage`PackagePrivate`form2$$[
       AppearanceRules, "FormPanelStyle"]][
       Column[
        Forms`doLayout[
        Automatic, Forms`FormPage`PackagePrivate`valid$$, {
         Forms`FormPage`PackagePrivate`formpane$, 
          Forms`FormPage`PackagePrivate`resultpane$, 
          Forms`PackageScope`formPanel[
           Forms`FormPage`PackagePrivate`form2$$[
           AppearanceRules, "FormPanelStyle"]][
           Item[
            Row[{
              Spacer[0], 
              Forms`PackageScope`formDefaultButton[
               Forms`FormPage`PackagePrivate`form2$$[AppearanceRules, 
                Forms`FormPage`PackagePrivate`form2$$[
                AppearanceRules, "CurrentSubmitLabel"]], 
               Forms`PackageScope`completeAction[
               Forms`FormPage`PackagePrivate`form2$$, 
                Forms`FormPage`PackagePrivate`temp$$, 
                Forms`FormPage`PackagePrivate`vals$$, (
                Unset[Forms`FormPage`PackagePrivate`vals$$]; 
                Forms`FormPage`PackagePrivate`vals$$ = #; 
                Forms`FormPage`PackagePrivate`valid2$$ = Not[
                   TrueQ[Forms`PackageScope`$DontComplete]])& , None, {
                AppearanceRules -> <|
                  "Title" -> "Graf mladoletnih in polnoletnih obsojenih", 
                   "Description" -> 
                   "Generira graf mladoletnih obsojenih glede na 100 000 \
mladoletnih in polnoletnih obsojenih glede na 100 000 polnoletnih", 
                   "SubmitLabel" -> "Potrdi"|>}], 
               Forms`FormPage`PackagePrivate`form2$$[
               AppearanceRules, "FormDefaultButtonStyle"]]}], Alignment -> 
            Right]]}, 
         Forms`PackageScope`formPanel[
          Forms`FormPage`PackagePrivate`form2$$[
          AppearanceRules, "FormPanelStyle"]][
          BlankNullSequence[]], Forms`PackageScope`formPanel[
          Forms`FormPage`PackagePrivate`form2$$[
          AppearanceRules, "FormPanelStyle"]][
          Column[
           Part[{
             SlotSequence[1]}, All, 1]]]& ]]]], StandardForm],
    ImageSizeCache->{909., {383.84743637626525`, 390.15256362373475`}},
    TrackedSymbols:>{Forms`FormPage`PackagePrivate`vals$$}],
   DynamicModuleValues:>{}],
  FormPage[
   FormObject[<|
    "drzava" -> <|
      "Interpreter" -> {
        "Albania", "Austria", "Belgium", "Bosnia and Herzegovina", "Bulgaria",
          "Croatia", "Cyprus", "Czechia", "Denmark", "England and Wales", 
         "Estonia", "Finland", "France", "Germany", "Greece", "Hungary", 
         "Iceland", "Ireland", "Italy", "Kosovo*", "Latvia", "Liechtenstein", 
         "Lithuania", "Luxembourg", "Malta", "Montenegro", "Netherlands", 
         "Northern Ireland (UK) (NUTS 2021)", "North Macedonia", "Norway", 
         "Poland", "Portugal", "Romania", "Scotland (NUTS 2021)", "Serbia", 
         "Slovakia", "Slovenia", "Spain", "Sweden", "Switzerland", 
         "T\[UDoubleDot]rkiye"}|>|>, <||>, 
    AppearanceRules -> <|
     "Title" -> "Graf mladoletnih in polnoletnih obsojenih", "Description" -> 
      "Generira graf mladoletnih obsojenih glede na 100 000 mladoletnih in \
polnoletnih obsojenih glede na 100 000 polnoletnih", "SubmitLabel" -> 
      "Potrdi"|>], $CellContext`PrimerjavaPoStarosti[
    Slot["drzava"]]& ],
  Editable->False,
  SelectWithContents->True,
  Selectable->False]], "Output",
 CellChangeTimes->{{3.933812352917738*^9, 3.93381239971249*^9}, {
   3.93381254180176*^9, 3.93381254886351*^9}, {3.933812606647165*^9, 
   3.93381267966427*^9}, {3.933812782852814*^9, 3.933812805355104*^9}, 
   3.9338129869121304`*^9, 3.9338131382661724`*^9, 3.933813176710844*^9, {
   3.933813348428684*^9, 3.933813372466334*^9}, 3.933813488934555*^9, 
   3.933818583253076*^9, 3.933819866528875*^9, 3.9339039082930965`*^9, 
   3.933905922756445*^9, 3.9339061515775414`*^9, {3.933906244240652*^9, 
   3.9339062511713123`*^9}, 3.9339063082289314`*^9, 3.933906355792259*^9},
 CellLabel->
  "Out[283]=",ExpressionUUID->"2190565d-f101-f949-9045-ed50aa301449"],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"CloudObject", "[", 
   TemplateBox[{
    "\"https://www.wolframcloud.com/obj/vg22242/Graf-mladoletnih-in-\
polnoletnih-obsojenih\"", 
     "https://www.wolframcloud.com/obj/vg22242/Graf-mladoletnih-in-\
polnoletnih-obsojenih"},
    "HyperlinkURL"], "]"}],
  CloudObject[
  "https://www.wolframcloud.com/obj/vg22242/Graf-mladoletnih-in-polnoletnih-\
obsojenih"],
  SelectWithContents->True]], "Output",
 CellChangeTimes->{{3.933812352917738*^9, 3.93381239971249*^9}, {
   3.93381254180176*^9, 3.93381254886351*^9}, {3.933812606647165*^9, 
   3.93381267966427*^9}, {3.933812782852814*^9, 3.933812805355104*^9}, 
   3.9338129869121304`*^9, 3.9338131382661724`*^9, 3.933813176710844*^9, {
   3.933813348428684*^9, 3.933813372466334*^9}, 3.933813488934555*^9, 
   3.933818583253076*^9, 3.933819866528875*^9, 3.9339039082930965`*^9, 
   3.933905922756445*^9, 3.9339061515775414`*^9, {3.933906244240652*^9, 
   3.9339062511713123`*^9}, 3.9339063082289314`*^9, 3.9339063563717823`*^9},
 CellLabel->
  "Out[284]=",ExpressionUUID->"bbe2cbdf-5262-c946-ba93-036056c103bc"]
}, Open  ]],

Cell[BoxData["\[IndentingNewLine]"], "Input",
 CellChangeTimes->{{3.933813110247652*^9, 3.933813115811386*^9}, 
   3.933819661685602*^9},
 CellLabel->"In[67]:=",ExpressionUUID->"f5f52261-f8f6-b54f-9e2e-b3f5c8a2a412"]
}, Open  ]]
}, Open  ]]
},
WindowSize->{1152, 579.6},
WindowMargins->{{-1157.4, Automatic}, {Automatic, -5.3999999999999995`}},
Magnification:>1.1 Inherited,
FrontEndVersion->"14.0 for Microsoft Windows (64-bit) (December 12, 2023)",
StyleDefinitions->"Default.nb",
ExpressionUUID->"a9ca2aec-0a9c-e144-b8e7-f3dfa3609425"
]
(* End of Notebook Content *)

(* Internal cache information *)
(*CellTagsOutline
CellTagsIndex->{}
*)
(*CellTagsIndex
CellTagsIndex->{}
*)
(*NotebookFileOutline
Notebook[{
Cell[CellGroupData[{
Cell[580, 22, 258, 4, 107, "Title",ExpressionUUID->"269d62c9-4d7a-984c-b278-420cdf45c04b"],
Cell[841, 28, 358, 8, 38, "Text",ExpressionUUID->"e5562100-914b-f244-ae2b-048dc18ce1f9"],
Cell[CellGroupData[{
Cell[1224, 40, 169, 3, 58, "Subtitle",ExpressionUUID->"49d8da5b-0ebd-5f4d-96da-4deace7aafd3"],
Cell[1396, 45, 583, 12, 114, "Text",ExpressionUUID->"1cf334ac-02b6-904b-afda-97c60a93fcb0"],
Cell[1982, 59, 2578, 43, 115, "Input",ExpressionUUID->"6e468ade-a625-3443-9187-11271a976eb5"]
}, Open  ]],
Cell[CellGroupData[{
Cell[4597, 107, 219, 4, 58, "Subtitle",ExpressionUUID->"ecc50059-7314-6c4c-991e-abcd79c28c9a"],
Cell[4819, 113, 255, 4, 38, "Text",ExpressionUUID->"f1623cdf-ab31-3841-8f82-38e0cc5dd887"],
Cell[5077, 119, 3379, 73, 178, "Input",ExpressionUUID->"43efbc65-fe3b-3e41-9a1e-3fe691406e18"],
Cell[8459, 194, 303, 6, 38, "Text",ExpressionUUID->"fabd39ff-90f3-dd4c-ab25-6923c3cc42b7"],
Cell[8765, 202, 4936, 104, 534, "Input",ExpressionUUID->"7650c932-9b96-7c41-aa1f-bd7d9611950b"]
}, Open  ]],
Cell[CellGroupData[{
Cell[13738, 311, 233, 4, 58, "Subtitle",ExpressionUUID->"b5f1fe34-9c53-5148-b0d5-bcdce153dcc4"],
Cell[13974, 317, 450, 9, 38, "Text",ExpressionUUID->"36a63030-dc0d-5f45-ad96-241669fd2a9e"],
Cell[CellGroupData[{
Cell[14449, 330, 3749, 52, 73, "Input",ExpressionUUID->"94b2502b-d605-7145-9857-94641e49e5eb"],
Cell[18201, 384, 206134, 4165, 712, "Output",ExpressionUUID->"1f5c194a-2763-9348-9502-300ebb4a5479"]
}, Open  ]],
Cell[CellGroupData[{
Cell[224372, 4554, 4971, 84, 178, "Input",ExpressionUUID->"32f4678b-cec3-b742-bed7-cdc5cc01d856"],
Cell[229346, 4640, 343602, 7456, 269, "Output",ExpressionUUID->"179b2f22-9c0d-4343-9d2b-7de976586c8d"]
}, Open  ]],
Cell[572963, 12099, 627, 11, 63, "Text",ExpressionUUID->"e00ff3d5-2cfd-b147-b614-7194de205d6f"],
Cell[CellGroupData[{
Cell[573615, 12114, 1105, 16, 31, "Input",ExpressionUUID->"5494d1b6-e3fa-7e46-95ae-634906d50cbc"],
Cell[574723, 12132, 55031, 1043, 132, "Output",ExpressionUUID->"7385eaf5-2816-1643-8339-238fd324557c"]
}, Open  ]],
Cell[629769, 13178, 466, 9, 63, "Text",ExpressionUUID->"8319995e-3a5b-4c4a-9d6d-168b5642aa5b"]
}, Open  ]],
Cell[CellGroupData[{
Cell[630272, 13192, 386, 6, 58, "Subtitle",ExpressionUUID->"0f03558e-1cb7-9a4e-97e3-4371c2533db2"],
Cell[630661, 13200, 427, 8, 38, "Text",ExpressionUUID->"e675154a-620d-db4b-9761-85b90dd0a19e"],
Cell[631091, 13210, 439, 10, 31, "Input",ExpressionUUID->"f7c49d1b-f632-9b4d-9c6d-cd24daf8c72c"],
Cell[CellGroupData[{
Cell[631555, 13224, 1678, 41, 157, "Input",ExpressionUUID->"776ae8fc-497d-304e-80f7-25e3f52db02e"],
Cell[633236, 13267, 36208, 828, 274, "Output",ExpressionUUID->"69868b32-c990-cd48-9e3d-73109018aa9f"]
}, Open  ]],
Cell[669459, 14098, 342, 7, 38, "Text",ExpressionUUID->"818a57f5-06bd-a14b-a908-5dda925b6ad1"],
Cell[CellGroupData[{
Cell[669826, 14109, 614, 13, 52, "Input",ExpressionUUID->"e8368a98-1ca9-4041-be09-fd878572e331"],
Cell[670443, 14124, 77302, 1513, 225, "Output",ExpressionUUID->"415a1d30-4c9e-0845-a068-0648a64cffe5"]
}, Open  ]],
Cell[747760, 15640, 401, 8, 38, "Text",ExpressionUUID->"50b27eed-b1ae-0447-b741-d3a13773bfcc"],
Cell[CellGroupData[{
Cell[748186, 15652, 2520, 52, 220, "Input",ExpressionUUID->"82876ea1-1ac2-e446-b55c-80b705f927df"],
Cell[750709, 15706, 31794, 563, 194, "Output",ExpressionUUID->"70479b5f-a9e0-4a49-9068-024dfceb4f48"]
}, Open  ]],
Cell[782518, 16272, 261, 4, 38, "Text",ExpressionUUID->"96e29aab-6ce2-a546-af6b-05015dd20011"],
Cell[CellGroupData[{
Cell[782804, 16280, 578, 14, 52, "Input",ExpressionUUID->"f9c71d02-ccd6-cf4c-b05a-4ef521f9cf6e"],
Cell[783385, 16296, 31067, 557, 194, "Output",ExpressionUUID->"985c7ad7-efb8-a049-a0c1-26d11b01aac3"]
}, Open  ]],
Cell[814467, 16856, 566, 10, 63, "Text",ExpressionUUID->"97b2c418-ca59-ac40-9a25-67b608a4f86e"],
Cell[CellGroupData[{
Cell[815058, 16870, 1368, 35, 115, "Input",ExpressionUUID->"f8218c00-2a22-514b-a05a-d86d2bf181e0"],
Cell[816429, 16907, 961, 14, 35, "Output",ExpressionUUID->"5338fa41-6fdd-e54e-b12f-79ea0ab0ba34"],
Cell[817393, 16923, 106891, 2141, 348, "Output",ExpressionUUID->"7680da85-afbc-1e4e-a597-ba27641ca9fa"],
Cell[924287, 19066, 37134, 690, 163, "Output",ExpressionUUID->"9d4cfb5a-b9f1-f74a-91da-e22a7dffb82b"]
}, Open  ]],
Cell[961436, 19759, 525, 7, 52, "Input",ExpressionUUID->"12c79bc5-d383-f147-b81a-fb3d7de2572b"]
}, Open  ]],
Cell[CellGroupData[{
Cell[961998, 19771, 191, 3, 58, "Subtitle",ExpressionUUID->"dcd7b806-a2ae-2b41-a5ff-429ebe55a3e2"],
Cell[962192, 19776, 298, 6, 38, "Text",ExpressionUUID->"e0fd23b8-3b0c-2f4c-94d8-d42d50cb9700"],
Cell[CellGroupData[{
Cell[962515, 19786, 613, 12, 73, "Input",ExpressionUUID->"e7e8d551-07e0-1547-b2a2-b6f3e7aa9c4d"],
Cell[963131, 19800, 77377, 1514, 225, "Output",ExpressionUUID->"b08ea430-ef3c-f243-adc1-53a5ac68349c"],
Cell[1040511, 21316, 77307, 1514, 225, "Output",ExpressionUUID->"3c7fd514-5b77-1747-af33-b916394c3afe"]
}, Open  ]],
Cell[1117833, 22833, 398, 8, 63, "Text",ExpressionUUID->"744bf0b8-bc21-4d4e-a71b-94382ea0b565"],
Cell[CellGroupData[{
Cell[1118256, 22845, 2127, 55, 262, "Input",ExpressionUUID->"8fa258dd-35b4-0b42-be67-49b803507d65"],
Cell[1120386, 22902, 78403, 1529, 225, "Output",ExpressionUUID->"18295405-c549-2a48-bb7d-14cd0db08643"]
}, Open  ]],
Cell[1198804, 24434, 593, 10, 63, "Text",ExpressionUUID->"e89e0265-0d57-7045-9571-3060c2b737a6"],
Cell[CellGroupData[{
Cell[1199422, 24448, 1371, 32, 115, "Input",ExpressionUUID->"7775cd97-1087-ff41-afee-aca3a7d22935"],
Cell[1200796, 24482, 22247, 387, 70, "Output",ExpressionUUID->"51e69b72-b57f-e14a-8934-b1982965cf66"],
Cell[1223046, 24871, 22239, 388, 70, "Output",ExpressionUUID->"302ba014-9e31-224a-abaa-abc5941d207e"]
}, Open  ]],
Cell[CellGroupData[{
Cell[1245322, 25264, 3276, 74, 262, "Input",ExpressionUUID->"00208d7b-9e2e-1e4a-98d7-5747ed2a50cb"],
Cell[1248601, 25340, 64299, 1388, 194, "Output",ExpressionUUID->"5e9955c2-714b-a24b-8399-e801c4cd31f9"]
}, Open  ]],
Cell[CellGroupData[{
Cell[1312937, 26733, 1146, 28, 94, "Input",ExpressionUUID->"29bcf9fb-f46d-1a40-aba6-7c0f35a62e7c"],
Cell[1314086, 26763, 24520, 432, 101, "Output",ExpressionUUID->"2f16fcda-d9f0-ea42-96ad-7a2b0db013c3"]
}, Open  ]],
Cell[1338621, 27198, 493, 9, 63, "Text",ExpressionUUID->"2a8575f8-8a65-af40-a06e-50f510f58f80"]
}, Open  ]],
Cell[CellGroupData[{
Cell[1339151, 27212, 262, 4, 58, "Subtitle",ExpressionUUID->"e783ab6a-a0ac-664e-9baf-2e939fa7667d"],
Cell[1339416, 27218, 293, 5, 38, "Text",ExpressionUUID->"38d2afb0-0ed5-3742-9a1d-defd1dd409a2"],
Cell[1339712, 27225, 277, 6, 38, "Text",ExpressionUUID->"5ee971c7-e340-8c4d-a5e7-a42b0020333f"],
Cell[CellGroupData[{
Cell[1340014, 27235, 3663, 77, 366, "Input",ExpressionUUID->"9526dd65-dfb7-5244-a115-07d362d5853c"],
Cell[1343680, 27314, 30187, 696, 434, "Output",ExpressionUUID->"91e46f23-aed8-8244-b365-c3438dc642c4"],
Cell[1373870, 28012, 30200, 696, 428, "Output",ExpressionUUID->"311ab5d9-6237-2044-9bf0-686863663b26"]
}, Open  ]],
Cell[1404085, 28711, 173, 2, 31, "Input",ExpressionUUID->"de62a3e9-2ac0-a544-bbe2-863a7705b259"],
Cell[1404261, 28715, 299, 7, 38, "Text",ExpressionUUID->"d5a054a5-7e6c-154b-93a8-495dde8138a5"],
Cell[CellGroupData[{
Cell[1404585, 28726, 515, 9, 52, "Input",ExpressionUUID->"0f6e3e32-bfc2-3942-b6da-43ae9ade0375"],
Cell[1405103, 28737, 30488, 699, 425, "Output",ExpressionUUID->"ea08d2ad-3531-bb4d-9962-9596335476ff"]
}, Open  ]],
Cell[1435606, 29439, 358, 7, 38, "Text",ExpressionUUID->"458c1770-00a4-2a46-8471-0f98aa01eefb"],
Cell[CellGroupData[{
Cell[1435989, 29450, 318, 5, 52, "Input",ExpressionUUID->"812ef3af-e5a2-134b-a20e-d5c87d83f55e"],
Cell[1436310, 29457, 30203, 694, 428, "Output",ExpressionUUID->"29ffad91-d856-924e-b59a-08e854510a80"]
}, Open  ]],
Cell[1466528, 30154, 270, 6, 38, "Text",ExpressionUUID->"63c62a40-c10b-9f4b-a790-0e2204856be6"],
Cell[CellGroupData[{
Cell[1466823, 30164, 269, 4, 52, "Input",ExpressionUUID->"289459a4-d271-1c42-9e8c-cc7ae06cfd0d"],
Cell[1467095, 30170, 30192, 694, 434, "Output",ExpressionUUID->"7e18b02a-fa59-0344-8dfe-d26646602d7f"]
}, Open  ]],
Cell[1497302, 30867, 175, 2, 31, "Input",ExpressionUUID->"1078469d-9d18-1c4b-861d-25cf2d18f9af"],
Cell[1497480, 30871, 331, 7, 38, "Text",ExpressionUUID->"4bc5a671-1552-8f41-8ea9-3b9d48764a9e"],
Cell[CellGroupData[{
Cell[1497836, 30882, 2300, 47, 178, "Input",ExpressionUUID->"7f77a3c9-b686-6648-b746-2b60d87167ac"],
Cell[1500139, 30931, 8180, 154, 794, "Output",ExpressionUUID->"2190565d-f101-f949-9045-ed50aa301449"],
Cell[1508322, 31087, 1105, 22, 40, "Output",ExpressionUUID->"bbe2cbdf-5262-c946-ba93-036056c103bc"]
}, Open  ]],
Cell[1509442, 31112, 216, 3, 52, "Input",ExpressionUUID->"f5f52261-f8f6-b54f-9e2e-b3f5c8a2a412"]
}, Open  ]]
}, Open  ]]
}
]
*)

